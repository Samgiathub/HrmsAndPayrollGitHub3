

------------------------------------------------------
-------ADDED BY JIMIT 29062018-------------------------
-----FOR ENPAY REPORT OF  MAN POWER DETAIL---
---28/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
-------------------------------------------------------
CREATE PROCEDURE [dbo].[RPT_MANPOWER_DETAILS_REPORT]  
	 @CMP_ID		NUMERIC  
	,@FROM_DATE		DATETIME
	,@TO_DATE 		DATETIME
	,@BRANCH_ID		NUMERIC	
	,@GRD_ID 		NUMERIC
	,@TYPE_ID 		NUMERIC
	,@DEPT_ID 		NUMERIC
	,@DESIG_ID 		NUMERIC
	,@EMP_ID 		NUMERIC
	,@CONSTRAINT	VARCHAR(MAX)
	,@CAT_ID        NUMERIC = 0
	,@IS_COLUMN		TINYINT = 0	
	,@SEGMENT_ID	NUMERIC = 0 
	,@VERTICAL		NUMERIC = 0 
	,@SUBVERTICAL	NUMERIC = 0 
	,@SUBBRANCH		NUMERIC = 0 
	,@SUMMARY		VARCHAR(MAX)=''
	,@SUMMARY2		VARCHAR(MAX)=''
	,@SUMMARY3		VARCHAR(MAX)=''
	--,@TYPE			VARCHAR(100) = '0'
	,@ORDER_BY		VARCHAR(30) = 'CODE' 	
AS  
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON

	
			CREATE TABLE #EMP_CONS 
			(
				EMP_ID	NUMERIC ,     
				BRANCH_ID NUMERIC,
				INCREMENT_ID NUMERIC 
			)
	
		
		
		EXEC SP_RPT_FILL_EMP_CONS	@CMP_ID,@FROM_DATE,@TO_DATE,@BRANCH_ID,@CAT_ID,@GRD_ID,@TYPE_ID,@DEPT_ID,@DESIG_ID,@EMP_ID,
								@CONSTRAINT,0,0,0,0,0,0,0,0,0,0,0,0   
								
					
					--Declare @Temp_From_date as datetime
					--Declare @Temp_To_date as datetime
					--SET @Temp_To_date = @TO_DATE
					--SET @Temp_From_date = @FROM_DATE
			

					IF OBJECT_ID('DBO.TEMPDB..#MONTHNAME') IS NOT NULL
						DROP TABLE #MONTHNAME
					
					CREATE TABLE #MONTHNAME(ID INT,FOR_DATE DATETIME) --MONTH_NAME VARCHAR(15),

					

					IF day(@FROM_DATE) = 1 
						BEGIN
							INSERT 
							INTO	#MONTHNAME
							SELECT  ROW_NUMBER() OVER(ORDER BY NUMBER) ROW_ID ,
									--DATENAME(MONTH, DATEADD(MONTH, X.NUMBER, @FROM_DATE)) AS MONTHNAME,
									DATEADD(MONTH,NUMBER,@FROM_DATE)
							FROM    MASTER.DBO.SPT_VALUES X 				
							WHERE   X.TYPE = 'P'        
							AND     X.NUMBER <= DATEDIFF(MONTH, @FROM_DATE, @TO_DATE);
						END
					ELse
						BEGIN
								
								INSERT 
								INTO	#MONTHNAME
								SELECT  ROW_NUMBER() OVER(ORDER BY NUMBER) ROW_ID ,
									--DATENAME(MONTH, DATEADD(MONTH, X.NUMBER, @FROM_DATE)) AS MONTHNAME,
									DATEADD(MONTH,NUMBER + 1,@FROM_DATE)
								FROM    MASTER.DBO.SPT_VALUES X 				
								WHERE   X.TYPE = 'P'        
								AND     X.NUMBER < DATEDIFF(MONTH, @FROM_DATE, @TO_DATE);
								
								--Declare @Flag as Int
								--SET @Flag = 1
								--While (@Temp_From_date <= @To_date)
								--	BEgin
										
								--		INSERT 
								--		INTO	#MONTHNAME
								--		Values	(@Flag,DAteadd(d,-1,DAteAdd(m,1,@Temp_From_date)))

								--		SET @Flag = @Flag + 1
								--		SET @Temp_From_date = DAteAdd(m,1,@Temp_From_date)
								--	END
							
						END

		

					CREATE TABLE #MANPOWERDETAIL
						(
							ID		NUMERIC,
							EMP_ID	NUMERIC,							
							[FOR_DATE]  DATETIME						
						)	
			
			
							
					INSERT INTO #MANPOWERDETAIL(ID,EMP_ID,[FOR_DATE])		
					SELECT	ID,EC.EMP_ID,FOR_DATE
					FROM	#EMP_CONS EC CROSS APPLY
							#MONTHNAME
								
					
					
					DECLARE @VAL NVARCHAR(MAX)
					SET @VAL = ''
					SET @VAL = @VAL + ' ALTER TABLE  #MANPOWERDETAIL ADD EMP_CODE VARCHAR(10) DEFAULT '''';	ALTER TABLE  #MANPOWERDETAIL ADD ALPHA_EMP_CODE VARCHAR(50) DEFAULT '''';
									ALTER TABLE  #MANPOWERDETAIL ADD EMP_FULL_NAME VARCHAR(50) DEFAULT '''';ALTER TABLE  #MANPOWERDETAIL ADD DEPARTMENT VARCHAR(50) DEFAULT '''';
									ALTER TABLE  #MANPOWERDETAIL ADD BRANCH_NAME VARCHAR(50) DEFAULT ''''; ALTER TABLE  #MANPOWERDETAIL ADD DESIGNATION VARCHAR(50) DEFAULT '''';
									ALTER TABLE  #MANPOWERDETAIL ADD GRADE VARCHAR(50) DEFAULT ''''; ALTER TABLE  #MANPOWERDETAIL ADD TYPENAME VARCHAR(50) DEFAULT '''';						
									ALTER TABLE  #MANPOWERDETAIL ADD CATEGORY VARCHAR(50) DEFAULT '''';ALTER TABLE  #MANPOWERDETAIL ADD VERTICAL_NAME VARCHAR(50) DEFAULT '''';
									ALTER TABLE  #MANPOWERDETAIL ADD SUB_VERTICAL VARCHAR(50) DEFAULT '''';ALTER TABLE  #MANPOWERDETAIL ADD SUB_BRANCH VARCHAR(50) DEFAULT '''';
									ALTER TABLE  #MANPOWERDETAIL ADD SEGMENT_NAME VARCHAR(50) DEFAULT '''';ALTER TABLE  #MANPOWERDETAIL ADD CENTER_CODE VARCHAR(50) DEFAULT '''';
									ALTER TABLE  #MANPOWERDETAIL ADD BRANCH_ID NUMERIC DEFAULT 0; ALTER TABLE  #MANPOWERDETAIL ADD DESIG_ID NUMERIC DEFAULT 0;
									ALTER TABLE  #MANPOWERDETAIL ADD GRD_ID NUMERIC DEFAULT 0; ALTER TABLE  #MANPOWERDETAIL ADD TYPE_ID NUMERIC DEFAULT 0;						
									ALTER TABLE  #MANPOWERDETAIL ADD CAT_ID NUMERIC DEFAULT 0;ALTER TABLE  #MANPOWERDETAIL ADD VERTICAL_ID NUMERIC DEFAULT 0;
									ALTER TABLE  #MANPOWERDETAIL ADD SUBVERTICAL_ID NUMERIC DEFAULT 0;ALTER TABLE  #MANPOWERDETAIL ADD SUBBRANCH_ID  NUMERIC DEFAULT 0;
									ALTER TABLE  #MANPOWERDETAIL ADD SEGMENT_ID NUMERIC DEFAULT 0;ALTER TABLE  #MANPOWERDETAIL ADD CENTER_ID NUMERIC DEFAULT 0
									ALTER TABLE  #MANPOWERDETAIL ADD DEPT_ID NUMERIC DEFAULT 0;'
					
						EXEC (@VAL);	
	
					
					
					UPDATE  AH
						SET		AH.EMP_CODE = Q.EMP_CODE,AH.ALPHA_EMP_CODE = Q.ALPHA_EMP_CODE,AH.EMP_FULL_NAME = Q.EMP_FULL_NAME,
								AH.DEPARTMENT = Q.DEPT_NAME,AH.BRANCH_NAME = Q.BRANCH_NAME,AH.DESIGNATION = Q.DESIG_NAME,
								AH.GRADE = Q.GRD_NAME,AH.TYPENAME = Q.[TYPE_NAME],AH.CATEGORY = Q.CATEGORY,
								AH.VERTICAL_NAME = Q.VERTICAL_NAME,AH.SUB_VERTICAL = Q.SUBVERTICAL_NAME,AH.SUB_BRANCH = Q.SUBBRANCH_NAME,
								AH.SEGMENT_NAME = Q.SEGMENT_NAME,AH.CENTER_CODE = Q.CENTER_CODE,
								AH.BRANCH_ID = Q.Branch_ID,	AH.DESIG_ID = Q.Desig_ID,
								AH.GRD_ID = Q.GRD_ID,AH.TYPE_ID = Q.TYPE_ID,AH.CAT_ID = Q.CAT_ID,
								AH.VERTICAL_Id = Q.VERTICAL_Id,AH.SUBVERTICAL_ID = Q.SUBVERTICAL_ID,AH.SUBBRANCH_ID = Q.SUBBRANCH_ID,
								AH.Segment_ID = Q.Segment_ID,AH.CENTER_Id = Q.CENTER_Id,AH.DEPT_ID = Q.DEPT_ID				
						FROM    #MANPOWERDETAIL AH INNER JOIN
								(
									SELECT		E.CMP_ID,E.EMP_ID,E.EMP_CODE,E.ALPHA_EMP_CODE,ISNULL(E.EMPNAME_ALIAS_SALARY,E.EMP_FULL_NAME) AS EMP_FULL_NAME,
												DM.DEPT_NAME,BM.BRANCH_ID,BM.BRANCH_NAME,
												DNM.DESIG_NAME,GA.GRD_NAME,TM.TYPE_NAME,CT.CAT_NAME AS CATEGORY,VT.VERTICAL_NAME,ST.SUBVERTICAL_NAME,SB.SUBBRANCH_NAME,
												BSG.SEGMENT_NAME,CC.CENTER_CODE,GA.Grd_ID,TM.Type_ID,CT.Cat_ID,VT.Vertical_ID,ST.SubVertical_ID,
												SB.SubBranch_ID,BSG.Segment_ID,CC.Center_ID,DNM.Desig_ID,DM.Dept_Id
									FROM		T0080_EMP_MASTER E	WITH (NOLOCK) INNER JOIN
												( 
													SELECT	I.EMP_ID,I.BASIC_SALARY,I.CTC,I.INC_BANK_AC_NO,PAYMENT_MODE,I.BRANCH_ID,I.GRD_ID,I.DEPT_ID,
															I.DESIG_ID,I.TYPE_ID,I.CAT_ID,I.VERTICAL_ID,I.SUBVERTICAL_ID,I.SUBBRANCH_ID,I.SEGMENT_ID,I.CENTER_ID 
													FROM	T0095_INCREMENT I WITH (NOLOCK) INNER JOIN 
															( 
																SELECT	MAX(INCREMENT_ID) AS INCREMENT_ID , EMP_ID 
																FROM	T0095_INCREMENT WITH (NOLOCK)
																WHERE	INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @CMP_ID
																GROUP BY EMP_ID 
															 ) QRY ON	I.EMP_ID = QRY.EMP_ID	AND I.INCREMENT_ID = QRY.INCREMENT_ID 
												 )INC_QRY ON E.EMP_ID = INC_QRY.EMP_ID INNER JOIN 
												 #EMP_CONS EC ON E.EMP_ID = EC.EMP_ID LEFT OUTER JOIN 
												 T0030_BRANCH_MASTER BM WITH (NOLOCK) ON INC_QRY.BRANCH_ID = BM.BRANCH_ID	LEFT OUTER JOIN 
												 T0040_DEPARTMENT_MASTER DM WITH (NOLOCK) ON INC_QRY.DEPT_ID = DM.DEPT_ID	LEFT OUTER JOIN 
												 T0040_DESIGNATION_MASTER DNM WITH (NOLOCK) ON INC_QRY.DESIG_ID = DNM.DESIG_ID LEFT OUTER JOIN 
												 T0040_TYPE_MASTER TM WITH (NOLOCK) ON INC_QRY.TYPE_ID = TM.TYPE_ID LEFT OUTER JOIN 
												 T0030_CATEGORY_MASTER CT WITH (NOLOCK) ON CT.CAT_ID=INC_QRY.CAT_ID LEFT OUTER JOIN 
												 T0040_VERTICAL_SEGMENT VT WITH (NOLOCK) ON VT.VERTICAL_ID=INC_QRY.VERTICAL_ID LEFT OUTER JOIN 
												 T0050_SUBVERTICAL ST WITH (NOLOCK) ON ST.SUBVERTICAL_ID=INC_QRY.SUBVERTICAL_ID LEFT OUTER JOIN 
												 T0050_SUBBRANCH SB WITH (NOLOCK) ON SB.SUBBRANCH_ID=INC_QRY.SUBBRANCH_ID LEFT OUTER JOIN 
												 T0040_BUSINESS_SEGMENT BSG WITH (NOLOCK) ON BSG.SEGMENT_ID=INC_QRY.SEGMENT_ID LEFT OUTER JOIN 
												 T0040_COST_CENTER_MASTER CC WITH (NOLOCK) ON CC.CENTER_ID = INC_QRY.CENTER_ID LEFT OUTER JOIN 
												 T0040_GRADE_MASTER GA WITH (NOLOCK) ON INC_QRY.GRD_ID = GA.GRD_ID
								)Q ON Q.EMP_ID = AH.EMP_ID
						--WHERE  AH.ID = 1
					
						
					
						SET @VAL = ''
					
						SET @VAL = @VAL + 'ALTER TABLE  #MANPOWERDETAIL ADD SALARY_AMOUNT NUMERIC(18,2) DEFAULT 0;'
										   --ALTER TABLE  #MANPOWERDETAIL ADD OVERTIME_BLUE_COLLOR NUMERIC(18,2) DEFAULT 0;
										   --ALTER TABLE  #MANPOWERDETAIL ADD TOTAL NUMERIC(18,2) DEFAULT 0;'
										   --ALTER TABLE  #MANPOWERDETAIL ADD TOTAL_BLUE NUMERIC(18,2) DEFAULT 0;'	
								
						 EXEC(@VAL);
						
						  UPDATE	AH
						  SET		AH.SALARY_AMOUNT = ISNULL(Q.NET_AMOUNT,0)
									
						  FROM		#MANPOWERDETAIL AH INNER JOIN
									(
										SELECT  AH.EMP_ID,NET_AMOUNT,
												MONTH([FOR_DATE]) as [Month],YEAR([FOR_DATE]) as [YEAR]
										FROM	T0200_MONTHLY_SALARY MS WITH (NOLOCK) INNER JOIN
												#MANPOWERDETAIL AH ON AH.EMP_ID = MS.Emp_ID AND 
												MONTH(MS.Month_End_Date) = MONTH([FOR_DATE]) AND 
												YEAR(MS.Month_End_Date) = YEAR([FOR_DATE])										 																				
								)Q ON Q.EMP_ID = AH.EMP_ID AND q.[Month] = MONTH(AH.[FOR_DATE]) AND q.[YEAR] = YEAR(AH.[FOR_DATE])
						
						
						  
					CREATE TABLE #MANPOWER_DETAIL
						(
							EMP_ID		NUMERIC,							
							[FOR_DATE]  DATETIME,
							PARENT_ID	NUMERIC,
							CHILD_ID	NUMERIC,
							NET_SALARY	NUMERIC(18,2),
							PARENT_NAME VARCHAR(50),
							CHILD_NAME	VARCHAR(50),
							LABEL_NAME  VARCHAR(250)											
						)	
						
						
					DECLARE @STRING AS VARCHAR(MAX)
					SET @STRING=''
					
					DECLARE @STRING_2 AS VARCHAR(MAX)
					SET @STRING_2=''
					
					DECLARE @STRING_3 AS VARCHAR(MAX)
					SET @STRING_3=''
					
					IF @SUMMARY2 = '' OR @SUMMARY2 = '-1'
					SET @SUMMARY2 = '0'
		
					--IF @SUMMARY3 = '' OR @SUMMARY3 = '-1'
					--SET @SUMMARY3 = NULL
					
					DECLARE @STRING_1 VARCHAR(MAX)
					SET @STRING_1 = ''
					IF EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE NAME = 'TEMPGROUP2')
						DROP TABLE TEMPGROUP2
					
					IF EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE NAME = 'TEMPGROUP3')
						DROP TABLE TEMPGROUP3
						
					IF @SUMMARY2 IS NOT NULL
						BEGIN
							SET @STRING_2 = 'SELECT (CASE WHEN '+ @SUMMARY2 +'=''0'' THEN ''BRANCH_NAME'' WHEN '+ @SUMMARY2 +' =''1'' THEN ''GRADE'' WHEN '+ @SUMMARY2 +' =''2'' THEN ''CATEGORY'' WHEN '+ @SUMMARY2 +' =''3'' THEN ''DEPARTMENT'' WHEN '+ @SUMMARY2 +' =''4'' THEN ''DESIGNATION'' WHEN '+ @SUMMARY2 +' =''5'' THEN ''TYPENAME'' WHEN '+ @SUMMARY2 +' =''6'' THEN ''VERTICAL_NAME'' WHEN '+ @SUMMARY2 +' =''7'' THEN ''SUB_VERTICAL'' WHEN '+ @SUMMARY2 +' =''8'' THEN ''SUB_BRANCH'' WHEN '+ @SUMMARY2 +' =''9'' THEN ''SEGMENT_NAME'' WHEN '+ @SUMMARY2 +' =''10'' THEN ''CENTER_CODE'' END ) AS DESCRIPTION INTO TEMPGROUP2'
							EXEC(@STRING_2)
							SELECT @STRING_2 = DESCRIPTION FROM TEMPGROUP2
							--SET @STRING_2 = ','+ @STRING_2
							
							SET @STRING_3 = 'SELECT (CASE WHEN '+ @SUMMARY2 +'=''0'' THEN ''BRANCH_ID'' WHEN '+ @SUMMARY2 +' =''1'' THEN ''GRD_ID'' WHEN '+ @SUMMARY2 +' =''2'' THEN ''CAT_ID'' WHEN '+ @SUMMARY2 +' =''3'' THEN ''DEPT_ID'' WHEN '+ @SUMMARY2 +' =''4'' THEN ''DESIG_ID'' WHEN '+ @SUMMARY2 +' =''5'' THEN ''TYPE_ID'' WHEN '+ @SUMMARY2 +' =''6'' THEN ''VERTICAL_ID'' WHEN '+ @SUMMARY2 +' =''7'' THEN ''SUBVERTICAL_ID'' WHEN '+ @SUMMARY2 +' =''8'' THEN ''SUBBRANCH_ID'' WHEN '+ @SUMMARY2 +' =''9'' THEN ''SEGMENT_ID'' WHEN '+ @SUMMARY2 +' =''10'' THEN ''CENTER_ID'' END ) AS DESCRIPTION INTO TEMPGROUP3'
							EXEC(@STRING_3)
							SELECT @STRING_3 = DESCRIPTION FROM TEMPGROUP3
							--SET @STRING_3 = ','+ @STRING_3
							
						END 					
							
					--IF @SUMMARY3 IS NOT NULL
					--	BEGIN
					--		SET @STRING_3 = 'SELECT (CASE WHEN '+ @SUMMARY3 +'=''0'' THEN ''AH.BRANCH_NAME'' WHEN '+ @SUMMARY3 +' =''1'' THEN ''AH.GRADE'' WHEN '+ @SUMMARY3 +' =''2'' THEN ''AH.CATEGORY'' WHEN '+ @SUMMARY3 +' =''3'' THEN ''DEPARTMENT'' WHEN '+ @SUMMARY3 +' =''4'' THEN ''DESIGNATION'' WHEN '+ @SUMMARY3 +' =''5'' THEN ''TYPENAME'' WHEN '+ @SUMMARY3 +' =''6'' THEN ''DIVISION'' WHEN '+ @SUMMARY3 +' =''7'' THEN ''SUB_VERTICAL'' WHEN '+ @SUMMARY3 +' =''8'' THEN ''SUB_BRANCH'' WHEN '+ @SUMMARY3 +' =''9'' THEN ''SEGMENT_NAME'' WHEN '+ @SUMMARY3 +' =''10'' THEN ''CENTER_CODE'' END ) AS DESCRIPTION INTO TEMPGROUP3'
					--		EXEC(@STRING_3)
					--		SELECT @STRING_3 = DESCRIPTION FROM TEMPGROUP3
					--		SET @STRING_3 = ','+ @STRING_3
					--	END	
						
					DECLARE @SQL VARCHAR(MAX)
					DECLARE @COLS VARCHAR(MAX)
					
					
					
					IF @SUMMARY='0' --------FOR GROUPBY BRANCH---------------------------
						BEGIN 	
							
							SET @STRING = ' SELECT EMP_Id,FOR_DATE,BRANCH_ID as PARENT_ID,' + @STRING_3 +' as CHILD_ID,ISNULL(SALARY_AMOUNT,0) AS NET_SALARY,
											AH.BRANCH_NAME AS PARENT_NAME,' + @STRING_2 +' as  CHILD_NAME 
											,AH.BRANCH_NAME  + ''-'' +' + @STRING_2 + '   AS LABEL_NAME' 

							
							SET @STRING = @STRING + ' INTO ##BRANCH FROM #MANPOWERDETAIL AH' --GROUP BY BRANCH_NAME'+ @STRING_2 +''--WHERE SAL_CAL_DAY <> 0
							
							PRINT (@STRING)
							EXEC(@STRING)
							
							
							--INSERT INTO ##BRANCH(EMP_ID,FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT  AH.EMP_ID,FOR_DATE,999 AS PARENT_ID,9999 AS Child_ID,MS.OT_AMOUNT,'' as PARENT_NAME
							--						,'OVERTIME' as CHILD_NAME,
							--						'OVERTIME' as LABEL_NAME
							--				FROM	T0200_MONTHLY_SALARY MS INNER JOIN 
							--						#MANPOWERDETAIL AH ON AH.EMP_ID = MS.Emp_ID AND 
							--						MONTH(MS.Month_End_Date) = MONTH([FOR_DATE]) AND 
							--						YEAR(MS.Month_End_Date) = YEAR([FOR_DATE])										
							--			)Q
							
							
						
							--INSERT INTO ##BRANCH(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT		FOR_DATE,99999 AS PARENT_ID,999999 AS Child_ID,ISNULL(SUM(NET_SALARY),0) AS NET_SALARY,
							--							'' as PARENT_NAME,'TOTAL' as CHILD_NAME,'TOTAL' as LABEL_NAME
							--				FROM		##BRANCH
							--				GROUP BY 	FOR_DATE										
							--			)Q	
										
							
							--SELECT		AH.FOR_DATE,ISNULL(SUM(SALARY_AMOUNT),0) AS NET_SALARY,
							--							'TOTAL'+'-'+ GRADE as CHILD_NAME,
							--							'TOTAL'+'-'+GRADE as LABEL_NAME
							--				FROM		#MANPOWERDETAIL AH 
							--				GROUP BY 	GRADE,AH.FOR_DATE
							
							SET @STRING = 'INSERT INTO ##BRANCH(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT		AH.FOR_DATE,99999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,ISNULL(SUM(SALARY_AMOUNT),0) AS NET_SALARY,
														(''TOTAL''+''-''+ AH.BRANCH_NAME)  as PARENT_NAME,''TOTAL''+''-''+ ' + @STRING_2 + ' as CHILD_NAME,
														''TOTAL''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM		#MANPOWERDETAIL AH 	
											GROUP BY 	' + @STRING_3 + ',AH.FOR_DATE,AH.BRANCH_NAME,' + @STRING_2 + '
										)Q'
							--PRINT @STRING
							EXEC(@STRING)
							
							
												
							SET @STRING = 'INSERT INTO ##BRANCH(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT  AH.FOR_DATE,9999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,SUM(ISNULL(MS.M_AD_AMOUNT,0)) as OT_AMOUNT
													,(''OVERTIME''+''-''+ AH.BRANCH_NAME)  as PARENT_NAME,''OVERTIME''+''-''+ ' + @STRING_2 + ' as CHILD_NAME
													,''OVERTIME''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM	#MANPOWERDETAIL AH LEFT OUTER JOIN 
													T0210_MONTHLY_AD_DETAIL MS WITH (NOLOCK) ON AH.EMP_ID = MS.Emp_ID INNER JOIN 
													T0050_AD_MASTER A WITH (NOLOCK) ON MS.AD_ID = A.AD_ID AND MS.CMP_ID = A.CMP_ID
											WHERE	MS.CMP_ID = ' + CONVERT(VARCHAR(5),@CMP_ID) + ' AND MONTH(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),MONTH(@TO_DATE)) +'''  AND YEAR(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),YEAR(@TO_DATE)) + '''
													AND AD_ACTIVE = 1 
													AND ISNULL(MS.M_AD_NOT_EFFECT_SALARY,0) = 1 
													AND MS.S_SAL_TRAN_ID IS NULL  
													ANd UPPER(A.AD_CALCULATE_ON) = ''TRANSFER OT''
											GROUP BY ' + @STRING_3 + ',AH.FOR_DATE,AH.BRANCH_NAME,' + @STRING_2 + '
										)Q'
							print @STRING
							EXEC(@STRING)
						
						
							
							--SET @STRING = 'SELECT * FROM ##BRANCH ORDER BY FOR_DATE,EMP_ID';
							
							--EXEC(@STRING)
							
							UPDATE	##BRANCH
							SET		LABEL_NAME = PARENT_NAME
							WHERE	PARENT_NAME = CHILD_NAME
							
							
							
							SELECT	@COLS = COALESCE(@COLS + ',','')  + '[' + ISNULL(PL.LABEL_NAME,'') + ']'
							FROM	(
										SELECT		DISTINCT LABEL_NAME,PARENT_ID
										FROM		##BRANCH										
									) PL
							ORDER BY PARENT_ID,LABEL_NAME											
							  
							
							  
							  SET @SQL = '	SELECT	ROW_NUMBER() OVER (ORDER BY PVT.FOR_DATE) As SR_No,*
											FROM	 
												(								
													SELECT	LEFT(DATENAME(MONTH,FOR_DATE),3) + ''-'' + CONVERT(VARCHAR(5),DATEPART(YEAR,FOR_DATE)) AS MONTH,
															LABEL_NAME,NET_SALARY,FOR_DATE
													FROM	##BRANCH P													
												) YS 
												PIVOT 
												(
													SUM(NET_SALARY) FOR LABEL_NAME IN (' + @COLS + ')
												) PVT'
							  
							EXEC (@SQL)
							--Print @SQL
							
							SET @STRING = 'DROP TABLE ##BRANCH';	
							
							EXEC(@STRING)
							
							
							
						END
					ELSE IF @SUMMARY='1' --------FOR GROUPBY GRADE---------------------------
						BEGIN 	
							
							SET @STRING = ' SELECT EMP_Id,FOR_DATE,GRD_ID as PARENT_ID,' + @STRING_3 +' as CHILD_ID,ISNULL(SALARY_AMOUNT,0) AS NET_SALARY,
											AH.GRADE AS PARENT_NAME,' + @STRING_2 +' as  CHILD_NAME 
											,AH.GRADE  + ''-'' +' + @STRING_2 + '   AS LABEL_NAME'  

							
							SET @STRING = @STRING + ' INTO ##GRADE FROM #MANPOWERDETAIL AH' --GROUP BY BRANCH_NAME'+ @STRING_2 +''--WHERE SAL_CAL_DAY <> 0
							
							print @STRING
							EXEC(@STRING)
							
							--INSERT INTO ##GRADE(EMP_ID,FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT  AH.EMP_ID,FOR_DATE,999 AS PARENT_ID,9999 AS Child_ID,MS.OT_AMOUNT,'' as PARENT_NAME,'OVERTIME' as CHILD_NAME,
							--						'OVERTIME' as LABEL_NAME
							--				FROM	T0200_MONTHLY_SALARY MS INNER JOIN 
							--						#MANPOWERDETAIL AH ON AH.EMP_ID = MS.Emp_ID AND 
							--						MONTH(MS.Month_End_Date) = MONTH([FOR_DATE]) AND 
							--						YEAR(MS.Month_End_Date) = YEAR([FOR_DATE])										
							--			)Q
							
							
						
							--INSERT INTO ##GRADE(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT		FOR_DATE,99999 AS PARENT_ID,999999 AS Child_ID,ISNULL(SUM(NET_SALARY),0) AS OT_AMOUNT,
							--							'' as PARENT_NAME,'TOTAL' as CHILD_NAME,'TOTAL' as LABEL_NAME
							--				FROM		##GRADE
							--				GROUP BY 	FOR_DATE										
							--			)Q				
							
							
							SET @STRING = 'INSERT INTO ##GRADE(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT		AH.FOR_DATE,99999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,ISNULL(SUM(SALARY_AMOUNT),0) AS NET_SALARY,
														(''TOTAL''+''-''+ AH.GRADE)  as PARENT_NAME,''TOTAL''+''-''+ ' + @STRING_2 + ' as CHILD_NAME,
														''TOTAL''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM		#MANPOWERDETAIL AH 	
											GROUP BY 	' + @STRING_3 + ',AH.FOR_DATE,AH.GRADE,' + @STRING_2 + '
										)Q'
							--PRINT @STRING
							EXEC(@STRING)
										
							SET @STRING = 'INSERT INTO ##GRADE(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT  AH.FOR_DATE,9999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,SUM(ISNULL(MS.M_AD_AMOUNT,0)) as OT_AMOUNT
													,(''OVERTIME''+''-''+ AH.GRADE)  as PARENT_NAME,''OVERTIME''+''-''+ ' + @STRING_2 + ' as CHILD_NAME
													,''OVERTIME''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM	#MANPOWERDETAIL AH LEFT OUTER JOIN 
													T0210_MONTHLY_AD_DETAIL MS WITH (NOLOCK) ON AH.EMP_ID = MS.Emp_ID  INNER JOIN 
													T0050_AD_MASTER A WITH (NOLOCK) ON MS.AD_ID = A.AD_ID AND MS.CMP_ID = A.CMP_ID
											WHERE	MS.CMP_ID = ' + CONVERT(VARCHAR(5),@CMP_ID) + ' AND MONTH(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),MONTH(@TO_DATE)) +'''  AND YEAR(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),YEAR(@TO_DATE)) + '''
													AND AD_ACTIVE = 1 
													AND ISNULL(MS.M_AD_NOT_EFFECT_SALARY,0) = 1 
													AND MS.S_SAL_TRAN_ID IS NULL  
													ANd UPPER(A.AD_CALCULATE_ON) = ''TRANSFER OT''	
											GROUP BY ' + @STRING_3 + ',AH.FOR_DATE,AH.GRADE,' + @STRING_2 + '
										)Q'
							--print @STRING
							EXEC(@STRING)
							
							UPDATE	##GRADE
							SET		LABEL_NAME = PARENT_NAME
							WHERE	PARENT_NAME = CHILD_NAME
							
							SELECT	@COLS = COALESCE(@COLS + ',','')  + '[' + PL.LABEL_NAME + ']'
							FROM	(
										SELECT		DISTINCT LABEL_NAME,PARENT_ID
										FROM		##GRADE										
									) PL
							ORDER BY PARENT_ID,LABEL_NAME												
							  
							  
							  SET @SQL = '	SELECT	ROW_NUMBER() OVER (ORDER BY PVT.FOR_DATE) As SR_No,*
											FROM	 
												(								
													SELECT	LEFT(DATENAME(MONTH,FOR_DATE),3) + ''-'' + CONVERT(VARCHAR(5),DATEPART(YEAR,FOR_DATE)) AS MONTH,
															LABEL_NAME,NET_SALARY,FOR_DATE
													FROM	##GRADE P													
												) YS 
												PIVOT 
												(
													SUM(NET_SALARY) FOR LABEL_NAME IN (' + @COLS + ')
												) PVT'
							  
							EXEC (@SQL)
							
							
							SET @STRING = 'DROP TABLE ##GRADE';	
							
							EXEC(@STRING)
							
							
							
						END		
					ELSE IF @SUMMARY='2' --------FOR GROUPBY CATEGORY---------------------------
						BEGIN 	
							
							SET @STRING = ' SELECT EMP_Id,FOR_DATE,CAT_ID as PARENT_ID,' + @STRING_3 +' as CHILD_ID,ISNULL(SALARY_AMOUNT,0) AS NET_SALARY,
											AH.CATEGORY AS PARENT_NAME,' + @STRING_2 +' as  CHILD_NAME 
											,AH.CATEGORY  + ''-'' +' + @STRING_2 + '   AS LABEL_NAME'  

							
							SET @STRING = @STRING + ' INTO ##CATEGORY FROM #MANPOWERDETAIL AH' --GROUP BY BRANCH_NAME'+ @STRING_2 +''--WHERE SAL_CAL_DAY <> 0
							
							
							EXEC(@STRING)
							
							--INSERT INTO ##CATEGORY(EMP_ID,FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT  AH.EMP_ID,FOR_DATE,999 AS PARENT_ID,9999 AS Child_ID,MS.OT_AMOUNT,'' as PARENT_NAME,'OVERTIME' as CHILD_NAME,
							--						'OVERTIME' as LABEL_NAME
							--				FROM	T0200_MONTHLY_SALARY MS INNER JOIN 
							--						#MANPOWERDETAIL AH ON AH.EMP_ID = MS.Emp_ID AND 
							--						MONTH(MS.Month_End_Date) = MONTH([FOR_DATE]) AND 
							--						YEAR(MS.Month_End_Date) = YEAR([FOR_DATE])										
							--			)Q
							
							
						
							--INSERT INTO ##CATEGORY(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT		FOR_DATE,99999 AS PARENT_ID,999999 AS Child_ID,ISNULL(SUM(NET_SALARY),0) AS OT_AMOUNT,
							--							'' as PARENT_NAME,'TOTAL' as CHILD_NAME,'TOTAL' as LABEL_NAME
							--				FROM		##CATEGORY
							--				GROUP BY 	FOR_DATE										
							--			)Q				
							
							
							SET @STRING = 'INSERT INTO ##CATEGORY(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT		AH.FOR_DATE,99999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,ISNULL(SUM(SALARY_AMOUNT),0) AS NET_SALARY,
														(''TOTAL''+''-''+ AH.CATEGORY)  as PARENT_NAME,''TOTAL''+''-''+ ' + @STRING_2 + ' as CHILD_NAME,
														''TOTAL''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM		#MANPOWERDETAIL AH 	
											GROUP BY 	' + @STRING_3 + ',AH.FOR_DATE,AH.CATEGORY,' + @STRING_2 + '
										)Q'
							--PRINT @STRING
							EXEC(@STRING)
										
							SET @STRING = 'INSERT INTO ##CATEGORY(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT  AH.FOR_DATE,9999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,SUM(ISNULL(MS.M_AD_AMOUNT,0)) as OT_AMOUNT
													,(''OVERTIME''+''-''+ AH.CATEGORY)  as PARENT_NAME,''OVERTIME''+''-''+ ' + @STRING_2 + ' as CHILD_NAME
													,''OVERTIME''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM	#MANPOWERDETAIL AH LEFT OUTER JOIN 
													T0210_MONTHLY_AD_DETAIL MS WITH (NOLOCK) ON AH.EMP_ID = MS.Emp_ID INNER JOIN 
													T0050_AD_MASTER A WITH (NOLOCK) ON MS.AD_ID = A.AD_ID AND MS.CMP_ID = A.CMP_ID
											WHERE	MS.CMP_ID = ' + CONVERT(VARCHAR(5),@CMP_ID) + ' AND MONTH(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),MONTH(@TO_DATE)) +'''  AND YEAR(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),YEAR(@TO_DATE)) + '''
													AND AD_ACTIVE = 1 
													AND ISNULL(MS.M_AD_NOT_EFFECT_SALARY,0) = 1 
													AND MS.S_SAL_TRAN_ID IS NULL  
													ANd UPPER(A.AD_CALCULATE_ON) = ''TRANSFER OT''
											GROUP BY ' + @STRING_3 + ',AH.FOR_DATE,AH.CATEGORY,' + @STRING_2 + '
										)Q'
							--print @STRING
							EXEC(@STRING)
							
							UPDATE	##CATEGORY
							SET		LABEL_NAME = PARENT_NAME
							WHERE	PARENT_NAME = CHILD_NAME
							
							SELECT	@COLS = COALESCE(@COLS + ',','')  + '[' + PL.LABEL_NAME + ']'
							FROM	(
										SELECT		DISTINCT LABEL_NAME,PARENT_ID
										FROM		##CATEGORY										
									) PL
							ORDER BY PARENT_ID,LABEL_NAME												
							  
							  
							  SET @SQL = '	SELECT	ROW_NUMBER() OVER (ORDER BY PVT.FOR_DATE) As SR_No,*
											FROM	 
												(								
													SELECT	LEFT(DATENAME(MONTH,FOR_DATE),3) + ''-'' + CONVERT(VARCHAR(5),DATEPART(YEAR,FOR_DATE)) AS MONTH,
															LABEL_NAME,NET_SALARY,FOR_DATE
													FROM	##CATEGORY P													
												) YS 
												PIVOT 
												(
													SUM(NET_SALARY) FOR LABEL_NAME IN (' + @COLS + ')
												) PVT'
							  
							EXEC (@SQL)
							
							
							SET @STRING = 'DROP TABLE ##CATEGORY';	
							
							EXEC(@STRING)
							
							
							
						END	
					ELSE IF @SUMMARY='3' --------FOR GROUPBY DEPARTMENT---------------------------
						BEGIN 	
							
							SET @STRING = ' SELECT EMP_Id,FOR_DATE,DEPT_ID as PARENT_ID,' + @STRING_3 +' as CHILD_ID,ISNULL(SALARY_AMOUNT,0) AS NET_SALARY,
											AH.DEPARTMENT AS PARENT_NAME,' + @STRING_2 +' as  CHILD_NAME 
											,AH.DEPARTMENT  + ''-'' +' + @STRING_2 + '   AS LABEL_NAME'  

							
							SET @STRING = @STRING + ' INTO ##DEPARTMENT FROM #MANPOWERDETAIL AH' --GROUP BY BRANCH_NAME'+ @STRING_2 +''--WHERE SAL_CAL_DAY <> 0
							
							
							EXEC(@STRING)
							
							--INSERT INTO ##DEPARTMENT(EMP_ID,FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT  AH.EMP_ID,FOR_DATE,999 AS PARENT_ID,9999 AS Child_ID,MS.OT_AMOUNT,'' as PARENT_NAME,'OVERTIME' as CHILD_NAME,
							--						'OVERTIME' as LABEL_NAME
							--				FROM	T0200_MONTHLY_SALARY MS INNER JOIN 
							--						#MANPOWERDETAIL AH ON AH.EMP_ID = MS.Emp_ID AND 
							--						MONTH(MS.Month_End_Date) = MONTH([FOR_DATE]) AND 
							--						YEAR(MS.Month_End_Date) = YEAR([FOR_DATE])										
							--			)Q
							
							
						
							--INSERT INTO ##DEPARTMENT(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT		FOR_DATE,99999 AS PARENT_ID,999999 AS Child_ID,ISNULL(SUM(NET_SALARY),0) AS OT_AMOUNT,
							--							'' as PARENT_NAME,'TOTAL' as CHILD_NAME,'TOTAL' as LABEL_NAME
							--				FROM		##DEPARTMENT
							--				GROUP BY 	FOR_DATE										
							--			)Q				
							
							SET @STRING = 'INSERT INTO ##DEPARTMENT(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT		AH.FOR_DATE,99999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,ISNULL(SUM(SALARY_AMOUNT),0) AS NET_SALARY,
														(''TOTAL''+''-''+ AH.DEPARTMENT)  as PARENT_NAME,''TOTAL''+''-''+ ' + @STRING_2 + ' as CHILD_NAME,
														''TOTAL''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM		#MANPOWERDETAIL AH 	
											GROUP BY 	' + @STRING_3 + ',AH.FOR_DATE,AH.DEPARTMENT,' + @STRING_2 + '
										)Q'
							--PRINT @STRING
							EXEC(@STRING)
										
							SET @STRING = 'INSERT INTO ##DEPARTMENT(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT  AH.FOR_DATE,9999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,SUM(ISNULL(MS.M_AD_AMOUNT,0)) as OT_AMOUNT
													,(''OVERTIME''+''-''+ AH.DEPARTMENT)  as PARENT_NAME,''OVERTIME''+''-''+ ' + @STRING_2 + ' as CHILD_NAME
													,''OVERTIME''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM	#MANPOWERDETAIL AH LEFT OUTER JOIN 
													T0210_MONTHLY_AD_DETAIL MS WITH (NOLOCK) ON AH.EMP_ID = MS.Emp_ID  INNER JOIN 
													T0050_AD_MASTER A WITH (NOLOCK) ON MS.AD_ID = A.AD_ID AND MS.CMP_ID = A.CMP_ID
											WHERE	MS.CMP_ID = ' + CONVERT(VARCHAR(5),@CMP_ID) + ' AND MONTH(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),MONTH(@TO_DATE)) +'''  AND YEAR(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),YEAR(@TO_DATE)) + '''
													AND AD_ACTIVE = 1 
													AND ISNULL(MS.M_AD_NOT_EFFECT_SALARY,0) = 1 
													AND MS.S_SAL_TRAN_ID IS NULL  
													ANd UPPER(A.AD_CALCULATE_ON) = ''TRANSFER OT''
											GROUP BY ' + @STRING_3 + ',AH.FOR_DATE,AH.DEPARTMENT,' + @STRING_2 + '
										)Q'
							--print @STRING
							EXEC(@STRING)
							
							UPDATE	##DEPARTMENT
							SET		LABEL_NAME = PARENT_NAME
							WHERE	PARENT_NAME = CHILD_NAME
							
							SELECT	@COLS = COALESCE(@COLS + ',','')  + '[' + PL.LABEL_NAME + ']'
							FROM	(
										SELECT		DISTINCT LABEL_NAME,PARENT_Id
										FROM		##DEPARTMENT										
									) PL
							ORDER BY PARENT_ID,LABEL_NAME
							  
							  
							  SET @SQL = '	SELECT	ROW_NUMBER() OVER (ORDER BY PVT.FOR_DATE) As SR_No,*
											FROM	 
												(								
													SELECT	LEFT(DATENAME(MONTH,FOR_DATE),3) + ''-'' + CONVERT(VARCHAR(5),DATEPART(YEAR,FOR_DATE)) AS MONTH,
															LABEL_NAME,NET_SALARY,FOR_DATE
													FROM	##DEPARTMENT P													
												) YS 
												PIVOT 
												(
													SUM(NET_SALARY) FOR LABEL_NAME IN (' + @COLS + ')
												) PVT'
							  
							EXEC (@SQL)
							
							
							SET @STRING = 'DROP TABLE ##DEPARTMENT';	
							
							EXEC(@STRING)
							
							
							
						END	
					ELSE IF @SUMMARY='4' --------FOR GROUPBY DESIGNATION---------------------------
						BEGIN 	
							
							SET @STRING = ' SELECT EMP_Id,FOR_DATE,DESIG_ID as PARENT_ID,' + @STRING_3 +' as CHILD_ID,ISNULL(SALARY_AMOUNT,0) AS NET_SALARY,
											AH.DESIGNATION AS PARENT_NAME,' + @STRING_2 +' as  CHILD_NAME 
											,AH.DESIGNATION  + ''-'' +' + @STRING_2 + '   AS LABEL_NAME'  

							
							SET @STRING = @STRING + ' INTO ##DESIGNATION FROM #MANPOWERDETAIL AH' --GROUP BY BRANCH_NAME'+ @STRING_2 +''--WHERE SAL_CAL_DAY <> 0
							
							
							EXEC(@STRING)
							
							--INSERT INTO ##DESIGNATION(EMP_ID,FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT  AH.EMP_ID,FOR_DATE,999 AS PARENT_ID,9999 AS Child_ID,MS.OT_AMOUNT,'' as PARENT_NAME,'OVERTIME' as CHILD_NAME,
							--						'OVERTIME' as LABEL_NAME
							--				FROM	T0200_MONTHLY_SALARY MS INNER JOIN 
							--						#MANPOWERDETAIL AH ON AH.EMP_ID = MS.Emp_ID AND 
							--						MONTH(MS.Month_End_Date) = MONTH([FOR_DATE]) AND 
							--						YEAR(MS.Month_End_Date) = YEAR([FOR_DATE])										
							--			)Q
							
							
						
							--INSERT INTO ##DESIGNATION(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT		FOR_DATE,99999 AS PARENT_ID,999999 AS Child_ID,ISNULL(SUM(NET_SALARY),0) AS OT_AMOUNT,
							--							'' as PARENT_NAME,'TOTAL' as CHILD_NAME,'TOTAL' as LABEL_NAME
							--				FROM		##DESIGNATION
							--				GROUP BY 	FOR_DATE										
							--			)Q				
							
							SET @STRING = 'INSERT INTO ##DESIGNATION(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT		AH.FOR_DATE,99999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,ISNULL(SUM(SALARY_AMOUNT),0) AS NET_SALARY,
														(''TOTAL''+''-''+ AH.DESIGNATION)  as PARENT_NAME,''TOTAL''+''-''+ ' + @STRING_2 + ' as CHILD_NAME,
														''TOTAL''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM		#MANPOWERDETAIL AH 	
											GROUP BY 	' + @STRING_3 + ',AH.FOR_DATE,AH.DESIGNATION,' + @STRING_2 + '
										)Q'
							--PRINT @STRING
							EXEC(@STRING)
										
							SET @STRING = 'INSERT INTO ##DESIGNATION(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT  aH.FOR_DATE,9999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,SUM(ISNULL(MS.M_AD_AMOUNT,0)) as OT_AMOUNT
													,(''OVERTIME''+''-''+ AH.DESIGNATION)  as PARENT_NAME,''OVERTIME''+''-''+ ' + @STRING_2 + ' as CHILD_NAME
													,''OVERTIME''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM	#MANPOWERDETAIL AH LEFT OUTER JOIN 
													T0210_MONTHLY_AD_DETAIL MS WITH (NOLOCK) ON AH.EMP_ID = MS.Emp_ID  INNER JOIN 
													T0050_AD_MASTER A WITH (NOLOCK) ON MS.AD_ID = A.AD_ID AND MS.CMP_ID = A.CMP_ID
											WHERE	MS.CMP_ID = ' + CONVERT(VARCHAR(5),@CMP_ID) + ' AND MONTH(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),MONTH(@TO_DATE)) +'''  AND YEAR(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),YEAR(@TO_DATE)) + '''
													AND AD_ACTIVE = 1 
													AND ISNULL(MS.M_AD_NOT_EFFECT_SALARY,0) = 1 
													AND MS.S_SAL_TRAN_ID IS NULL  
													ANd UPPER(A.AD_CALCULATE_ON) = ''TRANSFER OT''	
											GROUP BY ' + @STRING_3 + ',AH.FOR_DATE,AH.DESIGNATION,' + @STRING_2 + '
										)Q'
							--print @STRING
							EXEC(@STRING)
							
							
							UPDATE	##DESIGNATION
							SET		LABEL_NAME = PARENT_NAME
							WHERE	PARENT_NAME = CHILD_NAME
							
							SELECT	@COLS = COALESCE(@COLS + ',','')  + '[' + PL.LABEL_NAME + ']'
							FROM	(
										SELECT		DISTINCT LABEL_NAME,PARENT_ID
										FROM		##DESIGNATION										
									) PL
							ORDER BY PARENT_ID,LABEL_NAME											
							  
							  
							  SET @SQL = '	SELECT	ROW_NUMBER() OVER (ORDER BY PVT.FOR_DATE) As SR_No,*
											FROM	 
												(								
													SELECT	LEFT(DATENAME(MONTH,FOR_DATE),3) + ''-'' + CONVERT(VARCHAR(5),DATEPART(YEAR,FOR_DATE)) AS MONTH,
															LABEL_NAME,NET_SALARY,FOR_DATE
													FROM	##DESIGNATION P													
												) YS 
												PIVOT 
												(
													SUM(NET_SALARY) FOR LABEL_NAME IN (' + @COLS + ')
												) PVT'
							  
							EXEC (@SQL)
							
							
							SET @STRING = 'DROP TABLE ##DESIGNATION';	
							
							EXEC(@STRING)
							
							
							
						END	
					ELSE IF @SUMMARY='5' --------FOR GROUPBY TYPENAME---------------------------
						BEGIN 	
							
							SET @STRING = ' SELECT EMP_Id,FOR_DATE,TYPE_ID as PARENT_ID,' + @STRING_3 +' as CHILD_ID,ISNULL(SALARY_AMOUNT,0) AS NET_SALARY,
											AH.TYPENAME AS PARENT_NAME,' + @STRING_2 +' as  CHILD_NAME 
											,AH.TYPENAME  + ''-'' +' + @STRING_2 + '   AS LABEL_NAME'  

							
							SET @STRING = @STRING + ' INTO ##TYPENAME FROM #MANPOWERDETAIL AH' --GROUP BY BRANCH_NAME'+ @STRING_2 +''--WHERE SAL_CAL_DAY <> 0
							
							
							EXEC(@STRING)
							
							--INSERT INTO ##TYPENAME(EMP_ID,FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT  AH.EMP_ID,FOR_DATE,999 AS PARENT_ID,9999 AS Child_ID,MS.OT_AMOUNT,'' as PARENT_NAME,'OVERTIME' as CHILD_NAME,
							--						'OVERTIME' as LABEL_NAME
							--				FROM	T0200_MONTHLY_SALARY MS INNER JOIN 
							--						#MANPOWERDETAIL AH ON AH.EMP_ID = MS.Emp_ID AND 
							--						MONTH(MS.Month_End_Date) = MONTH([FOR_DATE]) AND 
							--						YEAR(MS.Month_End_Date) = YEAR([FOR_DATE])										
							--			)Q
							
							
						
							--INSERT INTO ##TYPENAME(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT		FOR_DATE,99999 AS PARENT_ID,999999 AS Child_ID,ISNULL(SUM(NET_SALARY),0) AS OT_AMOUNT,
							--							'' as PARENT_NAME,'TOTAL' as CHILD_NAME,'TOTAL' as LABEL_NAME
							--				FROM		##TYPENAME
							--				GROUP BY 	FOR_DATE										
							--			)Q				
							
							
							SET @STRING = 'INSERT INTO ##TYPENAME(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT		AH.FOR_DATE,99999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,ISNULL(SUM(SALARY_AMOUNT),0) AS NET_SALARY,
														(''TOTAL''+''-''+ AH.TYPENAME)  as PARENT_NAME,''TOTAL''+''-''+ ' + @STRING_2 + ' as CHILD_NAME,
														''TOTAL''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM		#MANPOWERDETAIL AH 	
											GROUP BY 	' + @STRING_3 + ',AH.FOR_DATE,AH.TYPENAME,' + @STRING_2 + '
										)Q'
							--PRINT @STRING
							EXEC(@STRING)
							
							
							
							SET @STRING = 'INSERT INTO ##TYPENAME(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT  AH.FOR_DATE,9999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,SUM(ISNULL(MS.M_AD_AMOUNT,0)) as OT_AMOUNT
													,(''OVERTIME''+''-''+ AH.TYPENAME)  as PARENT_NAME,''OVERTIME''+''-''+ ' + @STRING_2 + ' as CHILD_NAME
													,''OVERTIME''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM	#MANPOWERDETAIL AH LEFT OUTER JOIN 
													T0210_MONTHLY_AD_DETAIL MS WITH (NOLOCK)  ON AH.EMP_ID = MS.Emp_ID  INNER JOIN 
													T0050_AD_MASTER A WITH (NOLOCK) ON MS.AD_ID = A.AD_ID AND MS.CMP_ID = A.CMP_ID
											WHERE	MS.CMP_ID = ' + CONVERT(VARCHAR(5),@CMP_ID) + ' AND MONTH(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),MONTH(@TO_DATE)) +'''  AND YEAR(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),YEAR(@TO_DATE)) + '''
													AND AD_ACTIVE = 1 
													AND ISNULL(MS.M_AD_NOT_EFFECT_SALARY,0) = 1 
													AND MS.S_SAL_TRAN_ID IS NULL  
													ANd UPPER(A.AD_CALCULATE_ON) = ''TRANSFER OT''
											GROUP BY ' + @STRING_3 + ',AH.FOR_DATE,AH.TYPENAME,' + @STRING_2 + '
										)Q'
							print @STRING
							EXEC(@STRING)
							
							UPDATE	##TYPENAME
							SET		LABEL_NAME = PARENT_NAME
							WHERE	PARENT_NAME = CHILD_NAME
							
							SELECT	@COLS = COALESCE(@COLS + ',','')  + '[' + PL.LABEL_NAME + ']'
							FROM	(
										SELECT		DISTINCT LABEL_NAME,PARENT_ID
										FROM		##TYPENAME										
									) PL
							ORDER BY PARENT_ID,LABEL_NAME											
							  
							  
							  SET @SQL = '	SELECT	ROW_NUMBER() OVER (ORDER BY PVT.FOR_DATE) As SR_No,*
											FROM	 
												(								
													SELECT	LEFT(DATENAME(MONTH,FOR_DATE),3) + ''-'' + CONVERT(VARCHAR(5),DATEPART(YEAR,FOR_DATE)) AS MONTH,
															LABEL_NAME,NET_SALARY,FOR_DATE
													FROM	##TYPENAME P													
												) YS 
												PIVOT 
												(
													SUM(NET_SALARY) FOR LABEL_NAME IN (' + @COLS + ')
												) PVT'
							  
							EXEC (@SQL)
							
							
							SET @STRING = 'DROP TABLE ##TYPENAME';	
							
							EXEC(@STRING)
							
							
							
						END							
					
					ELSE IF @SUMMARY='6' --------FOR GROUPBY DIVISION---------------------------
						BEGIN 	
							
							SET @STRING = ' SELECT EMP_Id,FOR_DATE,VERTICAL_ID as PARENT_ID,' + @STRING_3 +' as CHILD_ID,ISNULL(SALARY_AMOUNT,0) AS NET_SALARY,
											AH.VERTICAL_NAME AS PARENT_NAME,' + @STRING_2 +' as  CHILD_NAME 
											,AH.VERTICAL_NAME  + ''-'' +' + @STRING_2 + '   AS LABEL_NAME'  

							
							SET @STRING = @STRING + ' INTO ##Division FROM #MANPOWERDETAIL AH' --GROUP BY BRANCH_NAME'+ @STRING_2 +''--WHERE SAL_CAL_DAY <> 0
							
							
							EXEC(@STRING)
							
							--INSERT INTO ##Division(EMP_ID,FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT  AH.EMP_ID,FOR_DATE,999 AS PARENT_ID,9999 AS Child_ID,MS.OT_AMOUNT,'' as PARENT_NAME,'OVERTIME' as CHILD_NAME,
							--						'OVERTIME' as LABEL_NAME
							--				FROM	T0200_MONTHLY_SALARY MS INNER JOIN 
							--						#MANPOWERDETAIL AH ON AH.EMP_ID = MS.Emp_ID AND 
							--						MONTH(MS.Month_End_Date) = MONTH([FOR_DATE]) AND 
							--						YEAR(MS.Month_End_Date) = YEAR([FOR_DATE])										
							--			)Q
							
							
						
							--INSERT INTO ##Division(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT		FOR_DATE,99999 AS PARENT_ID,999999 AS Child_ID,ISNULL(SUM(NET_SALARY),0) AS OT_AMOUNT,
							--							'' as PARENT_NAME,'TOTAL' as CHILD_NAME,'TOTAL' as LABEL_NAME
							--				FROM		##Division
							--				GROUP BY 	FOR_DATE										
							--			)Q				
							
							SET @STRING = 'INSERT INTO ##Division(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT		AH.FOR_DATE,99999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,ISNULL(SUM(SALARY_AMOUNT),0) AS NET_SALARY,
														(''TOTAL''+''-''+ AH.VERTICAL_NAME)  as PARENT_NAME,''TOTAL''+''-''+ ' + @STRING_2 + ' as CHILD_NAME,
														''TOTAL''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM		#MANPOWERDETAIL AH 	
											GROUP BY 	' + @STRING_3 + ',AH.FOR_DATE,AH.VERTICAL_NAME,' + @STRING_2 + '
										)Q'
							--PRINT @STRING
							EXEC(@STRING)
							
							
							
							SET @STRING = 'INSERT INTO ##Division(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT  AH.FOR_DATE,9999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,SUM(ISNULL(MS.M_AD_AMOUNT,0)) as OT_AMOUNT
													,(''OVERTIME''+''-''+ AH.VERTICAL_NAME)  as PARENT_NAME,''OVERTIME''+''-''+ ' + @STRING_2 + ' as CHILD_NAME
													,''OVERTIME''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM	#MANPOWERDETAIL AH LEFT OUTER JOIN 
													T0210_MONTHLY_AD_DETAIL MS WITH (NOLOCK) ON AH.EMP_ID = MS.Emp_ID  INNER JOIN 
													T0050_AD_MASTER A WITH (NOLOCK) ON MS.AD_ID = A.AD_ID AND MS.CMP_ID = A.CMP_ID
											WHERE	MS.CMP_ID = ' + CONVERT(VARCHAR(5),@CMP_ID) + ' AND MONTH(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),MONTH(@TO_DATE)) +'''  AND YEAR(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),YEAR(@TO_DATE)) + '''
													AND AD_ACTIVE = 1 
													AND ISNULL(MS.M_AD_NOT_EFFECT_SALARY,0) = 1 
													AND MS.S_SAL_TRAN_ID IS NULL  
													ANd UPPER(A.AD_CALCULATE_ON) = ''TRANSFER OT''
											GROUP BY ' + @STRING_3 + ',AH.FOR_DATE,AH.VERTICAL_NAME,' + @STRING_2 + '
										)Q'
							print @STRING
							EXEC(@STRING)
							
							UPDATE	##Division
							SET		LABEL_NAME = PARENT_NAME
							WHERE	PARENT_NAME = CHILD_NAME
							
							SELECT	@COLS = COALESCE(@COLS + ',','')  + '[' + PL.LABEL_NAME + ']'
							FROM	(
										SELECT		DISTINCT LABEL_NAME,PARENT_ID
										FROM		##Division									
									) PL
							ORDER BY PARENT_ID,LABEL_NAME										
							  
							  
							  SET @SQL = '	SELECT	ROW_NUMBER() OVER (ORDER BY PVT.FOR_DATE) As SR_No,*
											FROM	 
												(								
													SELECT	LEFT(DATENAME(MONTH,FOR_DATE),3) + ''-'' + CONVERT(VARCHAR(5),DATEPART(YEAR,FOR_DATE)) AS MONTH,
															LABEL_NAME,NET_SALARY,FOR_DATE
													FROM	##Division P													
												) YS 
												PIVOT 
												(
													SUM(NET_SALARY) FOR LABEL_NAME IN (' + @COLS + ')
												) PVT'
							  
							EXEC (@SQL)
							
							
							SET @STRING = 'DROP TABLE ##Division';	
							
							EXEC(@STRING)
							
							
							
						END		
					ELSE IF @SUMMARY='7' --------FOR GROUPBY sub_vertical---------------------------
						BEGIN 	
							
							SET @STRING = ' SELECT EMP_Id,FOR_DATE,subvertical_Id as PARENT_ID,' + @STRING_3 +' as CHILD_ID,ISNULL(SALARY_AMOUNT,0) AS NET_SALARY,
											AH.SUB_VERTICAL AS PARENT_NAME,' + @STRING_2 +' as  CHILD_NAME 
											,AH.SUB_VERTICAL  + ''-'' +' + @STRING_2 + '   AS LABEL_NAME'  

							
							SET @STRING = @STRING + ' INTO ##sub_vertical FROM #MANPOWERDETAIL AH' --GROUP BY BRANCH_NAME'+ @STRING_2 +''--WHERE SAL_CAL_DAY <> 0
							
							
							EXEC(@STRING)
							
							--INSERT INTO ##sub_vertical(EMP_ID,FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT  AH.EMP_ID,FOR_DATE,999 AS PARENT_ID,9999 AS Child_ID,MS.OT_AMOUNT,'' as PARENT_NAME,'OVERTIME' as CHILD_NAME,
							--						'OVERTIME' as LABEL_NAME
							--				FROM	T0200_MONTHLY_SALARY MS INNER JOIN 
							--						#MANPOWERDETAIL AH ON AH.EMP_ID = MS.Emp_ID AND 
							--						MONTH(MS.Month_End_Date) = MONTH([FOR_DATE]) AND 
							--						YEAR(MS.Month_End_Date) = YEAR([FOR_DATE])										
							--			)Q
							
							
						
							--INSERT INTO ##sub_vertical(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT		FOR_DATE,99999 AS PARENT_ID,999999 AS Child_ID,ISNULL(SUM(NET_SALARY),0) AS OT_AMOUNT,
							--							'' as PARENT_NAME,'TOTAL' as CHILD_NAME,'TOTAL' as LABEL_NAME
							--				FROM		##sub_vertical
							--				GROUP BY 	FOR_DATE										
							--			)Q				
							
							
							SET @STRING = 'INSERT INTO ##sub_vertical(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT		AH.FOR_DATE,99999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,ISNULL(SUM(SALARY_AMOUNT),0) AS NET_SALARY,
														(''TOTAL''+''-''+ AH.SUB_VERTICAL)  as PARENT_NAME,''TOTAL''+''-''+ ' + @STRING_2 + ' as CHILD_NAME,
														''TOTAL''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM		#MANPOWERDETAIL AH 	
											GROUP BY 	' + @STRING_3 + ',AH.FOR_DATE,AH.SUB_VERTICAL,' + @STRING_2 + '
										)Q'
							--PRINT @STRING
							EXEC(@STRING)
							
							
							
							SET @STRING = 'INSERT INTO ##sub_vertical(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT  AH.FOR_DATE,9999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,SUM(ISNULL(MS.M_AD_AMOUNT,0)) as OT_AMOUNT
													,(''OVERTIME''+''-''+ AH.SUB_VERTICAL)  as PARENT_NAME,''OVERTIME''+''-''+ ' + @STRING_2 + ' as CHILD_NAME
													,''OVERTIME''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM	#MANPOWERDETAIL AH LEFT OUTER JOIN 
													T0210_MONTHLY_AD_DETAIL MS WITH (NOLOCK) ON AH.EMP_ID = MS.Emp_ID INNER JOIN 
													T0050_AD_MASTER A WITH (NOLOCK) ON MS.AD_ID = A.AD_ID AND MS.CMP_ID = A.CMP_ID
											WHERE	MS.CMP_ID = ' + CONVERT(VARCHAR(5),@CMP_ID) + ' AND MONTH(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),MONTH(@TO_DATE)) +'''  AND YEAR(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),YEAR(@TO_DATE)) + '''
													AND AD_ACTIVE = 1
													AND ISNULL(MS.M_AD_NOT_EFFECT_SALARY,0) = 1 
													AND MS.S_SAL_TRAN_ID IS NULL  
													ANd UPPER(A.AD_CALCULATE_ON) = ''TRANSFER OT''
											GROUP BY ' + @STRING_3 + ',AH.FOR_DATE,AH.SUB_VERTICAL,' + @STRING_2 + '
										)Q'
							print @STRING
							EXEC(@STRING)
							
							UPDATE	##sub_vertical
							SET		LABEL_NAME = PARENT_NAME
							WHERE	PARENT_NAME = CHILD_NAME
							
							SELECT	@COLS = COALESCE(@COLS + ',','')  + '[' + PL.LABEL_NAME + ']'
							FROM	(
										SELECT		DISTINCT LABEL_NAME,PARENT_ID
										FROM		##sub_vertical										
									) PL
							ORDER BY PARENT_ID,LABEL_NAME											
							  
							  
							  SET @SQL = '	SELECT	ROW_NUMBER() OVER (ORDER BY PVT.FOR_DATE) As SR_No,*
											FROM	 
												(								
													SELECT	LEFT(DATENAME(MONTH,FOR_DATE),3) + ''-'' + CONVERT(VARCHAR(5),DATEPART(YEAR,FOR_DATE)) AS MONTH,
															LABEL_NAME,NET_SALARY,FOR_DATE
													FROM	##sub_vertical P													
												) YS 
												PIVOT 
												(
													SUM(NET_SALARY) FOR LABEL_NAME IN (' + @COLS + ')
												) PVT'
							  
							EXEC (@SQL)
							
							
							SET @STRING = 'DROP TABLE ##sub_vertical';	
							
							EXEC(@STRING)
							
							
							
						END	
					ELSE IF @SUMMARY='8' --------FOR GROUPBY SubBranch---------------------------
						BEGIN 	
							
							SET @STRING = ' SELECT EMP_Id,FOR_DATE,SubBranch_ID as PARENT_ID,' + @STRING_3 +' as CHILD_ID,ISNULL(SALARY_AMOUNT,0) AS NET_SALARY,
											AH.Sub_Branch AS PARENT_NAME,' + @STRING_2 +' as  CHILD_NAME 
											,AH.SUB_BRANCH  + ''-'' +' + @STRING_2 + '   AS LABEL_NAME'  

							
							SET @STRING = @STRING + ' INTO ##SubBranch FROM #MANPOWERDETAIL AH' --GROUP BY BRANCH_NAME'+ @STRING_2 +''--WHERE SAL_CAL_DAY <> 0
							
							
							EXEC(@STRING)
							
							--INSERT INTO ##SubBranch(EMP_ID,FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT  AH.EMP_ID,FOR_DATE,999 AS PARENT_ID,9999 AS Child_ID,MS.OT_AMOUNT,'' as PARENT_NAME,'OVERTIME' as CHILD_NAME,
							--						'OVERTIME' as LABEL_NAME
							--				FROM	T0200_MONTHLY_SALARY MS INNER JOIN 
							--						#MANPOWERDETAIL AH ON AH.EMP_ID = MS.Emp_ID AND 
							--						MONTH(MS.Month_End_Date) = MONTH([FOR_DATE]) AND 
							--						YEAR(MS.Month_End_Date) = YEAR([FOR_DATE])										
							--			)Q
							
							
						
							--INSERT INTO ##SubBranch(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT		FOR_DATE,99999 AS PARENT_ID,999999 AS Child_ID,ISNULL(SUM(NET_SALARY),0) AS OT_AMOUNT,
							--							'' as PARENT_NAME,'TOTAL' as CHILD_NAME,'TOTAL' as LABEL_NAME
							--				FROM		##SubBranch
							--				GROUP BY 	FOR_DATE										
							--			)Q				
							
							SET @STRING = 'INSERT INTO ##SubBranch(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT		AH.FOR_DATE,99999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,ISNULL(SUM(SALARY_AMOUNT),0) AS NET_SALARY,
														(''TOTAL''+''-''+ AH.Sub_Branch)  as PARENT_NAME,''TOTAL''+''-''+ ' + @STRING_2 + ' as CHILD_NAME,
														''TOTAL''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM		#MANPOWERDETAIL AH 	
											GROUP BY 	' + @STRING_3 + ',AH.FOR_DATE,AH.Sub_Branch,' + @STRING_2 + '
										)Q'
							--PRINT @STRING
							EXEC(@STRING)
							
							
							
							SET @STRING = 'INSERT INTO ##SubBranch(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT  AH.FOR_DATE,9999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,SUM(ISNULL(MS.M_AD_AMOUNT,0)) as OT_AMOUNT
													,(''OVERTIME''+''-''+ AH.Sub_Branch)  as PARENT_NAME,''OVERTIME''+''-''+ ' + @STRING_2 + ' as CHILD_NAME
													,''OVERTIME''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM	#MANPOWERDETAIL AH LEFT OUTER JOIN 
													T0210_MONTHLY_AD_DETAIL MS WITH (NOLOCK) ON AH.EMP_ID = MS.Emp_ID  INNER JOIN 
													T0050_AD_MASTER A WITH (NOLOCK) ON MS.AD_ID = A.AD_ID AND MS.CMP_ID = A.CMP_ID
											WHERE	MS.CMP_ID = ' + CONVERT(VARCHAR(5),@CMP_ID) + ' AND MONTH(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),MONTH(@TO_DATE)) +'''  AND YEAR(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),YEAR(@TO_DATE)) + '''
													AND AD_ACTIVE = 1 
													AND ISNULL(MS.M_AD_NOT_EFFECT_SALARY,0) = 1 
													AND MS.S_SAL_TRAN_ID IS NULL  
													ANd UPPER(A.AD_CALCULATE_ON) = ''TRANSFER OT''	
											GROUP BY ' + @STRING_3 + ',AH.FOR_DATE,AH.Sub_Branch,' + @STRING_2 + '
										)Q'
							print @STRING
							EXEC(@STRING)
							
							
							UPDATE	##SubBranch
							SET		LABEL_NAME = PARENT_NAME
							WHERE	PARENT_NAME = CHILD_NAME
							
							SELECT	@COLS = COALESCE(@COLS + ',','')  + '[' + PL.LABEL_NAME + ']'
							FROM	(
										SELECT		DISTINCT LABEL_NAME,PARENT_ID
										FROM		##SubBranch										
									) PL
							ORDER BY PARENT_ID,LABEL_NAME											
							  
							  
							  SET @SQL = '	SELECT	ROW_NUMBER() OVER (ORDER BY PVT.FOR_DATE) As SR_No,*
											FROM	 
												(								
													SELECT	LEFT(DATENAME(MONTH,FOR_DATE),3) + ''-'' + CONVERT(VARCHAR(5),DATEPART(YEAR,FOR_DATE)) AS MONTH,
															LABEL_NAME,NET_SALARY,FOR_DATE
													FROM	##SubBranch P													
												) YS 
												PIVOT 
												(
													SUM(NET_SALARY) FOR LABEL_NAME IN (' + @COLS + ')
												) PVT'
							  
							EXEC (@SQL)
							
							
							SET @STRING = 'DROP TABLE ##SubBranch';	
							
							EXEC(@STRING)
							
							
							
						END	
					ELSE IF @SUMMARY='9' --------FOR GROUPBY Segment---------------------------
						BEGIN 	
							
							SET @STRING = ' SELECT EMP_Id,FOR_DATE,Segment_ID as PARENT_ID,' + @STRING_3 +' as CHILD_ID,ISNULL(SALARY_AMOUNT,0) AS NET_SALARY,
											AH.Segment_Name AS PARENT_NAME,' + @STRING_2 +' as  CHILD_NAME 
											,AH.SEGMENT_NAME  + ''-'' +' + @STRING_2 + '   AS LABEL_NAME'  

							
							SET @STRING = @STRING + ' INTO ##Segment FROM #MANPOWERDETAIL AH' --GROUP BY BRANCH_NAME'+ @STRING_2 +''--WHERE SAL_CAL_DAY <> 0
							
							
							EXEC(@STRING)
							
							--INSERT INTO ##Segment(EMP_ID,FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT  AH.EMP_ID,FOR_DATE,999 AS PARENT_ID,9999 AS Child_ID,MS.OT_AMOUNT,'' as PARENT_NAME,'OVERTIME' as CHILD_NAME,
							--						'OVERTIME' as LABEL_NAME
							--				FROM	T0200_MONTHLY_SALARY MS INNER JOIN 
							--						#MANPOWERDETAIL AH ON AH.EMP_ID = MS.Emp_ID AND 
							--						MONTH(MS.Month_End_Date) = MONTH([FOR_DATE]) AND 
							--						YEAR(MS.Month_End_Date) = YEAR([FOR_DATE])										
							--			)Q
							
							
						
							--INSERT INTO ##Segment(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT		FOR_DATE,99999 AS PARENT_ID,999999 AS Child_ID,ISNULL(SUM(NET_SALARY),0) AS OT_AMOUNT,
							--							'' as PARENT_NAME,'TOTAL' as CHILD_NAME,'TOTAL' as LABEL_NAME
							--				FROM		##Segment
							--				GROUP BY 	FOR_DATE										
							--			)Q				
							
							SET @STRING = 'INSERT INTO ##Segment(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT		AH.FOR_DATE,99999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,ISNULL(SUM(SALARY_AMOUNT),0) AS NET_SALARY,
														(''TOTAL''+''-''+ AH.Segment_Name)  as PARENT_NAME,''TOTAL''+''-''+ ' + @STRING_2 + ' as CHILD_NAME,
														''TOTAL''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM		#MANPOWERDETAIL AH 	
											GROUP BY 	' + @STRING_3 + ',AH.FOR_DATE,AH.Segment_Name,' + @STRING_2 + '
										)Q'
							--PRINT @STRING
							EXEC(@STRING)
							
							
							
							SET @STRING = 'INSERT INTO ##Segment(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT  AH.FOR_DATE,9999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,SUM(ISNULL(MS.M_AD_AMOUNT,0)) as OT_AMOUNT
													,(''OVERTIME''+''-''+ AH.Segment_Name)  as PARENT_NAME,''OVERTIME''+''-''+ ' + @STRING_2 + ' as CHILD_NAME
													,''OVERTIME''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM	#MANPOWERDETAIL AH LEFT OUTER JOIN 
													T0210_MONTHLY_AD_DETAIL MS WITH (NOLOCK) ON AH.EMP_ID = MS.Emp_ID  INNER JOIN 
													T0050_AD_MASTER A WITH (NOLOCK) ON MS.AD_ID = A.AD_ID AND MS.CMP_ID = A.CMP_ID
											WHERE	MS.CMP_ID = ' + CONVERT(VARCHAR(5),@CMP_ID) + ' AND MONTH(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),MONTH(@TO_DATE)) +'''  AND YEAR(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),YEAR(@TO_DATE)) + '''
													AND AD_ACTIVE = 1 
													AND ISNULL(MS.M_AD_NOT_EFFECT_SALARY,0) = 1 
													AND MS.S_SAL_TRAN_ID IS NULL  
													ANd UPPER(A.AD_CALCULATE_ON) = ''TRANSFER OT''	
											GROUP BY ' + @STRING_3 + ',AH.FOR_DATE,AH.Segment_Name,' + @STRING_2 + '
										)Q'
							print @STRING
							EXEC(@STRING)
							
							UPDATE	##Segment
							SET		LABEL_NAME = PARENT_NAME
							WHERE	PARENT_NAME = CHILD_NAME
							
							SELECT	@COLS = COALESCE(@COLS + ',','')  + '[' + PL.LABEL_NAME + ']'
							FROM	(
										SELECT		DISTINCT LABEL_NAME,PARENT_ID
										FROM		##Segment										
									) PL
							ORDER BY PARENT_ID,LABEL_NAME											
							  
							  
							  SET @SQL = '	SELECT	ROW_NUMBER() OVER (ORDER BY PVT.FOR_DATE) As SR_No,*
											FROM	 
												(								
													SELECT	LEFT(DATENAME(MONTH,FOR_DATE),3) + ''-'' + CONVERT(VARCHAR(5),DATEPART(YEAR,FOR_DATE)) AS MONTH,
															LABEL_NAME,NET_SALARY,FOR_DATE
													FROM	##Segment P													
												) YS 
												PIVOT 
												(
													SUM(NET_SALARY) FOR LABEL_NAME IN (' + @COLS + ')
												) PVT'
							  
							EXEC (@SQL)
							
							
							SET @STRING = 'DROP TABLE ##Segment';	
							
							EXEC(@STRING)
							
							
							
						END	
					ELSE IF @SUMMARY='10' --------FOR GROUPBY Center_Code---------------------------
						BEGIN 	
							
							SET @STRING = ' SELECT EMP_Id,FOR_DATE,Center_Id as PARENT_ID,' + @STRING_3 +' as CHILD_ID,ISNULL(SALARY_AMOUNT,0) AS NET_SALARY,
											AH.Center_Code AS PARENT_NAME,' + @STRING_2 +' as  CHILD_NAME 
											,AH.CENTER_CODE  + ''-'' +' + @STRING_2 + '   AS LABEL_NAME'  

							
							SET @STRING = @STRING + ' INTO ##Center_Code FROM #MANPOWERDETAIL AH' --GROUP BY BRANCH_NAME'+ @STRING_2 +''--WHERE SAL_CAL_DAY <> 0
							
							
							EXEC(@STRING)
							
							--INSERT INTO ##Center_Code(EMP_ID,FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT  AH.EMP_ID,FOR_DATE,999 AS PARENT_ID,9999 AS Child_ID,MS.OT_AMOUNT,'' as PARENT_NAME,'OVERTIME' as CHILD_NAME,
							--						'OVERTIME' as LABEL_NAME
							--				FROM	T0200_MONTHLY_SALARY MS INNER JOIN 
							--						#MANPOWERDETAIL AH ON AH.EMP_ID = MS.Emp_ID AND 
							--						MONTH(MS.Month_End_Date) = MONTH([FOR_DATE]) AND 
							--						YEAR(MS.Month_End_Date) = YEAR([FOR_DATE])										
							--			)Q
							
							
						
							--INSERT INTO ##Center_Code(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							--SELECT * FROM
							--			(
							--				SELECT		FOR_DATE,99999 AS PARENT_ID,999999 AS Child_ID,ISNULL(SUM(NET_SALARY),0) AS OT_AMOUNT,
							--							'' as PARENT_NAME,'TOTAL' as CHILD_NAME,'TOTAL' as LABEL_NAME
							--				FROM		##Center_Code
							--				GROUP BY 	FOR_DATE										
							--			)Q				
							
							
							SET @STRING = 'INSERT INTO ##Center_Code(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT		AH.FOR_DATE,99999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,ISNULL(SUM(SALARY_AMOUNT),0) AS NET_SALARY,
														(''TOTAL''+''-''+ AH.Center_Code)  as PARENT_NAME,''TOTAL''+''-''+ ' + @STRING_2 + ' as CHILD_NAME,
														''TOTAL''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM		#MANPOWERDETAIL AH 	
											GROUP BY 	' + @STRING_3 + ',AH.FOR_DATE,AH.Center_Code,' + @STRING_2 + '
										)Q'
							--PRINT @STRING
							EXEC(@STRING)
							
							
							
							SET @STRING = 'INSERT INTO ##Center_Code(FOR_DATE,PARENT_ID,CHILD_ID,NET_SALARY,PARENT_NAME,CHILD_NAME,LABEL_NAME)
							SELECT * FROM
										(
											SELECT  AH.FOR_DATE,9999 as PARENT_ID,' + @STRING_3 + ' as CHILD_ID,SUM(ISNULL(MS.M_AD_AMOUNT,0)) as OT_AMOUNT
													,(''OVERTIME''+''-''+ AH.Center_Code)  as PARENT_NAME,''OVERTIME''+''-''+ ' + @STRING_2 + ' as CHILD_NAME
													,''OVERTIME''+''-''+' + @STRING_2 + ' as LABEL_NAME
											FROM	#MANPOWERDETAIL AH LEFT OUTER JOIN 
													T0210_MONTHLY_AD_DETAIL MS WITH (NOLOCK) ON AH.EMP_ID = MS.Emp_ID  INNER JOIN 
													T0050_AD_MASTER A WITH (NOLOCK) ON MS.AD_ID = A.AD_ID AND MS.CMP_ID = A.CMP_ID
											WHERE	MS.CMP_ID = ' + CONVERT(VARCHAR(5),@CMP_ID) + ' AND MONTH(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),MONTH(@TO_DATE)) +'''  AND YEAR(MS.TO_DATE) = ''' + CONVERT(VARCHAR(20),YEAR(@TO_DATE)) + '''
													AND AD_ACTIVE = 1 
													AND ISNULL(MS.M_AD_NOT_EFFECT_SALARY,0) = 1 
													AND MS.S_SAL_TRAN_ID IS NULL  
													ANd UPPER(A.AD_CALCULATE_ON) = ''TRANSFER OT''
											GROUP BY ' + @STRING_3 + ',AH.FOR_DATE,AH.Center_Code,' + @STRING_2 + '
										)Q'
							print @STRING
							EXEC(@STRING)
							
							UPDATE	##Center_Code
							SET		LABEL_NAME = PARENT_NAME
							WHERE	PARENT_NAME = CHILD_NAME
							
							SELECT	@COLS = COALESCE(@COLS + ',','')  + '[' + PL.LABEL_NAME + ']'
							FROM	(
										SELECT		DISTINCT LABEL_NAME,PARENT_ID
										FROM		##Center_Code									
									) PL
							ORDER BY PARENT_ID,LABEL_NAME												
							  
							  
							  SET @SQL = '	SELECT	ROW_NUMBER() OVER (ORDER BY PVT.FOR_DATE) As SR_No,*
											FROM	 
												(								
													SELECT	LEFT(DATENAME(MONTH,FOR_DATE),3) + ''-'' + CONVERT(VARCHAR(5),DATEPART(YEAR,FOR_DATE)) AS MONTH,
															LABEL_NAME,NET_SALARY,FOR_DATE
													FROM	##Center_Code P													
												) YS 
												PIVOT 
												(
													SUM(NET_SALARY) FOR LABEL_NAME IN (' + @COLS + ')
												) PVT'
							  
							EXEC (@SQL)
							
							
							SET @STRING = 'DROP TABLE ##Center_Code';	
							
							EXEC(@STRING)
							
							
							
						END			

