

-- =============================================
-- Author:		SHAIKH RAMIZ
-- Create date: 31-AUG-2018
-- Description:	FOR ANALYSIS OF IN PUNCH AND OUT PUNCH IN THE DAY
---21/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
-- =============================================
CREATE PROCEDURE [dbo].[SP_DEVICE_INOUT_ANALYSIS]
	@CMP_ID				NUMERIC,
	@FROM_DATE			DATETIME,
	@TO_DATE			DATETIME,
	@IP_ADDRESS_LIST	VARCHAR(540) = ''	--SEPARATED BY COMMA (192.168.1.0#192.168.1.1#192.168.1.2) 
AS
	SET NOCOUNT ON 
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	SET ARITHABORT ON
	SET ANSI_WARNINGS OFF;

BEGIN
	
	IF @IP_ADDRESS_LIST = 'ALL'
		SELECT @IP_ADDRESS_LIST = COALESCE(@IP_ADDRESS_LIST + '#' , '') + IP_ADDRESS  FROM T0040_IP_MASTER WITH (NOLOCK) WHERE @CMP_ID = @CMP_ID
	
	
	SET @TO_DATE = DATEADD(DD , 1 , @TO_DATE) -- ADDING ONE MORE FOR TAKING ALL PUNCH OF LAST DATE
	
	--STEP 1: FIRST OF TAKING REQUIRED DATA OF 1 WEEK OF SELECTED DEVICE IN TEMP TABLE FOR OPTIMIZATION
	SELECT *
	INTO #T9999_DEVICE_INOUT_DETAIL
	FROM T9999_DEVICE_INOUT_DETAIL WITH (NOLOCK)
	WHERE IP_Address IN (SELECT data from dbo.Split(@IP_ADDRESS_LIST,'#'))
	AND IO_DateTime >= @FROM_DATE and IO_DateTime <= @TO_DATE
	
	
	--STEP 2: INSERTING FIRST AND LAST PUNCH IN TABLE , SO THAT WE CAN REMOVE IT FROM REPORT
	SELECT Emp_ID ,DID.Cmp_ID , DID.Enroll_No, Min(IO_DateTime) As In_Time , Max(IO_DateTime) As Out_TimE
	INTO	#FILO
	FROM #T9999_DEVICE_INOUT_DETAIL DID
		INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON DID.Enroll_No = EM.Enroll_No
	GROUP BY EM.EMP_ID ,DID.CMP_ID , DID.Enroll_No , CAST(IO_DateTime AS DATE)	--CAST(IO_DateTime AS DATE) FOR SAME DATE MINIMUM IN & MAXIMUM OUT


	--STEP 3:--TAKING ALL OTHER PUNCH FROM DEVICE TABLE.
	SELECT	Emp_ID , Enroll_No,CAST(CAST(IO_DateTime AS DATE) AS DATETIME) AS For_Date,T.IO_DateTime,T.Device_Name + ':' + CONVERT(VARCHAR(5), IO_DATETIME, 114) As IO_Flag
	INTO	#PUNCH_DATA
	FROM	(
				SELECT	--ROW_NUMBER() OVER(ORDER BY IO_DATETIME) AS ROW_ID, 
						EM.EMP_ID ,DID.CMP_ID , DID.Enroll_No, DID.IO_DateTime , IP.Device_Name
				FROM	#T9999_DEVICE_INOUT_DETAIL DID
						INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON DID.Enroll_No = EM.Enroll_No
						INNER JOIN T0040_IP_MASTER IP WITH (NOLOCK) ON IP.IP_ADDRESS = DID.IP_Address
						LEFT OUTER JOIN #FILO FL ON DID.ENROLL_NO = FL.ENROLL_NO AND (DID.IO_DateTime = FL.In_Time OR DID.IO_DateTime = FL.Out_TimE)
				WHERE	FL.EMP_ID IS NULL
			) T
	

	--STEP 3:-- ARRANGING ALL PUNCH IN HORIZONTAL ORDER
	SELECT P1.Emp_ID , P1.Enroll_No , P1.For_Date , STUFF((SELECT '; ' + IO_Flag 
															 FROM #PUNCH_DATA P2
															 WHERE P1.Enroll_No = P2.Enroll_No AND P1.For_Date = P2.For_Date
															 ORDER BY IO_DateTime
															 FOR XML PATH('')
														   ),1,1,'') AS IO_FLAG
	FROM #PUNCH_DATA P1
	GROUP BY P1.Emp_ID , P1.Enroll_No , P1.For_Date
	
	/* 
		****ADDED BELOW CODE IN SP_Employee_Inout_Reminder****
		
		IF OBJECT_ID('tempdb..#PUNCH_DETAILS') IS NULL
			BEGIN
				CREATE TABLE #PUNCH_DETAILS
				(	
					EMP_ID		NUMERIC,
					ENROLL_NO	NUMERIC,
					FOR_DATE	DATETIME,
					PUNCH_STR	VARCHAR(5000)
				)
			END
		
		INSERT INTO #PUNCH_DETAILS
			(EMP_ID , ENROLL_NO , FOR_DATE , PUNCH_STR)
		EXEC SP_DEVICE_INOUT_ANALYSIS @CMP_ID = @cmp_id_Pass , @FROM_DATE = @From_Date , @TO_DATE = @To_Date , @IP_ADDRESS_LIST = @IP_ADDRESS_LIST 
		
		ALTER TABLE #TEMP_INOUT
		ADD PUNCH_STR VARCHAR(5000) DEFAULT ''
		
		UPDATE T
		SET T.PUNCH_STR = P.PUNCH_STR
		FROM #TEMP_INOUT T
			INNER JOIN #PUNCH_DETAILS P ON T.EMP_ID = P.EMP_ID AND T.FOR_DATE = P.FOR_DATE
	
	*/
END

