


---21/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[SP_BOND_CLOSING_AS_ON_DATE_GET]
	 @CMP_ID		NUMERIC
	,@TO_DATE		DATETIME 
	,@BRANCH_ID		NUMERIC   = 0
	,@CAT_ID		NUMERIC  = 0
	,@GRD_ID		NUMERIC = 0
	,@TYPE_ID		NUMERIC  = 0
	,@DEPT_ID		NUMERIC  = 0
	,@DESIG_ID		NUMERIC = 0
	,@EMP_ID		NUMERIC  = 0
	,@CONSTRAINT	VARCHAR(1000) = ''
	,@FLAG			TINYINT = 0 
	,@REQUEST_ID	NUMERIC(18,0) = 0
	,@S_EMP_ID		NUMERIC(18,0) = 0
AS
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON
	
	IF @BRANCH_ID = 0
		SET @BRANCH_ID = NULL
	IF @CAT_ID = 0
		SET @CAT_ID = NULL
	IF @TYPE_ID = 0
		SET @TYPE_ID = NULL
	IF @DEPT_ID = 0
		SET @DEPT_ID = NULL
	IF @GRD_ID = 0
		SET @GRD_ID = NULL
	IF @EMP_ID = 0
		SET @EMP_ID = NULL
	IF @DESIG_ID = 0
		SET @DESIG_ID = NULL
	
	DECLARE @IMPORT_BOND_PAID_AMOUNT AS NUMERIC(18,2)
		SET @IMPORT_BOND_PAID_AMOUNT = 0
	CREATE TABLE #EMP_CONS
	(
		EMP_ID	NUMERIC
	)
	
	CREATE TABLE #BOND_CLOSING 
		(
			CMP_ID			NUMERIC,
			EMP_ID			NUMERIC,
			BOND_APR_ID		NUMERIC,
			BOND_ID			NUMERIC,
			BOND_ISSUE		NUMERIC,
			BOND_RETURN		NUMERIC,
			BOND_CLOSING	NUMERIC(18,2),
			FOR_DATE		DATETIME,
			BOND_INSTALLMENT_AMT NUMERIC(18,2),
			IMPORT_BOND_PAID_AMOUNT NUMERIC(18,2) -- ADDED BY RAJPUT ON 12112018
		)
	
	IF @CONSTRAINT <> ''
		BEGIN
			INSERT INTO #EMP_CONS
			SELECT  CAST(DATA  AS NUMERIC) FROM DBO.SPLIT (@CONSTRAINT,'#') 
		END
	ELSE
		begin
			
			INSERT INTO #EMP_CONS
			SELECT I.EMP_ID FROM DBO.T0095_INCREMENT I WITH (NOLOCK) INNER JOIN 
					( 
						SELECT MAX(INCREMENT_EFFECTIVE_DATE) AS FOR_DATE , EMP_ID FROM DBO.T0095_INCREMENT WITH (NOLOCK)
						WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE
						AND CMP_ID = @CMP_ID
						GROUP BY EMP_ID  
					) QRY ON I.EMP_ID = QRY.EMP_ID	AND I.INCREMENT_EFFECTIVE_DATE = QRY.FOR_DATE
			WHERE CMP_ID = @CMP_ID 
			AND ISNULL(CAT_ID,0) = ISNULL(@CAT_ID ,ISNULL(CAT_ID,0))
			AND BRANCH_ID = ISNULL(@BRANCH_ID ,BRANCH_ID)
			AND GRD_ID = ISNULL(@GRD_ID ,GRD_ID)
			AND ISNULL(DEPT_ID,0) = ISNULL(@DEPT_ID ,ISNULL(DEPT_ID,0))
			AND ISNULL(TYPE_ID,0) = ISNULL(@TYPE_ID ,ISNULL(TYPE_ID,0))
			AND ISNULL(DESIG_ID,0) = ISNULL(@DESIG_ID ,ISNULL(DESIG_ID,0))
			AND I.EMP_ID = ISNULL(@EMP_ID ,I.EMP_ID) 
						
		end

		INSERT INTO #BOND_CLOSING 
		(
			CMP_ID ,
			EMP_ID,
			BOND_ID,
			BOND_APR_ID,
			BOND_ISSUE,
			FOR_DATE,
			BOND_RETURN,
			BOND_CLOSING,
			BOND_INSTALLMENT_AMT,
			IMPORT_BOND_PAID_AMOUNT
		)
		SELECT	CMP_ID , EMP_ID ,BOND_ID ,BOND_APR_ID , BOND_APR_AMOUNT , @TO_DATE ,0 ,0,BOND_APR_INSTALLMENT_AMOUNT,BOND_PAID_AMOUNT 
		FROM DBO.T0120_BOND_APPROVAL WITH (NOLOCK)
		WHERE CMP_ID = @CMP_ID AND EMP_ID IN (SELECT EMP_ID FROM #EMP_CONS)
		
		UPDATE #BOND_CLOSING 
		SET BOND_RETURN = MLP.BOND_PAY_AMOUNT
		FROM #BOND_CLOSING  LC  INNER JOIN 
			(
			
				SELECT BOND_APR_ID , SUM(BOND_PAY_AMOUNT) BOND_PAY_AMOUNT  
				FROM DBO.T0210_MONTHLY_BOND_PAYMENT  WITH (NOLOCK)
				WHERE CMP_ID = @CMP_ID  GROUP BY BOND_APR_ID 
			) MLP ON LC.BOND_APR_ID = MLP.BOND_APR_ID 	
		
		
		
		UPDATE #BOND_CLOSING 
		SET BOND_CLOSING = Q1.BOND_CLOSING
		FROM #BOND_CLOSING LC 
		INNER JOIN 
			(
				SELECT LT.EMP_ID ,LT.BOND_ID, SUM(BOND_CLOSING) BOND_CLOSING 
				FROM DBO.T0140_BOND_TRANSACTION LT WITH (NOLOCK)
				INNER JOIN 
				(
					SELECT EMP_ID , BOND_ID , MAX(FOR_DATE) FOR_DATE  
					FROM T0140_BOND_TRANSACTION WITH (NOLOCK)
					WHERE FOR_DATE <=FOR_DATE 
					GROUP BY EMP_ID  , BOND_ID 
				) Q ON LT.EMP_ID = Q.EMP_ID AND LT.BOND_ID = Q.BOND_ID 
				
				AND LT.FOR_DATE = Q.FOR_DATE 
				GROUP BY LT.EMP_ID ,LT.BOND_ID
			) Q1 ON LC.BOND_ID = Q1.BOND_ID AND LC.EMP_ID = Q1.EMP_ID
		
		IF @REQUEST_ID = 0
			SET @REQUEST_ID = NULL
	
		
		IF @FLAG = 0
			BEGIN
			
				SELECT (CASE WHEN LC.BOND_CLOSING < 0 THEN 0 ELSE LC.BOND_CLOSING END) AS BOND_CLOSING,LC.*,BOND_NAME 
				FROM #BOND_CLOSING LC  INNER JOIN DBO.T0040_BOND_MASTER LM WITH (NOLOCK) ON LC.BOND_ID = LM.BOND_ID
				WHERE FLOOR(LC.BOND_CLOSING) > 0
			END
		ELSE IF @FLAG = 1	
			BEGIN
			
				PRINT 1
				--IF EXISTS(SELECT 1 FROM T0100_MONTHLY_BOND_SKIP_APPROVAL WHERE REQUEST_APR_ID = @REQUEST_ID AND FINAL_APPROVAL = 1)
				--	BEGIN
					
				--		SELECT ROW_NUMBER()OVER(ORDER BY LC.BOND_APR_ID) AS ROW_ID, (CASE WHEN LC.BOND_CLOSING < 0 THEN 0 ELSE LC.BOND_CLOSING END) AS BOND_CLOSING,LC.*,BOND_NAME,ISNULL(MLS.NEW_INSTALL_AMOUNT,0) AS NEW_INSTALL_AMT
				--		FROM #BOND_CLOSING LC  INNER JOIN DBO.T0040_BOND_MASTER LM ON LC.BOND_ID = LM.BOND_ID
				--		INNER JOIN T0100_MONTHLY_BOND_SKIP_APPROVAL MLS ON LC.BOND_ID = MLS.BOND_ID AND MLS.REQUEST_APR_ID = @REQUEST_ID
				--		WHERE FLOOR(LC.BOND_CLOSING) > 0
						
				--	END
					
				--ELSE IF EXISTS(SELECT 1 FROM T0100_MONTHLY_BOND_SKIP_APPROVAL WHERE REQUEST_ID = @REQUEST_ID AND FINAL_APPROVAL = 0)
				--	BEGIN
					
				--		SELECT ROW_NUMBER()OVER(ORDER BY LC.BOND_APR_ID) AS ROW_ID, (CASE WHEN LC.BOND_CLOSING < 0 THEN 0 ELSE LC.BOND_CLOSING END) AS BOND_CLOSING,LC.*,BOND_NAME,ISNULL(MLS.NEW_INSTALL_AMOUNT,0) AS NEW_INSTALL_AMT
				--		FROM #BOND_CLOSING LC  INNER JOIN DBO.T0040_BOND_MASTER LM ON LC.BOND_ID = LM.BOND_ID
				--		INNER JOIN T0100_MONTHLY_BOND_SKIP_APPROVAL MLS ON LC.BOND_ID = MLS.BOND_ID AND MLS.REQUEST_ID = @REQUEST_ID
				--		WHERE FLOOR(LC.BOND_CLOSING) > 0
						
				--	END
				--ELSE IF EXISTS(SELECT 1 FROM T0100_MONTHLY_BOND_SKIP_APPLICATION WHERE REQUEST_ID = @REQUEST_ID)
				
				--		SELECT ROW_NUMBER()OVER(ORDER BY LC.BOND_APR_ID) AS ROW_ID, (CASE WHEN LC.BOND_CLOSING < 0 THEN 0 ELSE LC.BOND_CLOSING END) AS BOND_CLOSING,LC.*,BOND_NAME,ISNULL(MLS.NEW_INSTALL_AMOUNT,0) AS NEW_INSTALL_AMT
				--		FROM #BOND_CLOSING LC  INNER JOIN DBO.T0040_BOND_MASTER LM ON LC.BOND_ID = LM.BOND_ID
				--		INNER JOIN T0100_MONTHLY_BOND_SKIP_APPLICATION MLS ON LC.BOND_ID = MLS.BOND_ID AND MLS.REQUEST_ID = ISNULL(@REQUEST_ID,0)
				--		WHERE FLOOR(LC.BOND_CLOSING) > 0
						
				--ELSE
				--	BEGIN
				--		SELECT ROW_NUMBER()OVER(ORDER BY LC.BOND_APR_ID) AS ROW_ID, (CASE WHEN LC.BOND_CLOSING < 0 THEN 0 ELSE LC.BOND_CLOSING END) AS BOND_CLOSING,LC.*,BOND_NAME,ISNULL(MLS.NEW_INSTALL_AMOUNT,0) AS NEW_INSTALL_AMT
				--		FROM #BOND_CLOSING LC  INNER JOIN DBO.T0040_BOND_MASTER LM ON LC.BOND_ID = LM.BOND_ID
				--		LEFT OUTER JOIN T0100_MONTHLY_BOND_SKIP_APPLICATION MLS ON LC.BOND_ID = MLS.BOND_ID AND MLS.REQUEST_ID = ISNULL(@REQUEST_ID,0)
				--		WHERE FLOOR(LC.BOND_CLOSING) > 0
				--	END
			END
		Else
			BEGIN
			
				PRINT 2
				--IF EXISTS(SELECT 1 FROM T0100_MONTHLY_BOND_SKIP_APPROVAL WHERE REQUEST_ID = @REQUEST_ID AND FINAL_APPROVAL = 0)
				--	BEGIN
				--		SELECT ROW_NUMBER()OVER(ORDER BY LC.BOND_APR_ID) AS ROW_ID, (CASE WHEN LC.BOND_CLOSING < 0 THEN 0 ELSE LC.BOND_CLOSING END) AS BOND_CLOSING,LC.*,BOND_NAME,ISNULL(MLS.NEW_INSTALL_AMOUNT,0) AS NEW_INSTALL_AMT
				--		FROM #BOND_CLOSING LC  INNER JOIN DBO.T0040_BOND_MASTER LM ON LC.BOND_ID = LM.BOND_ID
				--		INNER JOIN T0100_MONTHLY_BOND_SKIP_APPROVAL MLS ON LC.BOND_ID = MLS.BOND_ID AND MLS.REQUEST_ID = @REQUEST_ID
				--		INNER JOIN(
				--			SELECT MAX(RPT_LEVEL) AS RPT_LEVEL FROM T0100_MONTHLY_BOND_SKIP_APPROVAL WHERE REQUEST_ID = @REQUEST_ID AND FINAL_APPROVAL = 0
				--		) AS QRY ON MLS.RPT_LEVEL = QRY.RPT_LEVEL	
				--		WHERE FLOOR(LC.BOND_CLOSING) > 0
				--	END
				--ELSE IF EXISTS(SELECT 1 FROM T0100_MONTHLY_BOND_SKIP_APPLICATION WHERE REQUEST_ID = @REQUEST_ID)
				--		SELECT ROW_NUMBER()OVER(ORDER BY LC.BOND_APR_ID) AS ROW_ID, (CASE WHEN LC.BOND_CLOSING < 0 THEN 0 ELSE LC.BOND_CLOSING END) AS BOND_CLOSING,LC.*,BOND_NAME,ISNULL(MLS.NEW_INSTALL_AMOUNT,0) AS NEW_INSTALL_AMT
				--		FROM #BOND_CLOSING LC  INNER JOIN DBO.T0040_BOND_MASTER LM ON LC.BOND_ID = LM.BOND_ID
				--		INNER JOIN T0100_MONTHLY_BOND_SKIP_APPLICATION MLS ON LC.BOND_ID = MLS.BOND_ID AND MLS.REQUEST_ID = ISNULL(@REQUEST_ID,0)
				--		WHERE FLOOR(LC.BOND_CLOSING) > 0
				--ELSE
				--	BEGIN
				--		SELECT ROW_NUMBER()OVER(ORDER BY LC.BOND_APR_ID) AS ROW_ID, (CASE WHEN LC.BOND_CLOSING < 0 THEN 0 ELSE LC.BOND_CLOSING END) AS BOND_CLOSING,LC.*,BOND_NAME,ISNULL(MLS.NEW_INSTALL_AMOUNT,0) AS NEW_INSTALL_AMT
				--		FROM #BOND_CLOSING LC  INNER JOIN DBO.T0040_BOND_MASTER LM ON LC.BOND_ID = LM.BOND_ID
				--		LEFT OUTER JOIN T0100_MONTHLY_BOND_SKIP_APPLICATION MLS ON LC.BOND_ID = MLS.BOND_ID AND MLS.REQUEST_ID = ISNULL(@REQUEST_ID,0)
				--		WHERE FLOOR(LC.BOND_CLOSING) > 0
				--	END
			END
		
		


