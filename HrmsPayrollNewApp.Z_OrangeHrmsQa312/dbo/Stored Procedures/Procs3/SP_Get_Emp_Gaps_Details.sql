

---18/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[SP_Get_Emp_Gaps_Details] 
	-- Add the parameters for the stored procedure here
	@EMP_ID As Numeric(5,0),
	@FOR_DATE As Datetime
AS

SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON


BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	
	
	DECLARE @CMP_ID NUMERIC(5,0)
	SELECT @CMP_ID = CMP_ID FROM T0080_EMP_MASTER WITH (NOLOCK) WHERE EMP_ID = @EMP_ID
	
	IF OBJECT_ID('TEMPDB..#EMP_CONS') IS NOT NULL
        BEGIN
			DROP TABLE #EMP_CONS
        END
	
	CREATE TABLE #EMP_CONS
    (
        EMP_ID NUMERIC,
        BRANCH_ID NUMERIC,
        INCREMENT_ID NUMERIC
    )

	INSERT INTO #EMP_CONS
	SELECT	Top 1 Emp_ID,Branch_ID,Increment_ID
	FROM	T0095_Increment WITH (NOLOCK)
	Where	Emp_ID=@Emp_ID AND Increment_Effective_Date <= @FOR_DATE
	Order by Increment_Effective_Date Desc, Increment_ID Desc
    
 --   INSERT INTO #EMP_CONS VALUES (@EMP_ID, 0, 0)
            
 --   UPDATE  E 
	--SET		Branch_ID = I.Branch_ID, Increment_ID=I.Increment_ID
	--FROM	#Emp_Cons E						
	--		INNER JOIN (SELECT	I1.EMP_ID, I1.INCREMENT_ID, I1.BRANCH_ID
	--					FROM	T0095_INCREMENT I1 INNER JOIN #Emp_Cons E1 ON I1.Emp_ID=E1.EMP_ID
	--							INNER JOIN (SELECT	MAX(I2.Increment_ID) AS Increment_ID, I2.Emp_ID
	--										FROM	T0095_INCREMENT I2 INNER JOIN #Emp_Cons E2 ON I2.Emp_ID=E2.EMP_ID
	--												INNER JOIN (SELECT	MAX(INCREMENT_EFFECTIVE_DATE) AS INCREMENT_EFFECTIVE_DATE, I3.EMP_ID
	--															FROM	T0095_INCREMENT I3 INNER JOIN #Emp_Cons E3 ON I3.Emp_ID=E3.EMP_ID
	--															WHERE	I3.Increment_Effective_Date <= @For_Date
	--															GROUP BY I3.Emp_ID
	--															) I3 ON I2.Increment_Effective_Date=I3.INCREMENT_EFFECTIVE_DATE AND I2.Emp_ID=I3.Emp_ID																		
	--										WHERE	I2.Cmp_ID = IsNull(@Cmp_Id , I2.Cmp_ID)
	--										GROUP BY I2.Emp_ID
	--										) I2 ON I1.Emp_ID=I2.Emp_ID AND I1.Increment_ID=I2.INCREMENT_ID	
	--					WHERE	I1.Cmp_ID=IsNull(@Cmp_Id , I1.Cmp_ID)											
	--				) I ON E.EMP_ID=I.Emp_ID
    
    IF OBJECT_ID('TEMPDB..#DATA') IS NOT NULL
        BEGIN
			DROP TABLE #DATA
        END
        
    CREATE TABLE #DATA         
    (         
       EMP_ID   NUMERIC ,         
       FOR_DATE DATETIME,        
       DURATION_IN_SEC NUMERIC,        
       SHIFT_ID NUMERIC ,        
       SHIFT_TYPE NUMERIC ,        
       EMP_OT  NUMERIC ,        
       EMP_OT_MIN_LIMIT NUMERIC,        
       EMP_OT_MAX_LIMIT NUMERIC,        
       P_DAYS  NUMERIC(12,3) DEFAULT 0,        
       OT_SEC  NUMERIC DEFAULT 0  ,
       IN_TIME DATETIME,
       SHIFT_START_TIME DATETIME,
       OT_START_TIME NUMERIC DEFAULT 0,
       SHIFT_CHANGE TINYINT DEFAULT 0,
       FLAG INT DEFAULT 0,
       WEEKOFF_OT_SEC  NUMERIC DEFAULT 0,
       HOLIDAY_OT_SEC  NUMERIC DEFAULT 0,
       CHK_BY_SUPERIOR NUMERIC DEFAULT 0,
       IO_TRAN_ID      NUMERIC DEFAULT 0, -- IO_TRAN_ID IS USED FOR IS_CMP_PURPOSE (T0150_EMP_INOUT)
       OUT_TIME DATETIME,
       SHIFT_END_TIME DATETIME,         --ANKIT 16112013
       OT_END_TIME NUMERIC DEFAULT 0,   --ANKIT 16112013
       WORKING_HRS_ST_TIME TINYINT DEFAULT 0, --HARDIK 14/02/2014
       WORKING_HRS_END_TIME TINYINT DEFAULT 0, --HARDIK 14/02/2014
       GATEPASS_DEDUCT_DAYS NUMERIC(18,2) DEFAULT 0 -- ADD BY GADRIWALA MUSLIM 05012014
   )    
   
   EXEC P_GET_EMP_INOUT @CMP_ID,@FOR_DATE,@FOR_DATE
	
	SELECT ROW_NUMBER() OVER(PARTITION BY EIR.EMP_ID ORDER BY D.FOR_DATE,ISNULL(EIR.IN_TIME, EIR.OUT_TIME)) AS ROW_ID,	
				  EIR.EMP_ID,D.FOR_DATE,EIR.IN_TIME,EIR.OUT_TIME 
	INTO	#EIO 	
	FROM	T0150_EMP_INOUT_RECORD EIR WITH (NOLOCK)
			INNER JOIN 	#DATA D ON D.EMP_ID=EIR.EMP_ID AND EIR.In_Time Between D.In_Time AND IsNull(D.Out_Time, DateAdd(HH, 8 , D.In_Time))
    WHERE	EIR.EMP_ID=@EMP_ID AND D.FOR_DATE=@FOR_DATE 
	ORDER BY ISNULL(EIR.IN_TIME,EIR.OUT_TIME),EIR.OUT_TIME,REASON,EIR.Half_Full_day
		   
   ;WITH Q(ROW_ID,EMP_ID,FOR_DATE,IN_TIME,OUT_TIME,LVL, DIFF,DIFFSE) AS
	(
		SELECT	ROW_ID, EIO1.EMP_ID,FOR_DATE,IN_TIME,OUT_TIME, 'U' AS LVL, CAST(NULL AS DATETIME) AS DIFF ,CAST(0 AS INT) AS DIFFSE
		FROM	#EIO EIO1
		WHERE	ROW_ID=1
		UNION ALL
		SELECT	EIO2.ROW_ID,EIO2.EMP_ID,EIO2.FOR_DATE,EIO2.IN_TIME,EIO2.OUT_TIME,'D' AS LVL,Q.OUT_TIME ,CAST(DATEDIFF(S,Q.OUT_TIME,EIO2.IN_TIME) AS INT) AS DIFFSE --CAST(EIO2.IN_TIME - Q.OUT_TIME AS DATETIME) AS DIFF
		FROM	#EIO EIO2 INNER JOIN Q ON EIO2.ROW_ID = (Q.ROW_ID + 1) AND Q.EMP_ID=EIO2.EMP_ID
	) 

	SELECT EC.ALPHA_EMP_CODE + ' - ' + EC.EMP_FULL_NAME AS EMP_NAME,Q.EMP_ID,
				  (CASE WHEN DIFF IS NULL THEN '-' ELSE CAST(CAST(DIFF AS TIME(0)) AS VARCHAR(5)) END) AS OUT_TIME,
				  (CASE WHEN IN_TIME IS NULL THEN '-' ELSE CAST(CAST(IN_TIME AS TIME(0)) AS VARCHAR(5)) END) AS IN_TIME,
				  (CASE WHEN DIFFSE = 0 THEN '-' ELSE DBO.F_RETURN_HOURS(DIFFSE) END) AS DURATION,
				  Q.FOR_DATE
				  into #GAPSD
			FROM Q 
			INNER JOIN T0080_EMP_MASTER EC WITH (NOLOCK) ON Q.EMP_ID = EC.EMP_ID 
			WHERE LVL = 'D'

	

	if exists( SELECT 1 FROM #GAPSD )
	Begin
	    select * from #GAPSD
	end
	--else
	--Begin
	--
	--  select 'No Records' as EMP_NAME, 0 as EMP_ID,null as OUT_TIME, null as IN_TIME,null as DURATION , @FOR_DATE as FOR_DATE
	--
	--end
			
	
	
	--SELECT EC.ALPHA_EMP_CODE + '-' + EC.EMP_FULL_NAME AS EMP_NAME,EIR.EMP_ID,Cast(CAST(IN_TIME AS TIME(0)) as Varchar(5)) AS IN_TIME,
	--			  (CASE WHEN OUT_TIME IS NULL THEN '00:00' ELSE Cast(CAST(OUT_TIME AS TIME(0)) as Varchar(5)) END) AS OUT_TIME,
	--			  Case When OUT_TIME IS NOT NULL and IN_TIME IS NOT NULL 
	--					THEN DBO.F_RETURN_HOURS((DATEDIFF(MINUTE,CAST(IN_TIME AS TIME(0)),CAST(OUT_TIME AS TIME(0))))*60) ELSE '00:00' END AS DURATION,
	--			  FOR_DATE
	--FROM	DBO.T0150_EMP_INOUT_RECORD  EIR 
	--INNER JOIN T0080_EMP_MASTER EC ON EIR.EMP_ID = EC.EMP_ID 
	--INNER JOIN(
	--			SELECT	I.INCREMENT_ID,I.EMP_ID,EMP_OT,ISNULL(EMP_OT_MIN_LIMIT,'00:00')EMP_OT_MIN_LIMIT,ISNULL(EMP_OT_MAX_LIMIT,'00:00')EMP_OT_MAX_LIMIT 
	--			FROM	DBO.T0095_INCREMENT I 
	--		   ) IQ ON EIR.EMP_ID = IQ.EMP_ID AND IQ.INCREMENT_ID=EC.INCREMENT_ID
	--WHERE	 EIR.FOR_DATE = @FOR_DATE AND EC.EMP_ID = @EMP_ID
	--GROUP BY EIR.EMP_ID,IN_TIME,OUT_TIME,FOR_DATE,ALPHA_EMP_CODE,EMP_FULL_NAME
	--ORDER BY EIR.FOR_DATE
	
END
