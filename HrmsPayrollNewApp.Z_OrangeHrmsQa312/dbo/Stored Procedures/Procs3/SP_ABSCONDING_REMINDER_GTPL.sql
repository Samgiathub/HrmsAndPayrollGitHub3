CREATE PROCEDURE [dbo].[SP_ABSCONDING_REMINDER_GTPL]
/* =============================================
	NOTE	: PLZ DO NOT DELETE THIS PORTION , IT EXPLAIN YOU REGARDING THE FUNCTIONALITY OF THIS JOB
	AUTHOR:			SHAIKH RAMIZ
	CREATED DATE:	23/05/2017
	DESCRIPTION:	THIS JOB WILL SEND EMAIL REMIDER TO THOSE EMPLOYEE WHO ARE ABSENT. EMAIL WILL BE SENT ON DEFINED INTERVAL.
					WHEN LAST EMAIL WILL BE SENT AT THAT TIME , EMPLOYEE WILL BE LEFT FROM PAYROLL. . .
---29/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
 ============================================= */
	@CMP_ID_PASS		NUMERIC,
	@CC_EMAIL VARCHAR(500) = '',
	@FIRST_MAIL_AFTER	INTEGER = 7,
	@SECOND_MAIL_AFTER	INTEGER = 14,
	@THIRD_MAIL_AFTER	INTEGER = 21
AS
BEGIN
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON
	
	DECLARE @CMP_ID AS NUMERIC
	SET @CMP_ID = ISNULL(@CMP_ID_PASS,0)	--THIS IS KEPT ONLY BECAUSE WE HAVE KEPT ON SQL JOB PAGE AND PARAMATER IS PASSED AS "@CMP_ID_PASS" 
	
	
	DECLARE @EMP_ID AS NUMERIC
	DECLARE @EMP_CODE AS VARCHAR(100)
	DECLARE @EMPL_NAME AS VARCHAR(100)
	DECLARE @EMPL_BRANCH AS VARCHAR(100)
	DECLARE @EMPL_EMAIL_ID AS VARCHAR(100) 
	DECLARE @SUPERIOR_EMAIL_ID AS VARCHAR(100) 
	DECLARE @LAST_ATTENDED_DATE AS DATETIME
	DECLARE @ABSENT_DAYS_COUNT AS INTEGER
	DECLARE @Body AS VARCHAR(MAX) = ''
	DECLARE @COMPANY_NAME AS VARCHAR(255)
	DECLARE @CUR_STAGE	AS VARCHAR(10)
	DECLARE @CUR_CMPID	AS NUMERIC
	DECLARE @PROFILE AS VARCHAR(50)
	SET @PROFILE = ''
	
	DECLARE @TABLE_TEMPLATE AS  VARCHAR(MAX) = ''
	DECLARE @TABLE_TEMPLATE_ONE AS  VARCHAR(MAX) = ''
	DECLARE @TABLE_TEMPLATE_TWO AS  VARCHAR(MAX) = ''
	DECLARE @TABLE_TEMPLATE_THREE AS  VARCHAR(MAX) = ''	
	DECLARE @EMP_CODE_WITH_NO_EMAIL AS VARCHAR(MAX)
	DECLARE @HR_EMAILS AS VARCHAR(MAX)
		
	DECLARE @TO_DATE DATETIME
	SET @TO_DATE = CAST (GETDATE() as DATE)	--DATE ON WHICH JOB IS RUNNING
		

	SELECT @PROFILE = ISNULL(DB_MAIL_PROFILE_NAME,'') FROM T9999_REMINDER_MAIL_PROFILE WHERE CMP_ID = 0
	
	IF @CMP_ID = 0
		BEGIN
				DECLARE @TEMP_CMP_ID AS NUMERIC
				SELECT TOP 1 @TEMP_CMP_ID	 = CMP_ID FROM T0010_COMPANY_MASTER WITH (NOLOCK) WHERE IS_MAIN = 1
				SELECT @TABLE_TEMPLATE_ONE	 = EMAIL_SIGNATURE FROM dbo.T0010_EMAIL_FORMAT_SETTING WITH (NOLOCK) WHERE CMP_ID = @TEMP_CMP_ID AND EMAIL_TYPE='Absconding Reminder 1'
				SELECT @TABLE_TEMPLATE_TWO   = EMAIL_SIGNATURE FROM dbo.T0010_EMAIL_FORMAT_SETTING WITH (NOLOCK) WHERE CMP_ID = @TEMP_CMP_ID AND EMAIL_TYPE='Absconding Reminder 2'
				SELECT @TABLE_TEMPLATE_THREE = EMAIL_SIGNATURE FROM dbo.T0010_EMAIL_FORMAT_SETTING WITH (NOLOCK) WHERE CMP_ID = @TEMP_CMP_ID AND EMAIL_TYPE='Absconding Reminder 3'
		END
	ELSE
		BEGIN	
				SELECT @TABLE_TEMPLATE_ONE	 = EMAIL_SIGNATURE FROM dbo.T0010_EMAIL_FORMAT_SETTING WITH (NOLOCK) WHERE CMP_ID = @CMP_ID AND EMAIL_TYPE='Absconding Reminder 1'
				SELECT @TABLE_TEMPLATE_TWO	 = EMAIL_SIGNATURE FROM dbo.T0010_EMAIL_FORMAT_SETTING WITH (NOLOCK) WHERE CMP_ID = @CMP_ID AND EMAIL_TYPE='Absconding Reminder 2'
				SELECT @TABLE_TEMPLATE_THREE = EMAIL_SIGNATURE FROM dbo.T0010_EMAIL_FORMAT_SETTING WITH (NOLOCK) WHERE CMP_ID = @CMP_ID AND EMAIL_TYPE='Absconding Reminder 3'
		END
	
IF @CMP_ID = 0
	SET @CMP_ID = NULL	
	
IF OBJECT_ID('tempdb..#EMAIL') IS NOT NULL 
	 BEGIN
		   DROP TABLE #EMAIL
	 END	
	CREATE TABLE #EMAIL
	(
		EMP_ID				NUMERIC,
		CMP_ID				NUMERIC,
		CMP_NAME			VARCHAR(100), 
		ALPHA_EMP_CODE		VARCHAR(100), 
		EMP_FULL_NAME		VARCHAR(200),
		BRANCH_NAME			VARCHAR(25),
		LAST_ATTENDEND_DATE	DATETIME, 
		OTHER_EMAIL			VARCHAR(100),
		CUR_STAGE			VARCHAR(10)
	)

	
--HERE FIRST WE WILL CHECK THOSE EMPLOYEE WHOM WE HAVE ALREADY SENT 2 REMINDERS
	IF EXISTS (	SELECT 1 FROM T9999_ABSCONDING_MAIL_HISTORY WITH (NOLOCK)
				WHERE	(REMINDER_ONE_DATE IS NOT NULL) AND (REMINDER_TWO_DATE IS NOT NULL) 
						AND (REMINDER_THREE_DATE IS NULL)
						AND DATEDIFF(DD,ISNULL(REMINDER_TWO_DATE, '1900-01-01'),@TO_DATE) > (ISNULL(@THIRD_MAIL_AFTER,0) - ISNULL(@SECOND_MAIL_AFTER,0))
			  )
		BEGIN
		
			IF OBJECT_ID('tempdb..#REMINDER_TWO_SENT') IS NOT NULL 
				 BEGIN
					   DROP TABLE #REMINDER_TWO_SENT
				 END
		 
			SELECT EMP_ID , CMP_ID
			INTO #REMINDER_TWO_SENT
			FROM T9999_ABSCONDING_MAIL_HISTORY WITH (NOLOCK)
			WHERE (REMINDER_ONE_DATE IS NOT NULL)
			AND (REMINDER_TWO_DATE IS NOT NULL) AND (REMINDER_THREE_DATE IS NULL)
			AND DATEDIFF(DD,ISNULL(REMINDER_TWO_DATE, '1900-01-01'),@TO_DATE) > (ISNULL(@THIRD_MAIL_AFTER,0) - ISNULL(@SECOND_MAIL_AFTER,0))
		
		
			IF EXISTS (SELECT 1 FROM #REMINDER_TWO_SENT)	--THIS PORTION WILL SEND THIRD REMINDER TO EMPLOYEES
				BEGIN
					IF OBJECT_ID('tempdb..#EMP_FOR_THIRD_REMINDER') IS NOT NULL 
					 BEGIN
						   DROP TABLE #EMP_FOR_THIRD_REMINDER
					 END
					 
					SELECT EM.CMP_ID , EM.EMP_ID ,INC.INCREMENT_ID, EM.ALPHA_EMP_CODE , EM.EMP_FULL_NAME ,BM.BRANCH_NAME, 
					DM.DESIG_NAME , ISNULL(Q2.LT_FOR_DATE, Q1.EIR_FOR_DATE) AS LAST_ATTENDEND_DATE,
					DATEDIFF(DD,ISNULL(Q2.LT_FOR_DATE, Q1.EIR_FOR_DATE) ,  @TO_DATE) AS TOTAL_ABSENT_DAYS ,
					RTRIM(LTRIM(EM.OTHER_EMAIL)) AS OTHER_EMAIL, CM.CMP_NAME
					INTO #EMP_FOR_THIRD_REMINDER
					FROM T0080_EMP_MASTER EM WITH (NOLOCK)
					INNER JOIN  #REMINDER_TWO_SENT RO ON RO.EMP_ID = EM.EMP_ID AND RO.CMP_ID = EM.CMP_ID
					INNER JOIN T0095_INCREMENT INC WITH (NOLOCK)	ON INC.EMP_ID = EM.EMP_ID AND INC.CMP_ID = EM.CMP_ID
					INNER JOIN (
									SELECT	MAX(I2.Increment_ID) AS Increment_ID,I2.Emp_ID 
									FROM	T0095_Increment I2 WITH (NOLOCK)
									INNER JOIN T0080_EMP_MASTER E WITH (NOLOCK) ON I2.Emp_ID=E.Emp_ID
									INNER JOIN (
													SELECT MAX(INCREMENT_EFFECTIVE_DATE) AS INCREMENT_EFFECTIVE_DATE, I3.EMP_ID
													FROM T0095_INCREMENT I3 WITH (NOLOCK) INNER JOIN T0080_EMP_MASTER E3 WITH (NOLOCK) ON I3.Emp_ID=E3.Emp_ID	
													WHERE I3.INCREMENT_EFFECTIVE_DATE <= @TO_DATE
													GROUP BY I3.EMP_ID  
												) I3 ON I2.Increment_Effective_Date=I3.Increment_Effective_Date AND I2.EMP_ID=I3.Emp_ID																																			
									GROUP BY I2.Emp_ID
								) I ON INC.Emp_ID = I.Emp_ID AND INC.Increment_ID = I.Increment_ID
					INNER JOIN T0150_EMP_INOUT_RECORD EIR WITH (NOLOCK) ON EM.Emp_ID = EIR.Emp_ID
					INNER JOIN (
								SELECT EIR1.EMP_ID , MAX(EIR1.FOR_DATE) AS EIR_FOR_DATE 
								FROM T0150_EMP_INOUT_RECORD EIR1 WITH (NOLOCK)
								GROUP BY EIR1.EMP_ID
								)Q1 ON EM.EMP_ID = Q1.EMP_ID 
					LEFT OUTER JOIN 
								(
								SELECT LT.Emp_ID , MAX(LT.For_Date) AS LT_FOR_DATE
								FROM T0140_LEAVE_TRANSACTION LT WITH (NOLOCK)
								WHERE LT.Leave_Used <> 0
								GROUP BY LT.EMP_ID
								)Q2 ON EM.Emp_ID = Q2.Emp_ID AND Q2.LT_FOR_DATE > Q1.EIR_FOR_DATE
					INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON BM.BRANCH_ID = INC.BRANCH_ID AND INC.CMP_ID = BM.CMP_ID
					INNER JOIN T0040_DESIGNATION_MASTER DM WITH (NOLOCK) ON DM.DESIG_ID = INC.DESIG_ID AND INC.CMP_ID = DM.CMP_ID AND DM.ABSCONDING_REMINDER = 1
					INNER JOIN T0010_COMPANY_MASTER CM WITH (NOLOCK) ON INC.CMP_ID = CM.CMP_ID
					INNER JOIN T0011_LOGIN LG WITH (NOLOCK) ON LG.Cmp_ID = EM.Cmp_Id	AND LG.Emp_ID = EM.Emp_ID --AND LG.Is_Active = 1			
					WHERE INC.Cmp_ID = ISNULL(@CMP_ID,INC.CMP_ID) AND INC.EMP_FIX_SALARY <> 1 AND EM.EMP_LEFT <> 'Y' 
					AND DATEDIFF(dd,ISNULL(Q2.LT_FOR_DATE, Q1.EIR_FOR_DATE) , @TO_DATE) >= @THIRD_MAIL_AFTER
					GROUP BY EM.CMP_ID , EM.EMP_ID ,INC.Increment_ID,EM.ALPHA_EMP_CODE, EM.EMP_FULL_NAME,BM.BRANCH_NAME, DM.DESIG_NAME ,
						Q2.LT_FOR_DATE,Q1.EIR_FOR_DATE , EM.Other_Email , CM.CMP_NAME
		
					DROP TABLE #REMINDER_TWO_SENT
					TRUNCATE TABLE #EMAIL

					--DELETING INACTIVE EMPLOYEE IF PRESENT IN TABLE
					DELETE FROM T9999_ABSCONDING_MAIL_HISTORY
					WHERE
					EXISTS (SELECT EMP_ID FROM T0011_LOGIN LG WITH (NOLOCK)
							WHERE LG.EMP_ID = T9999_ABSCONDING_MAIL_HISTORY.EMP_ID AND LG.Cmp_ID = T9999_ABSCONDING_MAIL_HISTORY.Cmp_ID AND LG.Is_Active = 0 )
					
					INSERT INTO #EMAIL
					SELECT EMP_ID ,CMP_ID , CMP_NAME , ALPHA_EMP_CODE , EMP_FULL_NAME ,BRANCH_NAME, LAST_ATTENDEND_DATE , OTHER_EMAIL , 'THIRD'
					FROM #EMP_FOR_THIRD_REMINDER Where Total_Absent_Days >= 8
					ORDER BY EMP_ID
					
					DROP TABLE #EMP_FOR_THIRD_REMINDER
				END				
		END

--HERE WE WILL CHECK THOSE EMPLOYEE WHOM WE HAVE ALREADY SENT 1 REMINDER		

	IF EXISTS (	SELECT 1 FROM T9999_ABSCONDING_MAIL_HISTORY  WITH (NOLOCK)
				WHERE (REMINDER_ONE_DATE IS NOT NULL) 
				AND (REMINDER_TWO_DATE IS NULL) AND (REMINDER_THREE_DATE IS NULL)
				AND DATEDIFF(DD,ISNULL(REMINDER_ONE_DATE, '1900-01-01'),@TO_DATE) > (ISNULL(@SECOND_MAIL_AFTER,0) - ISNULL(@FIRST_MAIL_AFTER,0))
			   )
		BEGIN
		
			IF OBJECT_ID('tempdb..#REMINDER_ONE_SENT') IS NOT NULL 
				 BEGIN
					   DROP TABLE #REMINDER_ONE_SENT
				 END
		 
			SELECT EMP_ID , CMP_ID
			INTO #REMINDER_ONE_SENT
			FROM T9999_ABSCONDING_MAIL_HISTORY WITH (NOLOCK)
			WHERE REMINDER_ONE_DATE IS NOT NULL
			AND (REMINDER_TWO_DATE IS NULL) AND (REMINDER_THREE_DATE IS NULL)
			AND DATEDIFF(DD,ISNULL(REMINDER_ONE_DATE, '1900-01-01'),@TO_DATE) > (ISNULL(@SECOND_MAIL_AFTER,0) - ISNULL(@FIRST_MAIL_AFTER,0))
			
			
			IF EXISTS (SELECT 1 FROM #REMINDER_ONE_SENT)	--THIS PORTION WILL SEND SECOND REMINDER TO EMPLOYEES
				BEGIN
					IF OBJECT_ID('tempdb..#EMP_FOR_SECOND_REMINDER') IS NOT NULL 
					 BEGIN
						   DROP TABLE #EMP_FOR_SECOND_REMINDER
					 END
					
					SELECT	EM.CMP_ID ,EM.EMP_ID ,INC.INCREMENT_ID, EM.ALPHA_EMP_CODE , EM.EMP_FULL_NAME ,BM.BRANCH_NAME, 
							DM.DESIG_NAME , ISNULL(Q2.LT_FOR_DATE, Q1.EIR_FOR_DATE) AS LAST_ATTENDEND_DATE,
							DATEDIFF(DD,ISNULL(Q2.LT_FOR_DATE, Q1.EIR_FOR_DATE) ,  @TO_DATE) AS TOTAL_ABSENT_DAYS ,
							RTRIM(LTRIM(EM.OTHER_EMAIL)) AS OTHER_EMAIL, CM.CMP_NAME
							INTO #EMP_FOR_SECOND_REMINDER
							FROM T0080_EMP_MASTER EM WITH (NOLOCK)
							INNER JOIN #REMINDER_ONE_SENT RO  ON RO.EMP_ID = EM.EMP_ID AND RO.CMP_ID = EM.CMP_ID
							INNER JOIN T0095_INCREMENT INC	WITH (NOLOCK) ON INC.EMP_ID = EM.EMP_ID AND INC.CMP_ID = EM.CMP_ID
							INNER JOIN (
											SELECT	MAX(I2.Increment_ID) AS Increment_ID,I2.Emp_ID 
											FROM	T0095_Increment I2 WITH (NOLOCK) INNER JOIN T0080_EMP_MASTER E WITH (NOLOCK) ON I2.Emp_ID=E.Emp_ID
													INNER JOIN (
																	SELECT MAX(INCREMENT_EFFECTIVE_DATE) AS INCREMENT_EFFECTIVE_DATE, I3.EMP_ID
																	FROM T0095_INCREMENT I3 WITH (NOLOCK) INNER JOIN T0080_EMP_MASTER E3 WITH (NOLOCK) ON I3.Emp_ID=E3.Emp_ID	
																	WHERE I3.Increment_effective_Date <= @TO_DATE
																	GROUP BY I3.EMP_ID  
																) I3 ON I2.Increment_Effective_Date=I3.Increment_Effective_Date AND I2.EMP_ID=I3.Emp_ID																																			
											GROUP BY I2.Emp_ID
										) I ON INC.Emp_ID = I.Emp_ID AND INC.Increment_ID = I.Increment_ID
							INNER JOIN T0150_EMP_INOUT_RECORD EIR WITH (NOLOCK) ON EM.Emp_ID = EIR.Emp_ID
							INNER JOIN (
										SELECT EIR1.EMP_ID , MAX(EIR1.FOR_DATE) AS EIR_FOR_DATE 
										FROM T0150_EMP_INOUT_RECORD EIR1 WITH (NOLOCK)
										GROUP BY EIR1.EMP_ID
										)Q1 ON EM.EMP_ID = Q1.EMP_ID 
							LEFT OUTER JOIN 
										(
										SELECT LT.Emp_ID , MAX(LT.For_Date) AS LT_FOR_DATE
										FROM T0140_LEAVE_TRANSACTION LT WITH (NOLOCK)
										WHERE LT.Leave_Used <> 0
										GROUP BY LT.EMP_ID
										)Q2 ON EM.Emp_ID = Q2.Emp_ID AND Q2.LT_FOR_DATE > Q1.EIR_FOR_DATE
							INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON BM.BRANCH_ID = INC.BRANCH_ID AND INC.Cmp_ID = bm.Cmp_ID
							INNER JOIN T0040_DESIGNATION_MASTER DM WITH (NOLOCK) ON DM.DESIG_ID = INC.DESIG_ID AND INC.CMP_ID = DM.CMP_ID AND DM.ABSCONDING_REMINDER = 1
							INNER JOIN T0010_COMPANY_MASTER CM WITH (NOLOCK) ON INC.Cmp_ID = CM.Cmp_Id
							INNER JOIN T0011_LOGIN LG WITH (NOLOCK) ON LG.Cmp_ID = EM.Cmp_Id	AND LG.Emp_ID = EM.Emp_ID --AND LG.Is_Active = 1
							WHERE INC.Cmp_ID = ISNULL(@CMP_ID,INC.CMP_ID) AND INC.EMP_FIX_SALARY <> 1 AND EM.EMP_LEFT <> 'Y' 
							AND DATEDIFF(dd,ISNULL(Q2.LT_FOR_DATE, Q1.EIR_FOR_DATE) , @TO_DATE) >= @SECOND_MAIL_AFTER
							GROUP BY EM.CMP_ID , EM.EMP_ID ,INC.Increment_ID , EM.ALPHA_EMP_CODE, EM.EMP_FULL_NAME,BM.BRANCH_NAME, DM.DESIG_NAME,
									Q2.LT_FOR_DATE,Q1.EIR_FOR_DATE ,EM.Other_Email , CM.CMP_NAME
					
				
					--DELETING THOSE EMPLOYEE WHO ARE PRESENT AFTER FIRST REMINDER EMPLOYEES
					DELETE FROM T9999_ABSCONDING_MAIL_HISTORY
					WHERE
					EXISTS (SELECT EMP_ID FROM #REMINDER_ONE_SENT RO WHERE RO.EMP_ID = T9999_ABSCONDING_MAIL_HISTORY.EMP_ID) AND
					NOT EXISTS (SELECT EMP_ID FROM #EMP_FOR_SECOND_REMINDER SR WHERE SR.EMP_ID = T9999_ABSCONDING_MAIL_HISTORY.EMP_ID)
					
					--DELETING INACTIVE EMPLOYEE IF PRESENT IN TABLE
					DELETE FROM T9999_ABSCONDING_MAIL_HISTORY
					WHERE
					EXISTS (SELECT EMP_ID FROM T0011_LOGIN LG WITH (NOLOCK)
							WHERE LG.EMP_ID = T9999_ABSCONDING_MAIL_HISTORY.EMP_ID AND LG.Cmp_ID = T9999_ABSCONDING_MAIL_HISTORY.Cmp_ID AND LG.Is_Active = 0 )
							
					INSERT INTO #EMAIL
					SELECT EMP_ID ,CMP_ID , CMP_NAME , ALPHA_EMP_CODE , EMP_FULL_NAME , BRANCH_NAME , LAST_ATTENDEND_DATE , OTHER_EMAIL , 'SECOND'
					FROM #EMP_FOR_SECOND_REMINDER Where Total_Absent_Days >= 8
					ORDER BY EMP_ID
					
					DROP TABLE #REMINDER_ONE_SENT
					DROP TABLE #EMP_FOR_SECOND_REMINDER
			END
		END

--THIS PORTION WILL SEND FIRST REMINDER TO EMPLOYEES
	IF OBJECT_ID('tempdb..#EMP_FOR_FIRST_REMINDER') IS NOT NULL 
		 BEGIN
			   DROP TABLE #EMP_FOR_FIRST_REMINDER
		 END
		
		SELECT EM.CMP_ID , EM.EMP_ID ,INC.Increment_ID, EM.Alpha_Emp_Code , EM.Emp_Full_Name ,BM.Branch_Name
		,DM.Desig_Name , ISNULL(Q2.LT_FOR_DATE, Q1.EIR_FOR_DATE) as Last_Attendend_Date
		,DATEDIFF(dd,ISNULL(Q2.LT_FOR_DATE, Q1.EIR_FOR_DATE) ,  @TO_DATE) AS Total_Absent_Days
		,RTRIM(LTRIM(EM.Other_Email)) as Other_Email, CM.CMP_NAME
		INTO #EMP_FOR_FIRST_REMINDER
		FROM T0080_EMP_MASTER EM WITH (NOLOCK)		
		INNER JOIN T0095_INCREMENT INC WITH (NOLOCK) on INC.EMP_ID = EM.EMP_ID AND INC.CMP_ID = EM.CMP_ID
		INNER JOIN (
						SELECT	MAX(I2.Increment_ID) AS Increment_ID,I2.Emp_ID 
						FROM	T0095_Increment I2 WITH (NOLOCK)
						INNER JOIN T0080_EMP_MASTER E WITH (NOLOCK) ON I2.Emp_ID=E.Emp_ID
						INNER JOIN (
										SELECT MAX(INCREMENT_EFFECTIVE_DATE) AS INCREMENT_EFFECTIVE_DATE, I3.EMP_ID
										FROM T0095_INCREMENT I3 WITH (NOLOCK) INNER JOIN T0080_EMP_MASTER E3 WITH (NOLOCK) ON I3.Emp_ID=E3.Emp_ID	
										WHERE I3.INCREMENT_EFFECTIVE_DATE <= @TO_DATE
										GROUP BY I3.EMP_ID  
									) I3 ON I2.Increment_Effective_Date=I3.Increment_Effective_Date AND I2.EMP_ID=I3.Emp_ID																																			
						GROUP BY I2.Emp_ID
					) I ON INC.Emp_ID = I.Emp_ID AND INC.Increment_ID = I.Increment_ID
		INNER JOIN T0150_EMP_INOUT_RECORD EIR WITH (NOLOCK) ON EM.Emp_ID = EIR.Emp_ID
		INNER JOIN (
					SELECT EIR1.EMP_ID , MAX(EIR1.FOR_DATE) AS EIR_FOR_DATE 
					FROM T0150_EMP_INOUT_RECORD EIR1 WITH (NOLOCK)
					GROUP BY EIR1.EMP_ID
					)Q1 ON EM.EMP_ID = Q1.EMP_ID 
		LEFT OUTER JOIN 
					(
					SELECT LT.Emp_ID , MAX(LT.For_Date) AS LT_FOR_DATE
					FROM T0140_LEAVE_TRANSACTION LT WITH (NOLOCK)
					WHERE LT.Leave_Used <> 0
					GROUP BY LT.EMP_ID
					)Q2 ON EM.Emp_ID = Q2.Emp_ID AND Q2.LT_FOR_DATE > Q1.EIR_FOR_DATE
		INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON BM.BRANCH_ID = INC.BRANCH_ID AND INC.CMP_ID = BM.CMP_ID
		INNER JOIN T0040_DESIGNATION_MASTER DM WITH (NOLOCK) ON DM.DESIG_ID = INC.DESIG_ID AND INC.CMP_ID = DM.CMP_ID AND DM.ABSCONDING_REMINDER = 1
		INNER JOIN T0010_COMPANY_MASTER CM WITH (NOLOCK) ON INC.CMP_ID = CM.CMP_ID
		INNER JOIN T0011_LOGIN LG WITH (NOLOCK) ON LG.Cmp_ID = EM.Cmp_Id	AND LG.Emp_ID = EM.Emp_ID AND LG.Is_Active = 1		
		WHERE 
		INC.Cmp_ID = ISNULL(@CMP_ID,INC.CMP_ID) AND INC.EMP_FIX_SALARY <> 1 AND EM.EMP_LEFT <> 'Y' 
		AND DATEDIFF(dd,ISNULL(Q2.LT_FOR_DATE, Q1.EIR_FOR_DATE) , @TO_DATE) >= @FIRST_MAIL_AFTER
		AND NOT EXISTS 
			(
				SELECT 1 FROM T9999_ABSCONDING_MAIL_HISTORY AMH WITH (NOLOCK)
				WHERE AMH.EMP_ID = EM.EMP_ID AND AMH.CMP_ID = EM.CMP_ID
			) 
			--AND EM.Emp_ID=14651 for check email id
		GROUP BY EM.CMP_ID , EM.EMP_ID ,INC.Increment_ID,EM.ALPHA_EMP_CODE, EM.EMP_FULL_NAME,BM.BRANCH_NAME, DM.DESIG_NAME ,
				Q2.LT_FOR_DATE,Q1.EIR_FOR_DATE , EM.Other_Email , CM.CMP_NAME
		
		
		

		INSERT INTO #EMAIL
		SELECT EMP_ID ,CMP_ID ,CMP_NAME , ALPHA_EMP_CODE , EMP_FULL_NAME ,BRANCH_NAME , LAST_ATTENDEND_DATE , OTHER_EMAIL , 'FIRST'
		FROM #EMP_FOR_FIRST_REMINDER Where Total_Absent_Days >= 8
		ORDER BY EMP_ID
		
		--Select * From #EMP_FOR_FIRST_REMINDER
		--Select * From #EMAIL
		--RETURN

		DROP TABLE #EMP_FOR_FIRST_REMINDER

	

	IF EXISTS (SELECT 1 FROM #EMAIL)
		BEGIN		
			DECLARE CUR_EMPLOYEE CURSOR FOR
				SELECT EMP_ID ,CMP_ID ,CMP_NAME , ALPHA_EMP_CODE , EMP_FULL_NAME ,BRANCH_NAME, LAST_ATTENDEND_DATE , OTHER_EMAIL , CUR_STAGE
				FROM #EMAIL ORDER BY EMP_ID
			OPEN CUR_EMPLOYEE                      
				FETCH NEXT FROM CUR_EMPLOYEE INTO @EMP_ID , @CUR_CMPID, @COMPANY_NAME , @EMP_CODE , @EMPL_NAME , @EMPL_BRANCH ,@LAST_ATTENDED_DATE , @EMPL_EMAIL_ID , @CUR_STAGE
				WHILE @@FETCH_STATUS = 0
					BEGIN
						IF @EMPL_EMAIL_ID = ''
							BEGIN
								SET @EMP_CODE_WITH_NO_EMAIL = COALESCE(@EMP_CODE_WITH_NO_EMAIL + ',  <br/>' , '') + ( @EMP_CODE + ' - ' + @EMPL_NAME )
							END
						ELSE
							BEGIN
								IF @CUR_STAGE = 'THIRD'
									BEGIN
										UPDATE T9999_ABSCONDING_MAIL_HISTORY
										SET Reminder_Three_Date = @TO_DATE , 
											Reminder_Three_Sent = 1 , 
											Reason_Three = @EMPL_EMAIL_ID											
										WHERE EMP_ID = @EMP_ID AND CMP_ID = @CUR_CMPID 
										
										SELECT @BODY = @TABLE_TEMPLATE_THREE
										--SELECT @BODY = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(@BODY , '#EmployeeName#' , '' + @EMPL_NAME + ''),'#EmpCode#' , '' + @EMP_CODE +''),'#Branch#','' + @EMPL_BRANCH +''),'#Last_Attended_Date#','' + REPLACE(CONVERT(VARCHAR, @LAST_ATTENDED_DATE, 106) , ' ' , '-') +''),'#Signature#' , '' + @COMPANY_NAME + '')
										SELECT @BODY = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(@BODY , '#EmployeeName#' , '' + @EMPL_NAME + ''),'#EmpCode#' , '' + @EMP_CODE +''),'#Branch#','' + @EMPL_BRANCH +''),'#Last_Attended_Date#','' + REPLACE(CONVERT(VARCHAR, @LAST_ATTENDED_DATE, 106) , ' ' , '-') +''),'#Signature#' , '' + @COMPANY_NAME + ''),'#Current_Date#','' + FORMAT (getdate(), 'dd-MMM-yyyy ') +'')
										--EXEC msdb.dbo.sp_send_dbmail @profile_name = @PROFILE, @recipients = @EMPL_EMAIL_ID, @subject = 'Termination Letter due to Absenteeism', @body = @Body, @body_format = 'HTML', @copy_recipients = @CC_EMAIL
										--EXEC msdb.dbo.sp_send_dbmail @profile_name = 'DB_Mail_83', @recipients = @EMPL_EMAIL_ID, @subject = 'Discontinues from services', @body = @Body, @body_format = 'HTML', @copy_recipients = @CC_EMAIL
										EXEC msdb.dbo.sp_send_dbmail @profile_name = 'DB_Mail_83', @recipients = 'navin.dave@gtpl.net', @subject = 'Discontinues from services', @body = @Body, @body_format = 'HTML', @copy_recipients = @CC_EMAIL
										
										SET @LAST_ATTENDED_DATE = GETDATE()
										--CODE OF EMPLOYEE LEFT--
										EXEC P0100_LEFT_EMP_IMPORT	@LEFT_ID = 0,
																	@CMP_ID = @CMP_ID,
																	@EMP_CODE = @EMP_CODE,
																	--@LEFT_DATE = @LAST_ATTENDED_DATE,
																	--@REG_ACCEPT_DATE = @LAST_ATTENDED_DATE,
																	@LEFT_DATE = @LAST_ATTENDED_DATE,																	
																	@REG_ACCEPT_DATE = @LAST_ATTENDED_DATE,
																	--@LEFT_REASON = 'Terminated Due to Absence',
																	@Other_Reason = 'Terminated Due to Absence',
																	@NEW_EMPLOYER = '',
																	@IS_TERMINATE = 0,
																	@TRAN_TYPE = 'I',
																	@UNIFORM_RETURN = 0,
																	@EXIT_INTERVIEW = 0,
																	@NOTICE_PERIOD = 0,
																	@IS_DEATH = 0,
																	@RPTMANAGER_CODE = '',
																	@GUID = ''
																	,@Left_Reason=''
																	,@Is_Retire=0
																	,@Is_Absconded=1

										--EMPLOYEE LEFT CODE FINISH--
									END 
								ELSE IF @CUR_STAGE = 'SECOND'
									BEGIN
										UPDATE T9999_ABSCONDING_MAIL_HISTORY
										SET Reminder_Two_Date = @TO_DATE , 
											Reminder_Two_Sent = 1 , 
											Reason_Two = @EMPL_EMAIL_ID
										WHERE EMP_ID = @EMP_ID AND CMP_ID = @CUR_CMPID 
										
										SELECT @BODY = @TABLE_TEMPLATE_TWO
										--SELECT @BODY = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(@BODY , '#EmployeeName#' , '' + @EMPL_NAME + ''),'#EmpCode#' , '' + @EMP_CODE +''),'#Branch#','' + @EMPL_BRANCH +''),'#Last_Attended_Date#','' + REPLACE(CONVERT(VARCHAR, @LAST_ATTENDED_DATE, 106) , ' ' , '-') +''),'#Signature#' , '' + @COMPANY_NAME + '')
										SELECT @BODY = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(@BODY , '#EmployeeName#' , '' + @EMPL_NAME + ''),'#EmpCode#' , '' + @EMP_CODE +''),'#Branch#','' + @EMPL_BRANCH +''),'#Last_Attended_Date#','' + REPLACE(CONVERT(VARCHAR, @LAST_ATTENDED_DATE, 106) , ' ' , '-') +''),'#Signature#' , '' + @COMPANY_NAME + ''),'#Current Date#','' + FORMAT (getdate(), 'dd-MMM-yyyy ') +'')
										--EXEC msdb.dbo.sp_send_dbmail @profile_name = @PROFILE, @recipients = @EMPL_EMAIL_ID, @subject = 'Your current absence from work', @body = @Body, @body_format = 'HTML', @copy_recipients = @CC_EMAIL
										--EXEC msdb.dbo.sp_send_dbmail @profile_name = 'DB_Mail_83', @recipients = @EMPL_EMAIL_ID, @subject = 'Your current absence from work', @body = @Body, @body_format = 'HTML',@copy_recipients = @CC_EMAIL
										EXEC msdb.dbo.sp_send_dbmail @profile_name = 'DB_Mail_83', @recipients = 'navin.dave@gtpl.net', @subject = 'Your current absence from work', @body = @Body, @body_format = 'HTML',@copy_recipients = @CC_EMAIL
										
									END
								ELSE IF @CUR_STAGE = 'FIRST'
									BEGIN									
										INSERT INTO T9999_ABSCONDING_MAIL_HISTORY
											(EMP_ID , CMP_ID , REMINDER_ONE_DATE , REMINDER_ONE_SENT , REASON_ONE)
										SELECT @EMP_ID , @CUR_CMPID , @TO_DATE , 1 ,@EMPL_EMAIL_ID  
										
										SELECT @BODY = @TABLE_TEMPLATE_ONE 
										--SELECT @BODY = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(@BODY , '#EmployeeName#' , '' + @EMPL_NAME + ''),'#EmpCode#' , '' + @EMP_CODE +''),'#Branch#','' + @EMPL_BRANCH +''),'#Last_Attended_Date#','' + REPLACE(CONVERT(VARCHAR, @LAST_ATTENDED_DATE, 106) , ' ' , '-') +''),'#Signature#' , '' + @COMPANY_NAME + '')
										SELECT @BODY = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(@BODY , '#EmployeeName#' , '' + @EMPL_NAME + ''),'#EmpCode#' , '' + @EMP_CODE +''),'#Branch#','' + @EMPL_BRANCH +''),'#Last_Attended_Date#','' + REPLACE(CONVERT(VARCHAR, @LAST_ATTENDED_DATE, 106) , ' ' , '-') +''),'#Signature#' , '' + @COMPANY_NAME + ''),'#Current Date#','' + FORMAT (getdate(), 'dd-MMM-yyyy ') +'')
										--EXEC msdb.dbo.sp_send_dbmail @profile_name = @PROFILE, @recipients = @EMPL_EMAIL_ID, @subject = 'Unauthorised Absence', @body = @Body, @body_format = 'HTML', @copy_recipients = @CC_EMAIL
										--EXEC msdb.dbo.sp_send_dbmail @profile_name = 'DB_Mail_83', @recipients = @EMPL_EMAIL_ID, @subject = 'Unauthorised Absence', @body = @Body, @body_format = 'HTML', @copy_recipients = @CC_EMAIL
										EXEC msdb.dbo.sp_send_dbmail @profile_name = 'DB_Mail_83', @recipients = 'navin.dave@gtpl.net', @subject = 'Unauthorised Absence', @body = @Body, @body_format = 'HTML', @copy_recipients = @CC_EMAIL
										
										--EXEC MANUAL_INACTIVE_USER_HISTORY 
										--@History_Id=@EMP_ID,
										--@Cmp_ID=@CUR_CMPID
										--,@Login_Id=0
										--,@Reason=N'Absconding'
										--,@Is_Active=0
										--,@User_ID=0 

										--EXEC MANUAL_INACTIVE_USER_HISTORY_MOBILE 
										--@Emp_ID=@EMP_ID 
										--,@Cmp_ID=@CUR_CMPID
										--,@IsActive=0
										--,@Login_ID=0 

									END
							END
							
							SET @BODY = ''		
							SET @EMPL_EMAIL_ID = ''
					
						FETCH NEXT FROM CUR_EMPLOYEE INTO @EMP_ID , @CUR_CMPID, @COMPANY_NAME , @EMP_CODE , @EMPL_NAME , @EMPL_BRANCH ,@LAST_ATTENDED_DATE , @EMPL_EMAIL_ID , @CUR_STAGE
					END
			CLOSE CUR_EMPLOYEE                    
			DEALLOCATE CUR_EMPLOYEE
		END
		
		
		--SENDING THE LIST OF THOSE EMPLOYEES WHOSE EMAIL'S ARE NOT INSERTED IN PAYROLL
--	IF @EMP_CODE_WITH_NO_EMAIL IS NOT NULL
--		BEGIN
--			SELECT @HR_EMAILS = COALESCE(@HR_EMAILS + ';', '') + OTHER_EMAIL
--			FROM T0011_LOGIN L WITH (NOLOCK)
--			LEFT OUTER JOIN T0080_EMP_MASTER E WITH (NOLOCK) ON L.EMP_ID = E.EMP_ID
--			WHERE L.IS_HR = 1 and E.Cmp_ID = ISNULL(@CMP_ID , @TEMP_CMP_ID)
--			ORDER BY E.Cmp_ID
			
		
--			 SET @Body = '	<html>
--							<head> </head>
--							<body>
--								<p>
--									Hello Sir ,
--								<p>
--								<p>
--									It has been observed from our records that , Personal Email ID of these Employees are Not Inserted in Payroll.
--								<p>
--									Employee Codes of those Employees are :-
--								<br/>
--								<br/>
--									<b>'+ @EMP_CODE_WITH_NO_EMAIL +'</b>.
--								<br/>
--								<p>
--									No Reminders are Sent to these Employee , and Also they will not be Marked as Left Employee. 
--								<br/>
--								<br/>
--									Kindly Enter their Email ID.
--								<p>
--							</body>
--							</html>'

--					--EXEC msdb.dbo.sp_send_dbmail @profile_name = @PROFILE, @recipients = @HR_EMAILS, @subject = 'Personal Emails Missing', @body = @Body, @body_format = 'HTML', @copy_recipients = @CC_EMAIL
--					EXEC msdb.dbo.sp_send_dbmail @profile_name = 'DB_Mail_83', @recipients = 'sajid@orangewebtech.com', @subject = 'Personal Emails Missing', @body = @Body, @body_format = 'HTML', @copy_recipients = @CC_EMAIL
--		END
END

