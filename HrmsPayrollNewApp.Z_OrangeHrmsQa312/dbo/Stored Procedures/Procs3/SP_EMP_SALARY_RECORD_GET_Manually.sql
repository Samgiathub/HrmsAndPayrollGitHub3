
---13/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[SP_EMP_SALARY_RECORD_GET_Manually]
	 @Cmp_ID		NUMERIC
	,@From_Date		DATETIME
	,@To_Date		DATETIME 
	,@Branch_ID		NUMERIC   = 0
	,@Cat_ID		Varchar(1000) = '' -- Add By nilesh patle 03-11-2014 for multiple selection
	,@Grd_ID		Varchar(1000) = '' -- Add By nilesh patle 28-08-2014 for multiple selection 
	,@Type_ID		NUMERIC  = 0
	,@Dept_ID		Varchar(1000) = '' -- Add By nilesh patle 28-08-2014 for multiple selection 
    ,@Desig_ID		Varchar(1000) = '' -- Add By nilesh patle 28-08-2014 for multiple selection 
	,@Emp_ID		NUMERIC  = 0
	,@Constraint	VARCHAR(MAX) = ''
	,@Salary_Status	VARCHAR(20)='All'
	,@Salary_Cycle_id  NUMERIC  = 0
	,@Branch_Constraint VARCHAR(5000) = '' -- Added By Gadriwala Muslim on july 16 2013
	,@Segment_ID Varchar(1000) = '' -- Add By nilesh patle 03-11-2014 for multiple selection
	,@Vertical Varchar(1000) = '' -- Add By nilesh patle 03-11-2014 for multiple selection
	,@SubVertical Varchar(1000) = '' -- Add By nilesh patle 03-11-2014 for multiple selection
	,@subBranch Varchar(1000) = '' -- Add By nilesh patle 03-11-2014 for multiple selection
	,@filterType Numeric(2,0) = 0
AS
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON
	
	DECLARE @DATE_DIFF NUMERIC
	SET @DATE_DIFF = DATEDIFF(D,@FROM_DATE,@TO_DATE) + 1
	
	-- Added by rohit Fin Start Date on 27082014
	DECLARE @FIN_START_DATE AS DATETIME
	IF MONTH(@TO_DATE) > 3
		BEGIN
			SET @FIN_START_DATE = '01-APR-'  + CONVERT(NVARCHAR,YEAR(@TO_DATE)) 
		END
	ELSE
		BEGIN
			SET @FIN_START_DATE = '01-APR-' + CONVERT(NVARCHAR,(YEAR(@TO_DATE) - 1))
		END
	
	
	
	 IF @Salary_Cycle_id = 0
		SET @Salary_Cycle_id = NULL
	
	IF @Branch_ID = 0
		SET @Branch_ID = NULL
		
	IF @Cat_ID = ''
		SET @Cat_ID = NULL
		 
	IF @Type_ID = 0
		SET @Type_ID = NULL
		
	IF @Dept_ID = ''
		SET @Dept_ID = NULL
		
	IF @Grd_ID = ''
		SET @Grd_ID = NULL
		
	IF @Emp_ID = 0
		SET @Emp_ID = NULL
		
	IF @Desig_ID = ''
		SET @Desig_ID = NULL
		
	IF @Segment_ID = '' 
		SET @Segment_ID = NULL
		
	IF @Vertical = '' 
		SET @Vertical = NULL
		
	IF @SubVertical = '' 
		SET @SubVertical  = NULL
	
	IF @subBranch = ''
		SET @subBranch = NULL 
	
	
	
	DECLARE @SHOW_LEFT_EMPLOYEE_FOR_SALARY AS TINYINT
	SET @SHOW_LEFT_EMPLOYEE_FOR_SALARY = 0
  
	SELECT @SHOW_LEFT_EMPLOYEE_FOR_SALARY = ISNULL(SETTING_VALUE,0) 
		FROM T0040_SETTING WITH (NOLOCK)
	WHERE CMP_ID = @CMP_ID AND SETTING_NAME LIKE 'SHOW LEFT EMPLOYEE FOR SALARY'

	DECLARE @SALARY_CYCLE_EMPLOYEE_WISE AS TINYINT
	SET @SALARY_CYCLE_EMPLOYEE_WISE = 0
  
	SELECT @SALARY_CYCLE_EMPLOYEE_WISE = ISNULL(SETTING_VALUE,0) 
		  FROM T0040_SETTING WITH (NOLOCK)
	WHERE CMP_ID = @CMP_ID AND SETTING_NAME LIKE 'SALARY CYCLE EMPLOYEE WISE'
	
	DECLARE @EMP_PT_SETTING AS TINYINT
	SET @EMP_PT_SETTING = 0
	
	SELECT @EMP_PT_SETTING = ISNULL(SETTING_VALUE,0) 
		FROM T0040_SETTING WITH (NOLOCK)
	WHERE CMP_ID = @CMP_ID AND SETTING_NAME LIKE 'SHOW LIST OF EMPLOYEES WHOSE PT SETTINGS ARE PENDING DURING SALARY PROCESS'
		
	DECLARE @PENDING_LEAVE_SETTING AS TINYINT
	SET @PENDING_LEAVE_SETTING = 0
	
	SELECT @PENDING_LEAVE_SETTING = ISNULL(SETTING_VALUE,0) 
		FROM T0040_SETTING WITH (NOLOCK) WHERE CMP_ID = @CMP_ID AND SETTING_NAME LIKE 'LEAVE NOT APPROVAL POPUP IN SALARY'
		
	IF OBJECT_ID('TEMPDB..#EMP_CONS') IS NOT NULL
		BEGIN
			DROP TABLE #EMP_DOC
		END
	
	CREATE TABLE #EMP_CONS 
	(      
		EMP_ID NUMERIC ,     
		BRANCH_ID NUMERIC,
		INCREMENT_ID NUMERIC    
	) 
	
	-- Create New Sp by nilesh patel on 28-Aug-2014
	EXEC SP_EMP_SALARY_CONSTRAINT @CMP_ID, @FROM_DATE,@TO_DATE,@BRANCH_ID,@CAT_ID,@GRD_ID,@TYPE_ID,@DEPT_ID	,@DESIG_ID,@EMP_ID,@SALARY_CYCLE_ID ,@BRANCH_CONSTRAINT,@SEGMENT_ID,@VERTICAL,@SUBVERTICAL,@SUBBRANCH,@CONSTRAINT
	
  --Added by nilesh patel on 18042017 
    IF OBJECT_ID('TEMPDB..#EMP_DOC') IS NOT NULL
		BEGIN
			DROP TABLE #EMP_DOC
		END
  
	SELECT	DISTINCT T.EMP_ID INTO #EMP_DOC
	FROM	(
				SELECT	E.EMP_ID, DOC_ID 
				FROM	T0080_EMP_MASTER E WITH (NOLOCK) INNER JOIN #EMP_CONS EC ON EC.EMP_ID = E.EMP_ID
						CROSS JOIN (SELECT DOC_ID FROM T0040_DOCUMENT_MASTER DM WITH (NOLOCK) WHERE DM.CMP_ID= @CMP_ID AND DOC_REQUIRED = 1) DM
				WHERE	E.CMP_ID = @CMP_ID
			)T 
	WHERE	NOT EXISTS(SELECT 1 FROM T0090_EMP_DOC_DETAIL EDM WITH (NOLOCK) WHERE T.EMP_ID=EDM.EMP_ID AND T.DOC_ID=EDM.DOC_ID AND EDM.CMP_ID = @CMP_ID )
  --Added by nillesh patel on 18042017
  
  --Added by nilesh patel on 20042017 
  IF OBJECT_ID('TEMPDB..#EMP_SALARY_ON_HOLD') IS NOT NULL
		BEGIN
			DROP TABLE #EMP_SALARY_ON_HOLD
		END
		
	  SELECT EC.EMP_ID INTO #EMP_SALARY_ON_HOLD
		FROM #EMP_CONS EC INNER JOIN T0090_CHANGE_REQUEST_APPROVAL CRA WITH (NOLOCK)
		ON EC.EMP_ID = CRA.EMP_ID
	  WHERE CRA.LOAN_MONTH = MONTH(@FROM_DATE) AND CRA.LOAN_YEAR = YEAR(@FROM_DATE) 
	  AND CRA.REQUEST_TYPE_ID = 19 AND CRA.REQUEST_STATUS = 'A'
	  
  --Added by nilesh patel on 20042017 
		
	IF OBJECT_ID('TEMPDB..##ATT_MUSTER1') IS NOT NULL 
		BEGIN
			DROP TABLE ##ATT_MUSTER1
		END
		
	CREATE TABLE ##ATT_MUSTER1
	(
		EMP_ID NUMERIC , 
		CMP_ID NUMERIC,
		LEAVE_COUNT NUMERIC(5,2) DEFAULT 0,
		WO NUMERIC(5,2) DEFAULT 0,
		HO NUMERIC(5,2) DEFAULT 0,
		TOTAL_CYCLE_DAYS NUMERIC(18,2),
		TOTAL_PRESENT NUMERIC(18,2)			
	)
	
	IF OBJECT_ID('TEMPDB..#SALARY_TEMP') IS NOT NULL 
		BEGIN
			DROP TABLE #SALARY_TEMP
		END
	
	CREATE TABLE #SALARY_TEMP
	(
		SAL_TRAN_ID NUMERIC , 
		EMP_ID NUMERIC,
		PAN_NO VARCHAR(100),
		COMP_NAME VARCHAR(500),
		CMP_NAME VARCHAR(500),
		CMP_ADDRESS VARCHAR(500),
		BRANCH_ADDRESS VARCHAR(500),
		EMP_FULL_NAME VARCHAR(500),
		M_IT_TAX NUMERIC(18,2),
		M_OT_HOURS NUMERIC(18,2),
		OTHER_DEDU_AMOUNT NUMERIC(18,2),
		M_LOAN_AMOUNT NUMERIC(18,2),
		M_ADV_AMOUNT NUMERIC(18,2),
		OTHER_ALLOW_AMOUNT NUMERIC(18,2),
		MONTH_DAYS NUMERIC(18,2),
		PRESENT_DAYS NUMERIC(18,2),
		STATUS VARCHAR(100),
		P_DAYS NUMERIC(18,2),
		BRANCH_ID  NUMERIC(18,0),
		VERTICAL_ID  NUMERIC(18,0),
		SUBVERTICAL_ID  NUMERIC(18,0),
		DEPT_ID NUMERIC(18,0), 
		COLOR_FLAG NUMERIC(1,0),
		EMP_FIX_SALARY TINYINT,   --ADDED BY JAINA 07-09-2016
		EMP_LEFT	VARCHAR(1) DEFAULT '', --ANKIT 27062016
		PREV_MONTH_SALARY NUMERIC(18,0),
		Emp_Exit Tinyint --Added by Mukti(19122019)
	)
	
	
	--DELETE EC 
	--FROM #EMP_CONS EC LEFT OUTER JOIN 
	--	 T0200_MONTHLY_SALARY M ON EC.EMP_ID = M.EMP_ID AND 
	--	 MONTH(M.MONTH_END_DATE)=MONTH(@TO_DATE) AND YEAR(M.MONTH_END_DATE)=YEAR(@TO_DATE)
	--WHERE M.SAL_TRAN_ID IS NOT NULL


	IF @CONSTRAINT = ''
		BEGIN	 
			SET @CONSTRAINT= (SELECT CAST(EMP_ID AS VARCHAR(100)) + '#' 
								FROM #EMP_CONS E
								WHERE	NOT EXISTS(SELECT 1 FROM T0200_MONTHLY_SALARY M WITH (NOLOCK) WHERE  MONTH(M.MONTH_END_DATE)=MONTH(@TO_DATE) AND YEAR(M.MONTH_END_DATE)=YEAR(@TO_DATE) AND E.EMP_ID=M.EMP_ID)
								FOR XML PATH(''))
			
			SET @CONSTRAINT =  LEFT(@CONSTRAINT,LEN(@CONSTRAINT)-1)								
		END

	------End By Hardik 08/06/2015

	-- Color Flag Description
	/*
		1 For  No PAN Card / Document  
		2 For Previouse month Salary on hold 	
		3 For Both No PAN Card & Previous month salary on hold
	*/

	---Added by Jaina 16-01-2019 Start
	Declare @Previous_Salary_Hold int
	Declare @No_Pan_Card int	
	Declare @ColorFlag int
	
	select @Previous_Salary_Hold = Setting_Value 
	from T0040_SETTING WITH (NOLOCK)
	where Cmp_ID=@Cmp_id and Setting_Name='Salary Records Highlight if Previous Salary on Hold'
		
	select @No_Pan_Card = Setting_Value 
	from T0040_SETTING WITH (NOLOCK)
	where Cmp_ID=@Cmp_id and Setting_Name='Salary Records Highlight if no PAN Card Number'
	
	
	---Added by Jaina 16-01-2019 End	
	IF (@CONSTRAINT <> '')
		BEGIN 
			INSERT INTO ##ATT_MUSTER1 
			EXEC SP_RPT_EMP_ATTENDANCE_MANUAL_SALARY_DAYS @CMP_ID, @FROM_DATE, @TO_DATE, @BRANCH_ID, @CAT_ID, @GRD_ID, @TYPE_ID, @DEPT_ID, @DESIG_ID, @EMP_ID, @CONSTRAINT,'','',@BRANCH_CONSTRAINT,0,'','','',''
		END
		--EXEC SP_RPT_EMP_ATTENDANCE_MANUAL_SALARY_DAYS @Cmp_ID, @From_Date, @To_Date, @Branch_ID, @Cat_ID, @Grd_ID, @Type_ID, @Dept_ID, @Desig_ID, @Emp_ID, @Constraint	-- added by mitesh for actual days present in manual salary on 16012013


IF @SALARY_STATUS = 'DONE'
	BEGIN
		IF @Show_Left_Employee_for_Salary = 0
			BEGIN
				INSERT INTO #SALARY_TEMP
				SELECT SAL_TRAN_ID, E.EMP_ID, PAN_NO, BM.COMP_NAME, CM.CMP_NAME, CM.CMP_ADDRESS, BM.BRANCH_ADDRESS
						,CAST(E.ALPHA_EMP_CODE AS VARCHAR) + ' - '+E.EMP_FULL_NAME AS EMP_FULL_NAME,M_IT_TAX
						,CASE WHEN M_OT_HOURS > 0 THEN M_OT_HOURS ELSE OVER_TIME END AS M_OT_HOURS
						,OTHER_DEDU_AMOUNT, M_LOAN_AMOUNT, M_ADV_AMOUNT, OTHER_ALLOW_AMOUNT
						,AM1.TOTAL_PRESENT AS MONTH_DAYS, 
						ISNULL(ISNULL(PRESENT_DAYS,P_DAYS), AM1.TOTAL_PRESENT) AS PRESENT_DAYS
						,(CASE WHEN ISNULL(SH.EMP_ID,0) <> 0 THEN 'HOLD' ELSE SG.SALARY_STATUS END) AS STATUS
						,P_DAYS,I_Q.BRANCH_ID,I_Q.VERTICAL_ID,I_Q.SUBVERTICAL_ID,I_Q.DEPT_ID  --ADDED BY GADRIWALA 16102013 E.VERTICAL_ID,E.SUBVERTICAL_ID  ADDED BY JAINA 29-09-2015 DEPT_ID
						--,(CASE WHEN MSP.SALARY_STATUS = 'HOLD' AND PAN_NO = '' THEN 3 WHEN MSP.SALARY_STATUS = 'HOLD' THEN 2  WHEN PAN_NO = '' OR ISNULL(DOC.EMP_ID,0) <> 0 THEN 1 ELSE 0 END) AS COLOR_FLAG
						--Added by Jaina 17-01-2018 (After discuss with Hardikbhai)
					   ,CASE WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 1 THEN
								  CASE WHEN (MSP.Salary_Status = 'HOLD' AND E.Pan_No = '') THEN 3
									   WHEN (MSP.Salary_Status = 'HOLD') then 2
									   WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 
								  ELSE 0 END
							 WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 0 THEN
									CASE WHEN MSP.Salary_Status = 'HOLD' THEN 2 ELSE 0 END
							 WHEN @Previous_Salary_Hold = 0  and @No_Pan_Card = 1 THEN
									CASE WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 ELSE 0 END
							 ELSE 0 END As COLOR_FLAG							
						,I_Q.EMP_FIX_SALARY  --ADDED BY JAINA 07-09-2016
						,E.EMP_LEFT    --ADDED BY JAINA 16-11-2016
						--,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN MSP1.SALARY_STATUS IN('HOLD','DONE') THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
						,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN Isnull(MSP.SALARY_STATUS,'') = '' THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
						,case when EA.exit_id > 0 then 1 else 0 end
					FROM T0080_EMP_MASTER E WITH (NOLOCK)
						LEFT OUTER JOIN ##ATT_MUSTER1 AM1 ON AM1.EMP_ID = E.EMP_ID 
						LEFT OUTER JOIN (
											SELECT I.EMP_ID, GRD_ID, BRANCH_ID, CAT_ID, DESIG_ID, DEPT_ID, 
											TYPE_ID,VERTICAL_ID ,SUBVERTICAL_ID,I.EMP_FIX_SALARY
											FROM T0095_INCREMENT I WITH (NOLOCK)
												INNER JOIN (
																 SELECT MAX(INCREMENT_ID) AS INCREMENT_ID, EMP_ID 
																	FROM T0095_INCREMENT WITH (NOLOCK)
																 WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @CMP_ID
																 GROUP BY EMP_ID 
															) QRY ON I.EMP_ID = QRY.EMP_ID AND I.INCREMENT_ID = QRY.INCREMENT_ID	 
										) I_Q ON E.EMP_ID = I_Q.EMP_ID  
						INNER JOIN #EMP_CONS EC ON E.EMP_ID = EC.EMP_ID	
						INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON I_Q.BRANCH_ID = BM.BRANCH_ID LEFT OUTER JOIN
							(SELECT EMP_ID,SALARY_STATUS 
								 FROM T0200_MONTHLY_SALARY WITH (NOLOCK)
								 WHERE MONTH(MONTH_END_DATE) = Month(DATEADD(M,-1,@TO_DATE)) AND YEAR(MONTH_END_DATE) = YEAR(DATEADD(M,-1,@TO_DATE))
								 )MSP ON E.EMP_ID = MSP.EMP_ID  -- ADDED BY NILESH PATEL ON 04112014 FOR PAN & HOLD INDICATION 
						INNER JOIN T0010_COMPANY_MASTER CM WITH (NOLOCK) ON E.CMP_ID = CM.CMP_ID
						LEFT OUTER JOIN (
											SELECT MS.EMP_ID,PRESENT_DAYS, SAL_TRAN_ID, M_OT_HOURS, M_LOAN_AMOUNT, M_IT_TAX, OTHER_DEDU_AMOUNT
											,OTHER_ALLOW_AMOUNT, IT_M_ED_CESS_AMOUNT, IT_M_SURCHARGE_AMOUNT ,SALARY_STATUS
											FROM T0200_MONTHLY_SALARY MS WITH (NOLOCK)
												INNER JOIN #EMP_CONS EC ON MS.EMP_ID = EC.EMP_ID 
											WHERE CMP_ID = @CMP_ID AND MONTH_END_DATE >=@FROM_DATE AND MONTH_END_DATE <=@TO_DATE
										 )SG ON E.EMP_ID = SG.EMP_ID 
						LEFT OUTER JOIN (
											SELECT MPI.EMP_ID, P_DAYS, OVER_TIME 
											FROM T0190_MONTHLY_PRESENT_IMPORT MPI WITH (NOLOCK)
												INNER JOIN #EMP_CONS EC ON MPI.EMP_ID = EC.EMP_ID 
											WHERE CMP_ID = @CMP_ID AND MPI.MONTH = MONTH(@TO_DATE) AND MPI.YEAR = YEAR(@TO_DATE)
											--AND P_DAYS>=0 --COMMENTED BY HARDIK 04/01/2016 AS BACKDATED LEAVE CASE SHOWING 0 PRESENT DAYS
											AND ((BACKDATED_LEAVE_DAYS <> 0 AND P_DAYS>0) OR (ISNULL(BACKDATED_LEAVE_DAYS,0) = 0 AND P_DAYS>=0)) --ADDED BY HARDIK 04/01/2016 AS BACKDATED LEAVE CASE SHOWING 0 PRESENT DAYS
										 )Q_MPI	ON E.EMP_ID =Q_MPI.EMP_ID 
					   LEFT OUTER JOIN (   
					                        SELECT ADV_CLOSING AS M_ADV_AMOUNT,ADVT.EMP_ID  FROM T0140_ADVANCE_TRANSACTION ADVT WITH (NOLOCK) INNER JOIN 
											 ( 
												SELECT MAX(FOR_DATE) AS FOR_DATE , EMP_ID 
												FROM T0140_ADVANCE_TRANSACTION WITH (NOLOCK)
												WHERE FOR_DATE <= @TO_DATE AND CMP_ID = @CMP_ID 
												GROUP BY EMP_ID  
											  ) QRY 
											  ON ADVT.EMP_ID = QRY.EMP_ID AND ADVT.FOR_DATE = QRY.FOR_DATE	
										) I_Q1 ON E.EMP_ID = I_Q1.EMP_ID 	
						INNER JOIN T0011_LOGIN LO WITH (NOLOCK) ON LO.EMP_ID = E.EMP_ID
						LEFT OUTER JOIN (
											  SELECT EMP_ID FROM #EMP_DOC
										) AS DOC ON DOC.EMP_ID = E.EMP_ID
						LEFT OUTER JOIN (
										   SELECT EMP_ID 
										   FROM #EMP_SALARY_ON_HOLD
										) AS SH ON SH.EMP_ID = E.EMP_ID
						LEFT OUTER JOIN T0200_Emp_ExitApplication EA WITH (NOLOCK) ON EA.emp_id=E.Emp_ID and EA.[status]<>'R'--Mukti(19122019)
						--LEFT OUTER JOIN (
						--					SELECT EMP_ID,SALARY_STATUS 
						--					FROM T0200_MONTHLY_SALARY 
						--					WHERE MONTH_END_DATE BETWEEN DATEADD(M,-1,@FROM_DATE) AND DATEADD(M,-1,@TO_DATE) 
						--				) MSP1 ON E.EMP_ID = MSP1.EMP_ID									
					WHERE E.CMP_ID = @CMP_ID AND LO.IS_ACTIVE =1
						AND ((@FROM_DATE < E.EMP_LEFT_DATE AND @TO_DATE < E.EMP_LEFT_DATE) OR E.EMP_LEFT_DATE IS NULL)
						AND E.EMP_ID IN (SELECT EMP_ID FROM #EMP_CONS) 
						AND SAL_TRAN_ID IS NOT NULL			
					ORDER BY  EMP_CODE ASC
			END
		ELSE
			BEGIN
				INSERT INTO #SALARY_TEMP
				SELECT SAL_TRAN_ID, E.EMP_ID, PAN_NO, BM.COMP_NAME, CM.CMP_NAME, CM.CMP_ADDRESS, BM.BRANCH_ADDRESS
						,CAST(E.ALPHA_EMP_CODE AS VARCHAR) + ' - '+E.EMP_FULL_NAME AS EMP_FULL_NAME,M_IT_TAX
						,CASE WHEN M_OT_HOURS > 0 THEN M_OT_HOURS ELSE OVER_TIME END AS M_OT_HOURS
						,OTHER_DEDU_AMOUNT, M_LOAN_AMOUNT, M_ADV_AMOUNT, OTHER_ALLOW_AMOUNT
						,AM1.TOTAL_PRESENT AS MONTH_DAYS
						,ISNULL(ISNULL(PRESENT_DAYS,P_DAYS), AM1.TOTAL_PRESENT)PRESENT_DAYS
						,SG.SALARY_STATUS AS STATUS
						,P_DAYS,I_Q.BRANCH_ID,I_Q.VERTICAL_ID,I_Q.SUBVERTICAL_ID,I_Q.DEPT_ID  --ADDED BY GADRIWALA 16102013 E.VERTICAL_ID,E.SUBVERTICAL_ID --ADDED BY JAINA 29-09-2015 DEPT_ID
							--,(CASE WHEN MSP.SALARY_STATUS = 'HOLD' AND PAN_NO = '' THEN 3 WHEN MSP.SALARY_STATUS = 'HOLD' THEN 2  WHEN PAN_NO = '' OR ISNULL(DOC.EMP_ID,0) <> 0 THEN 1 ELSE 0 END) AS COLOR_FLAG
						--Added by Jaina 17-01-2018 (After discuss with Hardikbhai)
					   ,CASE WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 1 THEN
								  CASE WHEN (MSP.Salary_Status = 'HOLD' AND E.Pan_No = '') THEN 3
									   WHEN (MSP.Salary_Status = 'HOLD') then 2
									   WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 
								  ELSE 0 END
							 WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 0 THEN
									CASE WHEN MSP.Salary_Status = 'HOLD' THEN 2 ELSE 0 END
							 WHEN @Previous_Salary_Hold = 0  and @No_Pan_Card = 1 THEN
									CASE WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 ELSE 0 END
							 ELSE 0 END As COLOR_FLAG	
						,I_Q.EMP_FIX_SALARY   --ADDED BY JAINA 07-09-2016
						,E.EMP_LEFT    --ADDED BY JAINA 16-11-2016
						--,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN MSP1.SALARY_STATUS IN('HOLD','DONE') THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
						,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN Isnull(MSP.SALARY_STATUS,'') = '' THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
						,case when EA.exit_id > 0 then 1 else 0 end
					FROM T0080_EMP_MASTER E WITH (NOLOCK)
						LEFT OUTER JOIN ##ATT_MUSTER1 AM1 ON AM1.EMP_ID = E.EMP_ID 
						LEFT OUTER JOIN (
											SELECT I.EMP_ID, GRD_ID, BRANCH_ID, CAT_ID, DESIG_ID, DEPT_ID, TYPE_ID,VERTICAL_ID ,
											SUBVERTICAL_ID,I.EMP_FIX_SALARY
											FROM T0095_INCREMENT I WITH (NOLOCK)
												INNER JOIN (
																SELECT MAX(INCREMENT_ID) AS INCREMENT_ID, EMP_ID 
																FROM T0095_INCREMENT WITH (NOLOCK)
																WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @CMP_ID
																GROUP BY EMP_ID 
															) QRY ON I.EMP_ID = QRY.EMP_ID AND I.INCREMENT_ID = QRY.INCREMENT_ID	 
										) I_Q ON E.EMP_ID = I_Q.EMP_ID  
						INNER JOIN #EMP_CONS EC ON E.EMP_ID = EC.EMP_ID
						INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON I_Q.BRANCH_ID = BM.BRANCH_ID 
						LEFT OUTER JOIN(
										 SELECT EMP_ID,SALARY_STATUS 
										 FROM T0200_MONTHLY_SALARY WITH (NOLOCK)
										 WHERE MONTH(MONTH_END_DATE) = Month(DATEADD(M,-1,@TO_DATE)) AND YEAR(MONTH_END_DATE) = YEAR(DATEADD(M,-1,@TO_DATE))
										)MSP ON E.EMP_ID = MSP.EMP_ID  -- ADDED BY NILESH PATEL ON 04112014 FOR PAN & HOLD INDICATION
						INNER JOIN T0010_COMPANY_MASTER CM WITH (NOLOCK) ON E.CMP_ID = CM.CMP_ID
						LEFT OUTER JOIN (
											SELECT MS.EMP_ID,PRESENT_DAYS, SAL_TRAN_ID, M_OT_HOURS, M_LOAN_AMOUNT, M_IT_TAX, OTHER_DEDU_AMOUNT
												,OTHER_ALLOW_AMOUNT, IT_M_ED_CESS_AMOUNT, IT_M_SURCHARGE_AMOUNT ,SALARY_STATUS
											FROM T0200_MONTHLY_SALARY MS WITH (NOLOCK)
												INNER JOIN #EMP_CONS EC ON MS.EMP_ID = EC.EMP_ID 
											WHERE CMP_ID = @CMP_ID AND MONTH_END_DATE >=@FROM_DATE AND MONTH_END_DATE <=@TO_DATE
										 )SG ON E.EMP_ID = SG.EMP_ID 
						LEFT OUTER JOIN (
											SELECT MPI.EMP_ID, P_DAYS, OVER_TIME 
											FROM T0190_MONTHLY_PRESENT_IMPORT MPI WITH (NOLOCK)
												INNER JOIN #EMP_CONS EC ON MPI.EMP_ID = EC.EMP_ID 
											WHERE CMP_ID = @CMP_ID AND MPI.MONTH = MONTH(@TO_DATE) AND MPI.YEAR = YEAR(@TO_DATE)
											--AND P_DAYS>=0 --COMMENTED BY HARDIK 04/01/2016 AS BACKDATED LEAVE CASE SHOWING 0 PRESENT DAYS
											AND ((BACKDATED_LEAVE_DAYS <> 0 AND P_DAYS>0) OR (ISNULL(BACKDATED_LEAVE_DAYS,0) = 0 AND P_DAYS>=0)) --ADDED BY HARDIK 04/01/2016 AS BACKDATED LEAVE CASE SHOWING 0 PRESENT DAYS
										 )Q_MPI	ON E.EMP_ID =Q_MPI.EMP_ID --AND FOR_DATE >=@FROM_DATE AND FOR_DATE <=@TO_DATE
						LEFT OUTER JOIN (
											SELECT ADV_CLOSING AS M_ADV_AMOUNT,ADVT.EMP_ID  FROM T0140_ADVANCE_TRANSACTION ADVT WITH (NOLOCK) INNER JOIN 
											( 
												SELECT MAX(FOR_DATE) AS FOR_DATE , EMP_ID 
												FROM T0140_ADVANCE_TRANSACTION WITH (NOLOCK)
												WHERE FOR_DATE <= @TO_DATE AND CMP_ID = @CMP_ID 
												GROUP BY EMP_ID  
											) QRY ON ADVT.EMP_ID = QRY.EMP_ID AND ADVT.FOR_DATE = QRY.FOR_DATE	
										) I_Q1 ON E.EMP_ID = I_Q1.EMP_ID 	
						INNER JOIN T0011_LOGIN LO WITH (NOLOCK) ON LO.EMP_ID = E.EMP_ID
						LEFT OUTER JOIN 
						(
							SELECT EMP_ID 
							FROM #EMP_DOC
						) AS DOC ON DOC.EMP_ID = E.EMP_ID
						LEFT OUTER JOIN T0200_Emp_ExitApplication EA WITH (NOLOCK) ON EA.emp_id=E.Emp_ID and EA.[status]<>'R'  --Mukti(19122019)	
						--LEFT OUTER JOIN(
						--					SELECT EMP_ID,SALARY_STATUS 
						--					FROM T0200_MONTHLY_SALARY 
						--					WHERE MONTH_END_DATE BETWEEN DATEADD(M,-1,@FROM_DATE) AND DATEADD(M,-1,@TO_DATE) 
						--				) MSP1 ON E.EMP_ID = MSP1.EMP_ID
					WHERE E.CMP_ID = @CMP_ID AND LO.IS_ACTIVE =1
						AND E.EMP_ID IN (SELECT EMP_ID FROM #EMP_CONS) 
						AND SAL_TRAN_ID IS NOT NULL			
					ORDER BY  EMP_CODE ASC
			END
	END
ELSE IF @SALARY_STATUS = 'PENDING'
	BEGIN
		IF @SHOW_LEFT_EMPLOYEE_FOR_SALARY = 0
			BEGIN
				INSERT INTO #SALARY_TEMP
				SELECT SAL_TRAN_ID,E.EMP_ID,PAN_NO,BM.COMP_NAME,CM.CMP_NAME,CM.CMP_ADDRESS,BM.BRANCH_ADDRESS
						,CAST( E.ALPHA_EMP_CODE AS VARCHAR) + ' - '+E.EMP_FULL_NAME AS EMP_FULL_NAME,M_IT_TAX
						,CASE WHEN M_OT_HOURS > 0 THEN M_OT_HOURS ELSE OVER_TIME END AS M_OT_HOURS
						,OTHER_DEDU_AMOUNT,M_LOAN_AMOUNT,M_ADV_AMOUNT,OTHER_ALLOW_AMOUNT
						,AM1.TOTAL_PRESENT as  	MONTH_DAYS	
						,ISNULL(ISNULL(PRESENT_DAYS,P_DAYS),AM1.TOTAL_PRESENT) as PRESENT_DAYS 
						,SG.SALARY_STATUS AS STATUS
						,P_DAYS,I_Q.BRANCH_ID,I_Q.VERTICAL_ID,I_Q.SUBVERTICAL_ID,I_Q.DEPT_ID   --ADDED BY GADRIWALA 16102013 E.VERTICAL_ID,E.SUBVERTICAL_ID --ADDED BY JAINA 29-09-2015 DEPT_ID
							--,(CASE WHEN MSP.SALARY_STATUS = 'HOLD' AND PAN_NO = '' THEN 3 WHEN MSP.SALARY_STATUS = 'HOLD' THEN 2  WHEN PAN_NO = '' OR ISNULL(DOC.EMP_ID,0) <> 0 THEN 1 ELSE 0 END) AS COLOR_FLAG
						--Added by Jaina 17-01-2018 (After discuss with Hardikbhai)
					   ,CASE WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 1 THEN
								  CASE WHEN (MSP.Salary_Status = 'HOLD' AND E.Pan_No = '') THEN 3
									   WHEN (MSP.Salary_Status = 'HOLD') then 2
									   WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 
								  ELSE 0 END
							 WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 0 THEN
									CASE WHEN MSP.Salary_Status = 'HOLD' THEN 2 ELSE 0 END
							 WHEN @Previous_Salary_Hold = 0  and @No_Pan_Card = 1 THEN
									CASE WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 ELSE 0 END
							 ELSE 0 END As COLOR_FLAG	
						,I_Q.EMP_FIX_SALARY  --ADDED BY JAINA 07-09-2016
						,E.EMP_LEFT    --ADDED BY JAINA 16-11-2016
						--,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN MSP1.SALARY_STATUS IN('HOLD','DONE') THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
						,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN Isnull(MSP.SALARY_STATUS,'') = '' THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
						,case when EA.exit_id > 0 then 1 else 0 end
				FROM T0080_EMP_MASTER E WITH (NOLOCK)
					LEFT OUTER JOIN ##ATT_MUSTER1 AM1 ON AM1.EMP_ID = E.EMP_ID 
					LEFT OUTER JOIN ( 
										SELECT I.EMP_ID , GRD_ID,BRANCH_ID,CAT_ID,DESIG_ID,DEPT_ID,TYPE_ID,VERTICAL_ID,SUBVERTICAL_ID,
											   I.EMP_FIX_SALARY  
										FROM T0095_INCREMENT I WITH (NOLOCK) INNER JOIN 
															( 
																SELECT MAX(INCREMENT_ID) AS INCREMENT_ID , EMP_ID 
																		FROM T0095_INCREMENT WITH (NOLOCK)
																WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @CMP_ID
																GROUP BY EMP_ID  
															) QRY ON I.EMP_ID = QRY.EMP_ID AND I.INCREMENT_ID = QRY.INCREMENT_ID	 
									) I_Q ON E.EMP_ID = I_Q.EMP_ID  
					INNER JOIN #EMP_CONS EC ON E.EMP_ID = EC.EMP_ID 
					INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON I_Q.BRANCH_ID = BM.BRANCH_ID  
					LEFT OUTER JOIN(	
										SELECT EMP_ID,SALARY_STATUS 
										FROM T0200_MONTHLY_SALARY WITH (NOLOCK)
										WHERE MONTH(MONTH_END_DATE) = Month(DATEADD(M,-1,@TO_DATE)) AND YEAR(MONTH_END_DATE) = YEAR(DATEADD(M,-1,@TO_DATE))
									)MSP ON E.EMP_ID = MSP.EMP_ID  -- ADDED BY NILESH PATEL ON 04112014 FOR PAN & HOLD INDICATION 
					INNER JOIN T0010_COMPANY_MASTER CM WITH (NOLOCK) ON E.CMP_ID = CM.CMP_ID 
					LEFT OUTER JOIN ( 
										SELECT MS.EMP_ID,PRESENT_DAYS ,SAL_TRAN_ID,M_OT_HOURS,M_LOAN_AMOUNT,M_IT_TAX,
										OTHER_DEDU_AMOUNT,OTHER_ALLOW_AMOUNT,IT_M_ED_CESS_AMOUNT,IT_M_SURCHARGE_AMOUNT,SALARY_STATUS
										FROM 	T0200_MONTHLY_SALARY MS WITH (NOLOCK) 
										INNER JOIN #EMP_CONS EC ON MS.EMP_ID = EC.EMP_ID 
										WHERE CMP_ID = @CMP_ID AND MONTH_END_DATE >=@FROM_DATE AND MONTH_END_DATE <=@TO_DATE 
									)SG ON E.EMP_ID  =SG.EMP_ID 
					LEFT OUTER JOIN(
										SELECT MPI.EMP_ID,P_DAYS,OVER_TIME 
										FROM 	T0190_MONTHLY_PRESENT_IMPORT MPI WITH (NOLOCK)
										INNER JOIN #EMP_CONS EC ON MPI.EMP_ID = EC.EMP_ID 
										WHERE CMP_ID = @CMP_ID  AND MPI.MONTH = MONTH(@TO_DATE) AND MPI.YEAR = YEAR(@TO_DATE) 
										AND ((BACKDATED_LEAVE_DAYS <> 0 AND P_DAYS>0) OR (ISNULL(BACKDATED_LEAVE_DAYS,0) = 0 AND P_DAYS>=0)) --ADDED BY HARDIK 04/01/2016 AS BACKDATED LEAVE CASE SHOWING 0 PRESENT DAYS
									)Q_MPI	ON E.EMP_ID =Q_MPI.EMP_ID 
					LEFT OUTER JOIN(
									SELECT ADV_CLOSING AS M_ADV_AMOUNT,ADVT.EMP_ID  FROM T0140_ADVANCE_TRANSACTION ADVT WITH (NOLOCK)
									INNER JOIN( 
												 SELECT MAX(FOR_DATE) AS FOR_DATE , EMP_ID 
													FROM T0140_ADVANCE_TRANSACTION WITH (NOLOCK)
												 WHERE FOR_DATE <= @TO_DATE AND CMP_ID = @CMP_ID 
												 GROUP BY EMP_ID  
												) QRY ON ADVT.EMP_ID = QRY.EMP_ID AND ADVT.FOR_DATE = QRY.FOR_DATE	
											  ) I_Q1 ON E.EMP_ID = I_Q1.EMP_ID 	
				    INNER JOIN T0011_LOGIN LO WITH (NOLOCK) ON LO.EMP_ID = E.EMP_ID
					LEFT OUTER JOIN (
											SELECT EMP_ID FROM #EMP_DOC
									) AS DOC ON DOC.EMP_ID = E.EMP_ID
					LEFT OUTER JOIN T0200_Emp_ExitApplication EA WITH (NOLOCK) ON EA.emp_id=E.Emp_ID and EA.[status]<>'R'  --Mukti(19122019)
					--LEFT OUTER JOIN (
					--					SELECT EMP_ID,SALARY_STATUS 
					--						FROM T0200_MONTHLY_SALARY 
					--					WHERE MONTH_END_DATE BETWEEN DATEADD(M,-1,@FROM_DATE) AND DATEADD(M,-1,@TO_DATE) 
					--				) MSP1 ON E.EMP_ID = MSP1.EMP_ID
					WHERE E.CMP_ID = @CMP_ID AND LO.IS_ACTIVE =1
						AND ((@FROM_DATE < E.EMP_LEFT_DATE AND @TO_DATE < E.EMP_LEFT_DATE) OR E.EMP_LEFT_DATE IS NULL)	
						AND E.EMP_ID IN (SELECT EMP_ID FROM #EMP_CONS) 
						AND SAL_TRAN_ID IS NULL					
					ORDER BY  EMP_CODE ASC
			END
		ELSE
			BEGIN
				INSERT INTO #SALARY_TEMP
				SELECT SAL_TRAN_ID,E.EMP_ID,PAN_NO,BM.COMP_NAME,CM.CMP_NAME,CM.CMP_ADDRESS,BM.BRANCH_ADDRESS
						,CAST( E.ALPHA_EMP_CODE AS VARCHAR) + ' - '+E.EMP_FULL_NAME AS EMP_FULL_NAME,M_IT_TAX
						,CASE WHEN M_OT_HOURS > 0 THEN M_OT_HOURS ELSE OVER_TIME END AS M_OT_HOURS
						,OTHER_DEDU_AMOUNT,M_LOAN_AMOUNT,M_ADV_AMOUNT,OTHER_ALLOW_AMOUNT
						,AM1.TOTAL_PRESENT AS MONTH_DAYS
						,ISNULL(ISNULL(PRESENT_DAYS,P_DAYS),AM1.TOTAL_PRESENT ) AS PRESENT_DAYS 
						,SG.SALARY_STATUS AS STATUS
						,P_DAYS,I_Q.BRANCH_ID,I_Q.VERTICAL_ID,I_Q.SUBVERTICAL_ID,I_Q.DEPT_ID  --ADDED BY GADRIWALA 16102013 E.VERTICAL_ID,E.SUBVERTICAL_ID  ADDED BY JAINA 29-09-2015
						--,(CASE WHEN MSP.SALARY_STATUS = 'HOLD' AND PAN_NO = '' THEN 3 WHEN MSP.SALARY_STATUS = 'HOLD' THEN 2  WHEN PAN_NO = '' OR ISNULL(DOC.EMP_ID,0) <> 0 THEN 1 ELSE 0 END) AS COLOR_FLAG
						--Added by Jaina 17-01-2018 (After discuss with Hardikbhai)
					   ,CASE WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 1 THEN
								  CASE WHEN (MSP.Salary_Status = 'HOLD' AND E.Pan_No = '') THEN 3
									   WHEN (MSP.Salary_Status = 'HOLD') then 2
									   WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 
								  ELSE 0 END
							 WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 0 THEN
									CASE WHEN MSP.Salary_Status = 'HOLD' THEN 2 ELSE 0 END
							 WHEN @Previous_Salary_Hold = 0  and @No_Pan_Card = 1 THEN
									CASE WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 ELSE 0 END
							 ELSE 0 END As COLOR_FLAG	
						,I_Q.EMP_FIX_SALARY  --ADDED BY JAINA 07-09-2016
						,E.EMP_LEFT    --ADDED BY JAINA 16-11-2016
						--,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN MSP1.SALARY_STATUS IN('HOLD','DONE') THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
						,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN Isnull(MSP.SALARY_STATUS,'') = '' THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
						,case when EA.exit_id > 0 then 1 else 0 end
				FROM T0080_EMP_MASTER E WITH (NOLOCK) LEFT OUTER JOIN 
					##ATT_MUSTER1 AM1 ON AM1.EMP_ID = E.EMP_ID 
					LEFT OUTER JOIN ( 
										SELECT I.EMP_ID , GRD_ID,BRANCH_ID,CAT_ID,DESIG_ID,DEPT_ID,TYPE_ID,VERTICAL_ID,SUBVERTICAL_ID,I.EMP_FIX_SALARY 
										FROM T0095_INCREMENT I WITH (NOLOCK) INNER JOIN 
											( 
													SELECT MAX(INCREMENT_ID) AS INCREMENT_ID , EMP_ID 
													FROM T0095_INCREMENT WITH (NOLOCK)
													WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @CMP_ID
													GROUP BY EMP_ID  
											) QRY ON I.EMP_ID = QRY.EMP_ID AND I.INCREMENT_ID = QRY.INCREMENT_ID	 
									) I_Q ON E.EMP_ID = I_Q.EMP_ID  
					INNER JOIN #EMP_CONS EC ON E.EMP_ID = EC.EMP_ID 
					INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON I_Q.BRANCH_ID = BM.BRANCH_ID  
					LEFT OUTER JOIN(
										SELECT EMP_ID,SALARY_STATUS 
										FROM T0200_MONTHLY_SALARY WITH (NOLOCK) 
										WHERE MONTH(MONTH_END_DATE) = Month(DATEADD(M,-1,@TO_DATE)) AND YEAR(MONTH_END_DATE) = YEAR(DATEADD(M,-1,@TO_DATE))
									)MSP ON E.EMP_ID = MSP.EMP_ID  -- ADDED BY NILESH PATEL ON 04112014 FOR PAN & HOLD INDICATION 
					INNER JOIN T0010_COMPANY_MASTER CM WITH (NOLOCK) ON E.CMP_ID = CM.CMP_ID 
					LEFT OUTER JOIN ( 
										SELECT MS.EMP_ID,PRESENT_DAYS ,SAL_TRAN_ID,M_OT_HOURS,M_LOAN_AMOUNT,M_IT_TAX,OTHER_DEDU_AMOUNT,OTHER_ALLOW_AMOUNT,IT_M_ED_CESS_AMOUNT,IT_M_SURCHARGE_AMOUNT ,SALARY_STATUS
										FROM 	T0200_MONTHLY_SALARY MS  WITH (NOLOCK)
										INNER JOIN #EMP_CONS EC ON MS.EMP_ID = EC.EMP_ID 
										WHERE CMP_ID = @CMP_ID AND MONTH_END_DATE >=@FROM_DATE AND MONTH_END_DATE <=@TO_DATE 
									)SG ON E.EMP_ID  =SG.EMP_ID 
					LEFT OUTER JOIN(
										SELECT MPI.EMP_ID,P_DAYS,OVER_TIME 
										FROM T0190_MONTHLY_PRESENT_IMPORT MPI WITH (NOLOCK) 
										INNER JOIN #EMP_CONS EC ON MPI.EMP_ID = EC.EMP_ID 
										WHERE CMP_ID = @CMP_ID  AND MPI.MONTH = MONTH(@TO_DATE) AND MPI.YEAR = YEAR(@TO_DATE) 
										AND ((BACKDATED_LEAVE_DAYS <> 0 AND P_DAYS>0) OR (ISNULL(BACKDATED_LEAVE_DAYS,0) = 0 AND P_DAYS>=0)) --ADDED BY HARDIK 04/01/2016 AS BACKDATED LEAVE CASE SHOWING 0 PRESENT DAYS
									)Q_MPI	ON E.EMP_ID =Q_MPI.EMP_ID 
					LEFT OUTER JOIN 
									(
										SELECT ADV_CLOSING AS M_ADV_AMOUNT,ADVT.EMP_ID  
										FROM T0140_ADVANCE_TRANSACTION ADVT WITH (NOLOCK) INNER JOIN 
											( 
												SELECT MAX(FOR_DATE) AS FOR_DATE,EMP_ID 
												FROM T0140_ADVANCE_TRANSACTION WITH (NOLOCK)
												WHERE FOR_DATE <= @TO_DATE AND CMP_ID = @CMP_ID 
												GROUP BY EMP_ID  
											) QRY ON ADVT.EMP_ID = QRY.EMP_ID AND ADVT.FOR_DATE = QRY.FOR_DATE	
									) I_Q1 ON E.EMP_ID = I_Q1.EMP_ID 	
					INNER JOIN T0011_LOGIN LO WITH (NOLOCK) ON LO.EMP_ID = E.EMP_ID
					LEFT OUTER JOIN 
							(
								SELECT EMP_ID FROM #EMP_DOC
							) AS DOC ON DOC.EMP_ID = E.EMP_ID
					LEFT OUTER JOIN T0200_Emp_ExitApplication EA WITH (NOLOCK) ON EA.emp_id=E.Emp_ID and EA.[status]<>'R'  --Mukti(19122019)
					--LEFT OUTER JOIN (
					--					SELECT EMP_ID,SALARY_STATUS 
					--					FROM T0200_MONTHLY_SALARY 
					--					WHERE MONTH_END_DATE BETWEEN DATEADD(M,-1,@FROM_DATE) AND DATEADD(M,-1,@TO_DATE) 
					--				) MSP1 ON E.EMP_ID = MSP1.EMP_ID
					WHERE E.CMP_ID = @CMP_ID AND LO.IS_ACTIVE =1
						AND E.EMP_ID IN (SELECT EMP_ID FROM #EMP_CONS) 
						AND SAL_TRAN_ID IS NULL					
					ORDER BY  EMP_CODE ASC
			END		
	END
ELSE IF @SALARY_STATUS = 'PENDINGANDIMPORT'  --Added By Gadriwala Muslim 29082013 - Start
	BEGIN
		IF @SHOW_LEFT_EMPLOYEE_FOR_SALARY = 0 
			BEGIN
				INSERT INTO #SALARY_TEMP
				SELECT SAL_TRAN_ID,E.EMP_ID,PAN_NO,BM.COMP_NAME,CM.CMP_NAME,CM.CMP_ADDRESS,BM.BRANCH_ADDRESS
					  ,CAST( E.ALPHA_EMP_CODE AS VARCHAR) + ' - '+E.EMP_FULL_NAME AS EMP_FULL_NAME,M_IT_TAX
					  ,CASE WHEN M_OT_HOURS > 0 THEN M_OT_HOURS ELSE OVER_TIME END AS M_OT_HOURS
					  ,OTHER_DEDU_AMOUNT,M_LOAN_AMOUNT,M_ADV_AMOUNT,OTHER_ALLOW_AMOUNT
					  ,AM1.TOTAL_PRESENT AS MONTH_DAYS 
					  ,ISNULL(ISNULL(PRESENT_DAYS,P_DAYS),AM1.TOTAL_PRESENT ) AS PRESENT_DAYS
					  ,SG.SALARY_STATUS AS STATUS
					  ,P_DAYS,I_Q.BRANCH_ID,I_Q.VERTICAL_ID,I_Q.SUBVERTICAL_ID,I_Q.DEPT_ID  --ADDED BY GADRIWALA 16102013 E.VERTICAL_ID,E.SUBVERTICAL_ID ADDED BY JAINA 29-09-2015 DEPT_ID
					  --,(CASE WHEN MSP.SALARY_STATUS = 'HOLD' AND PAN_NO = '' THEN 3 WHEN MSP.SALARY_STATUS = 'HOLD' THEN 2  WHEN PAN_NO = '' OR ISNULL(DOC.EMP_ID,0) <> 0 THEN 1 ELSE 0 END) AS COLOR_FLAG
					  	--Added by Jaina 17-01-2018 (After discuss with Hardikbhai)
					   ,CASE WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 1 THEN
								  CASE WHEN (MSP.Salary_Status = 'HOLD' AND E.Pan_No = '') THEN 3
									   WHEN (MSP.Salary_Status = 'HOLD') then 2
									   WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 
								  ELSE 0 END
							 WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 0 THEN
									CASE WHEN MSP.Salary_Status = 'HOLD' THEN 2 ELSE 0 END
							 WHEN @Previous_Salary_Hold = 0  and @No_Pan_Card = 1 THEN
									CASE WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 ELSE 0 END
							 ELSE 0 END As COLOR_FLAG	
					  ,I_Q.EMP_FIX_SALARY   --ADDED BY JAINA 07-09-2016
					  ,E.EMP_LEFT    --ADDED BY JAINA 16-11-2016
					  --,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN MSP1.SALARY_STATUS IN('HOLD','DONE') THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
					  ,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN Isnull(MSP.SALARY_STATUS,'') = '' THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
					  ,case when EA.exit_id > 0 then 1 else 0 end
				FROM T0080_EMP_MASTER E WITH (NOLOCK) LEFT OUTER JOIN 
					##ATT_MUSTER1 AM1 ON AM1.EMP_ID = E.EMP_ID 
					LEFT OUTER JOIN( 
										SELECT I.EMP_ID , GRD_ID,BRANCH_ID,CAT_ID,DESIG_ID,DEPT_ID,TYPE_ID,VERTICAL_ID,SUBVERTICAL_ID,I.EMP_FIX_SALARY  
										FROM T0095_INCREMENT I WITH (NOLOCK)
										INNER JOIN ( 
														SELECT MAX(INCREMENT_ID) AS INCREMENT_ID,EMP_ID 
														FROM T0095_INCREMENT WITH (NOLOCK)
														WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @CMP_ID
														GROUP BY EMP_ID  
													) QRY ON I.EMP_ID = QRY.EMP_ID AND I.INCREMENT_ID = QRY.INCREMENT_ID	 
									) I_Q ON E.EMP_ID = I_Q.EMP_ID  
					INNER JOIN #EMP_CONS EC ON E.EMP_ID = EC.EMP_ID 
					INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON I_Q.BRANCH_ID = BM.BRANCH_ID  
					LEFT OUTER JOIN(
										SELECT EMP_ID,SALARY_STATUS 
										FROM T0200_MONTHLY_SALARY  WITH (NOLOCK)
										WHERE MONTH(MONTH_END_DATE) = Month(DATEADD(M,-1,@TO_DATE)) AND YEAR(MONTH_END_DATE) = YEAR(DATEADD(M,-1,@TO_DATE))
									)MSP ON E.EMP_ID = MSP.EMP_ID  -- ADDED BY NILESH PATEL ON 04112014 FOR PAN & HOLD INDICATION 
					INNER JOIN T0010_COMPANY_MASTER CM  WITH (NOLOCK) ON E.CMP_ID = CM.CMP_ID 
					LEFT OUTER JOIN ( 
										SELECT MS.EMP_ID,PRESENT_DAYS ,SAL_TRAN_ID,M_OT_HOURS,M_LOAN_AMOUNT,M_IT_TAX,OTHER_DEDU_AMOUNT,OTHER_ALLOW_AMOUNT,IT_M_ED_CESS_AMOUNT,IT_M_SURCHARGE_AMOUNT ,SALARY_STATUS
										FROM T0200_MONTHLY_SALARY MS  WITH (NOLOCK)
										INNER JOIN #EMP_CONS EC ON MS.EMP_ID = EC.EMP_ID 
										WHERE CMP_ID = @CMP_ID AND MONTH_END_DATE >=@FROM_DATE AND MONTH_END_DATE <=@TO_DATE 
									)SG ON E.EMP_ID  = SG.EMP_ID 
					INNER JOIN		(
										SELECT MPI.EMP_ID,P_DAYS,OVER_TIME 
										FROM T0190_MONTHLY_PRESENT_IMPORT MPI WITH (NOLOCK)  
										INNER JOIN #EMP_CONS EC ON MPI.EMP_ID = EC.EMP_ID
										WHERE CMP_ID = @CMP_ID  AND MPI.MONTH = MONTH(@TO_DATE) AND MPI.YEAR = YEAR(@TO_DATE)
										AND ((BACKDATED_LEAVE_DAYS <> 0 AND P_DAYS>0) OR (ISNULL(BACKDATED_LEAVE_DAYS,0) = 0 AND P_DAYS>=0)) --ADDED BY HARDIK 04/01/2016 AS BACKDATED LEAVE CASE SHOWING 0 PRESENT DAYS
									 )Q_MPI	ON E.EMP_ID =Q_MPI.EMP_ID 
					LEFT OUTER JOIN (
										SELECT ADV_CLOSING AS M_ADV_AMOUNT,ADVT.EMP_ID  
										FROM T0140_ADVANCE_TRANSACTION ADVT WITH (NOLOCK)
										INNER JOIN( 
														SELECT MAX(FOR_DATE) AS FOR_DATE,EMP_ID 
														FROM T0140_ADVANCE_TRANSACTION WITH (NOLOCK)
														WHERE FOR_DATE <= @TO_DATE AND CMP_ID = @CMP_ID 
														GROUP BY EMP_ID  
												   ) QRY ON ADVT.EMP_ID = QRY.EMP_ID AND ADVT.FOR_DATE = QRY.FOR_DATE	
									) I_Q1 ON E.EMP_ID = I_Q1.EMP_ID 	
					INNER JOIN T0011_LOGIN LO WITH (NOLOCK) ON LO.EMP_ID = E.EMP_ID
					LEFT OUTER JOIN T0200_Emp_ExitApplication EA WITH (NOLOCK) ON EA.emp_id=E.Emp_ID and EA.[status]<>'R'  --Mukti(19122019)
					--LEFT OUTER JOIN (
					--					SELECT EMP_ID,SALARY_STATUS 
					--					FROM T0200_MONTHLY_SALARY 
					--					WHERE MONTH_END_DATE BETWEEN DATEADD(M,-1,@FROM_DATE) AND DATEADD(M,-1,@TO_DATE) 
					--				) MSP1 ON E.EMP_ID = MSP1.EMP_ID
					LEFT OUTER JOIN (
										SELECT EMP_ID FROM #EMP_DOC
									) AS DOC ON DOC.EMP_ID = E.EMP_ID
					WHERE E.CMP_ID = @CMP_ID AND LO.IS_ACTIVE =1
						AND ((@FROM_DATE < E.EMP_LEFT_DATE AND @TO_DATE < E.EMP_LEFT_DATE) OR E.EMP_LEFT_DATE IS NULL)	
						AND E.EMP_ID IN (SELECT EMP_ID FROM #EMP_CONS) 
						AND SAL_TRAN_ID IS NULL	
					ORDER BY  EMP_CODE ASC
			END				
		ELSE
			BEGIN
				INSERT INTO #SALARY_TEMP
				SELECT SAL_TRAN_ID,E.EMP_ID,PAN_NO,BM.COMP_NAME,CM.CMP_NAME,CM.CMP_ADDRESS,BM.BRANCH_ADDRESS
					  ,CAST( E.ALPHA_EMP_CODE AS VARCHAR) + ' - '+E.EMP_FULL_NAME AS EMP_FULL_NAME,M_IT_TAX
					  ,CASE WHEN M_OT_HOURS > 0 THEN M_OT_HOURS ELSE OVER_TIME END AS M_OT_HOURS
					  ,OTHER_DEDU_AMOUNT,M_LOAN_AMOUNT,M_ADV_AMOUNT,OTHER_ALLOW_AMOUNT
					  ,AM1.TOTAL_PRESENT  AS MONTH_DAYS, ISNULL(ISNULL(PRESENT_DAYS,P_DAYS),AM1.TOTAL_PRESENT  ) ASPRESENT_DAYS 
					  ,SG.SALARY_STATUS AS STATUS
					  ,P_DAYS,I_Q.BRANCH_ID,I_Q.VERTICAL_ID,I_Q.SUBVERTICAL_ID,I_Q.DEPT_ID   --ADDED BY GADRIWALA 16102013 E.VERTICAL_ID,E.SUBVERTICAL_ID ADDED BY JAINA 29-09-2015 DEPT_ID
					   --,(CASE WHEN MSP.SALARY_STATUS = 'HOLD' AND PAN_NO = '' THEN 3 WHEN MSP.SALARY_STATUS = 'HOLD' THEN 2  WHEN PAN_NO = '' OR ISNULL(DOC.EMP_ID,0) <> 0 THEN 1 ELSE 0 END) AS COLOR_FLAG
					  --Added by Jaina 17-01-2018 (After discuss with Hardikbhai)
					   ,CASE WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 1 THEN
								  CASE WHEN (MSP.Salary_Status = 'HOLD' AND E.Pan_No = '') THEN 3
									   WHEN (MSP.Salary_Status = 'HOLD') then 2
									   WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 
								  ELSE 0 END
							 WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 0 THEN
									CASE WHEN MSP.Salary_Status = 'HOLD' THEN 2 ELSE 0 END
							 WHEN @Previous_Salary_Hold = 0  and @No_Pan_Card = 1 THEN
									CASE WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 ELSE 0 END
							 ELSE 0 END As COLOR_FLAG	
					  ,I_Q.EMP_FIX_SALARY   --ADDED BY JAINA 07-09-2016
					  ,E.EMP_LEFT    --ADDED BY JAINA 16-11-2016
					 -- ,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN MSP1.SALARY_STATUS IN('HOLD','DONE') THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
					  ,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN Isnull(MSP.SALARY_STATUS,'') = '' THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
					  ,case when EA.exit_id > 0 then 1 else 0 end
				FROM T0080_EMP_MASTER E WITH (NOLOCK)
					LEFT OUTER JOIN ##ATT_MUSTER1 AM1 ON AM1.EMP_ID = E.EMP_ID 
					LEFT OUTER JOIN ( 
					
										SELECT I.EMP_ID , GRD_ID,BRANCH_ID,CAT_ID,DESIG_ID,DEPT_ID,TYPE_ID,VERTICAL_ID,SUBVERTICAL_ID,I.EMP_FIX_SALARY 
										FROM T0095_INCREMENT I WITH (NOLOCK)  INNER JOIN 
												( 
														SELECT MAX(INCREMENT_ID) AS INCREMENT_ID , EMP_ID 
														FROM T0095_INCREMENT WITH (NOLOCK)
														WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @CMP_ID
														GROUP BY EMP_ID  
												) QRY ON I.EMP_ID = QRY.EMP_ID AND I.INCREMENT_ID = QRY.INCREMENT_ID	 
									 ) I_Q  ON E.EMP_ID = I_Q.EMP_ID  
					INNER JOIN #EMP_CONS EC ON E.EMP_ID = EC.EMP_ID 
					INNER JOIN T0030_BRANCH_MASTER BM  WITH (NOLOCK) ON I_Q.BRANCH_ID = BM.BRANCH_ID  
					LEFT OUTER JOIN(
										SELECT EMP_ID,SALARY_STATUS 
										FROM T0200_MONTHLY_SALARY WITH (NOLOCK)
										WHERE MONTH(MONTH_END_DATE) = Month(DATEADD(M,-1,@TO_DATE)) AND YEAR(MONTH_END_DATE) = YEAR(DATEADD(M,-1,@TO_DATE))
									)MSP ON E.EMP_ID = MSP.EMP_ID  -- ADDED BY NILESH PATEL ON 04112014 FOR PAN & HOLD INDICATION 
					INNER JOIN T0010_COMPANY_MASTER CM WITH (NOLOCK) ON E.CMP_ID = CM.CMP_ID 
					LEFT OUTER JOIN ( 
										SELECT MS.EMP_ID,PRESENT_DAYS ,SAL_TRAN_ID,M_OT_HOURS,M_LOAN_AMOUNT,M_IT_TAX,OTHER_DEDU_AMOUNT,OTHER_ALLOW_AMOUNT,IT_M_ED_CESS_AMOUNT,IT_M_SURCHARGE_AMOUNT ,SALARY_STATUS
										FROM 	T0200_MONTHLY_SALARY MS WITH (NOLOCK)
										INNER JOIN #EMP_CONS EC ON MS.EMP_ID = EC.EMP_ID 
										WHERE CMP_ID = @CMP_ID AND MONTH_END_DATE >=@FROM_DATE AND MONTH_END_DATE <=@TO_DATE 
									)SG ON E.EMP_ID  = SG.EMP_ID 
					INNER JOIN(
										SELECT MPI.EMP_ID,P_DAYS,OVER_TIME 
										FROM T0190_MONTHLY_PRESENT_IMPORT MPI WITH (NOLOCK) 
										INNER JOIN #EMP_CONS EC ON MPI.EMP_ID = EC.EMP_ID
										WHERE CMP_ID = @CMP_ID  AND MPI.MONTH = MONTH(@TO_DATE) AND MPI.YEAR = YEAR(@TO_DATE) 
											--AND P_DAYS>=0 --COMMENTED BY HARDIK 04/01/2016 AS BACKDATED LEAVE CASE SHOWING 0 PRESENT DAYS
										AND ((BACKDATED_LEAVE_DAYS <> 0 AND P_DAYS>0) OR (ISNULL(BACKDATED_LEAVE_DAYS,0) = 0 AND P_DAYS>=0)) --ADDED BY HARDIK 04/01/2016 AS BACKDATED LEAVE CASE SHOWING 0 PRESENT DAYS
								)Q_MPI	ON E.EMP_ID =Q_MPI.EMP_ID 
					LEFT OUTER JOIN (
										SELECT ADV_CLOSING AS M_ADV_AMOUNT,ADVT.EMP_ID  
										FROM T0140_ADVANCE_TRANSACTION ADVT WITH (NOLOCK)
										INNER JOIN( 
														SELECT MAX(FOR_DATE) AS FOR_DATE , EMP_ID 
														FROM T0140_ADVANCE_TRANSACTION WITH (NOLOCK)
														WHERE FOR_DATE <= @TO_DATE AND CMP_ID = @CMP_ID 
														GROUP BY EMP_ID 
												  ) QRY ON ADVT.EMP_ID = QRY.EMP_ID AND ADVT.FOR_DATE = QRY.FOR_DATE	
									) I_Q1 ON E.EMP_ID = I_Q1.EMP_ID 	
					INNER JOIN T0011_LOGIN LO WITH (NOLOCK) ON LO.EMP_ID = E.EMP_ID
					--LEFT OUTER JOIN (
					--					SELECT EMP_ID,SALARY_STATUS 
					--					FROM T0200_MONTHLY_SALARY 
					--					WHERE MONTH_END_DATE BETWEEN DATEADD(M,-1,@FROM_DATE) AND DATEADD(M,-1,@TO_DATE) 
					--				) MSP1 ON E.EMP_ID = MSP1.EMP_ID
					LEFT OUTER JOIN(
										SELECT EMP_ID FROM #EMP_DOC
									) AS DOC ON DOC.EMP_ID = E.EMP_ID
					LEFT OUTER JOIN T0200_Emp_ExitApplication EA WITH (NOLOCK) ON EA.emp_id=E.Emp_ID and EA.[status]<>'R'  --Mukti(19122019)
				WHERE E.CMP_ID = @CMP_ID AND LO.IS_ACTIVE =1
					AND E.EMP_ID IN (SELECT EMP_ID FROM #EMP_CONS) 
					AND SAL_TRAN_ID IS NULL
				ORDER BY  EMP_CODE ASC
			END						
	END				--Added By Gadriwala Muslim 29082013 - End
ELSE 
	BEGIN
		IF @SHOW_LEFT_EMPLOYEE_FOR_SALARY = 0 
			BEGIN
			
				INSERT INTO #SALARY_TEMP
				SELECT SAL_TRAN_ID,E.EMP_ID,PAN_NO,BM.COMP_NAME,CM.CMP_NAME,CM.CMP_ADDRESS,BM.BRANCH_ADDRESS
					  ,CAST( E.ALPHA_EMP_CODE AS VARCHAR) + ' - '+E.EMP_FULL_NAME AS EMP_FULL_NAME,M_IT_TAX
					  ,CASE WHEN M_OT_HOURS > 0 THEN M_OT_HOURS ELSE OVER_TIME END AS M_OT_HOURS
					  ,OTHER_DEDU_AMOUNT,M_LOAN_AMOUNT,M_ADV_AMOUNT ,OTHER_ALLOW_AMOUNT
					  ,AM1.TOTAL_PRESENT AS MONTH_DAYS, ISNULL(ISNULL(PRESENT_DAYS,P_DAYS),AM1.TOTAL_PRESENT) AS PRESENT_DAYS
					  ,SG.SALARY_STATUS AS STATUS	--SHOW SALARY STATUS --ANKIT 08052015
					  ,P_DAYS,I_Q.BRANCH_ID--,MSP.SALARY_STATUS AS PMONTH_STATUS -- Commented by Hardik 08/12/2017
					  ,I_Q.VERTICAL_ID,I_Q.SUBVERTICAL_ID,I_Q.DEPT_ID   --ADDED BY GADRIWALA 16102013 E.VERTICAL_ID,E.SUBVERTICAL_ID  ADDED BY JAINA 29-09-2015 DEPT_ID
					  --,EMP_LEFT_DATE,EMP_LEFT
					 --,(CASE WHEN MSP.SALARY_STATUS = 'HOLD' AND PAN_NO = '' THEN 3 WHEN MSP.SALARY_STATUS = 'HOLD' THEN 2  WHEN PAN_NO = '' OR ISNULL(DOC.EMP_ID,0) <> 0 THEN 1 ELSE 0 END) AS COLOR_FLAG
					    --Added by Jaina 17-01-2018 (After discuss with Hardikbhai)
					   ,CASE WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 1 THEN
								  CASE WHEN (MSP.Salary_Status = 'HOLD' AND E.Pan_No = '') THEN 3
									   WHEN (MSP.Salary_Status = 'HOLD') then 2
									   WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 
								  ELSE 0 END
							 WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 0 THEN
									CASE WHEN MSP.Salary_Status = 'HOLD' THEN 2 ELSE 0 END
							 WHEN @Previous_Salary_Hold = 0  and @No_Pan_Card = 1 THEN
									CASE WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 ELSE 0 END
							 ELSE 0 END As COLOR_FLAG	

					  ,I_Q.EMP_FIX_SALARY   --ADDED BY JAINA 07-09-2016
					  ,E.EMP_LEFT    --ADDED BY JAINA 16-11-2016
					  --,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN MSP1.SALARY_STATUS IN('HOLD','DONE') THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
					  ,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN Isnull(MSP.SALARY_STATUS,'') = '' THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
					  ,case when EA.exit_id > 0 then 1 else 0 end
				FROM T0080_EMP_MASTER E WITH (NOLOCK)
					 LEFT OUTER JOIN ##ATT_MUSTER1 AM1 ON AM1.EMP_ID = E.EMP_ID 
					 LEFT OUTER JOIN ( 
										SELECT I.EMP_ID , GRD_ID,BRANCH_ID,CAT_ID,DESIG_ID,DEPT_ID,TYPE_ID,VERTICAL_ID,SUBVERTICAL_ID,I.EMP_FIX_SALARY  
										FROM T0095_INCREMENT I WITH (NOLOCK)
										INNER JOIN ( 
														SELECT MAX(INCREMENT_ID) AS INCREMENT_ID,EMP_ID 
														FROM T0095_INCREMENT WITH (NOLOCK)
														WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @CMP_ID
														GROUP BY EMP_ID  
													) QRY ON I.EMP_ID = QRY.EMP_ID AND I.INCREMENT_ID = QRY.INCREMENT_ID	 
									  ) AS I_Q  ON E.EMP_ID = I_Q.EMP_ID  
					INNER JOIN #EMP_CONS EC ON E.EMP_ID = EC.EMP_ID 
					INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON I_Q.BRANCH_ID = BM.BRANCH_ID 
					LEFT OUTER JOIN (
										SELECT EMP_ID,SALARY_STATUS 
										FROM T0200_MONTHLY_SALARY WITH (NOLOCK)										
										WHERE MONTH(MONTH_END_DATE) = Month(DATEADD(M,-1,@TO_DATE)) AND YEAR(MONTH_END_DATE) = YEAR(DATEADD(M,-1,@TO_DATE))
									 )MSP ON E.EMP_ID = MSP.EMP_ID 
					INNER JOIN T0010_COMPANY_MASTER CM WITH (NOLOCK) ON E.CMP_ID = CM.CMP_ID 
					LEFT OUTER JOIN ( 
										SELECT MS.EMP_ID,PRESENT_DAYS ,SAL_TRAN_ID,M_OT_HOURS,M_LOAN_AMOUNT,M_IT_TAX,OTHER_DEDU_AMOUNT,OTHER_ALLOW_AMOUNT,IT_M_ED_CESS_AMOUNT,IT_M_SURCHARGE_AMOUNT ,SALARY_STATUS
										FROM 	T0200_MONTHLY_SALARY MS WITH (NOLOCK) 
										INNER JOIN #EMP_CONS EC ON MS.EMP_ID = EC.EMP_ID 
										WHERE CMP_ID = @CMP_ID AND MONTH_END_DATE >=@FROM_DATE AND MONTH_END_DATE <=@TO_DATE 
									)SG ON  E.EMP_ID  =SG.EMP_ID 
					LEFT OUTER JOIN(
										SELECT MPI.EMP_ID,P_DAYS,OVER_TIME 
										FROM T0190_MONTHLY_PRESENT_IMPORT MPI  WITH (NOLOCK)
										INNER JOIN  #EMP_CONS EC ON MPI.EMP_ID = EC.EMP_ID 
										WHERE CMP_ID = @CMP_ID AND MPI.MONTH = MONTH(@TO_DATE) AND MPI.YEAR = YEAR(@TO_DATE)
										AND ((BACKDATED_LEAVE_DAYS <> 0 AND P_DAYS>0) OR (ISNULL(BACKDATED_LEAVE_DAYS,0) = 0 AND P_DAYS>=0)) --ADDED BY HARDIK 04/01/2016 AS BACKDATED LEAVE CASE SHOWING 0 PRESENT DAYS
									)Q_MPI	ON E.EMP_ID =Q_MPI.EMP_ID 
					LEFT OUTER JOIN(
										SELECT ADV_CLOSING AS M_ADV_AMOUNT,ADVT.EMP_ID  
										FROM T0140_ADVANCE_TRANSACTION ADVT WITH (NOLOCK) 
										INNER JOIN  (
														 SELECT MAX(FOR_DATE) AS FOR_DATE , EMP_ID 
														 FROM T0140_ADVANCE_TRANSACTION WITH (NOLOCK)
														 WHERE FOR_DATE <= @TO_DATE AND CMP_ID = @CMP_ID 
														 GROUP BY EMP_ID  
													) QRY ON ADVT.EMP_ID = QRY.EMP_ID AND ADVT.FOR_DATE = QRY.FOR_DATE	
									) I_Q1 ON E.EMP_ID = I_Q1.EMP_ID 	
					INNER JOIN T0011_LOGIN LO WITH (NOLOCK) ON LO.EMP_ID = E.EMP_ID
					--LEFT OUTER JOIN (
					--					SELECT EMP_ID,SALARY_STATUS 
					--					FROM T0200_MONTHLY_SALARY 
					--					WHERE MONTH_END_DATE BETWEEN DATEADD(M,-1,@FROM_DATE) AND DATEADD(M,-1,@TO_DATE) 
					--				) MSP1 ON E.EMP_ID = MSP1.EMP_ID	
					LEFT OUTER JOIN (
										SELECT EMP_ID FROM #EMP_DOC
									) AS DOC ON DOC.EMP_ID = E.EMP_ID	
					LEFT OUTER JOIN T0200_Emp_ExitApplication EA WITH (NOLOCK) ON EA.emp_id=E.Emp_ID and EA.[status]<>'R'  --Mukti(19122019)
				WHERE E.CMP_ID = @CMP_ID --AND LO.IS_ACTIVE =1
					--AND	 ((@FROM_DATE < E.EMP_LEFT_DATE AND @TO_DATE < E.EMP_LEFT_DATE) OR E.EMP_LEFT_DATE IS NULL)	
					--AND E.EMP_ID IN (SELECT EMP_ID FROM #EMP_CONS)
				ORDER BY  EMP_CODE ASC
			END
		ELSE
			BEGIN				
				INSERT INTO #SALARY_TEMP
				SELECT SAL_TRAN_ID,E.EMP_ID,PAN_NO,BM.COMP_NAME,CM.CMP_NAME,CM.CMP_ADDRESS,BM.BRANCH_ADDRESS
					   ,CAST( E.ALPHA_EMP_CODE AS VARCHAR) + ' - '+E.EMP_FULL_NAME AS EMP_FULL_NAME,M_IT_TAX
					   ,CASE WHEN M_OT_HOURS > 0 THEN M_OT_HOURS ELSE OVER_TIME END AS M_OT_HOURS
					   ,OTHER_DEDU_AMOUNT,M_LOAN_AMOUNT,M_ADV_AMOUNT,OTHER_ALLOW_AMOUNT
					   ,AM1.TOTAL_PRESENT AS 	MONTH_DAYS	, ISNULL(ISNULL(PRESENT_DAYS,P_DAYS),AM1.TOTAL_PRESENT) AS PRESENT_DAYS
					   ,(CASE WHEN ISNULL(SH.EMP_ID,0) <> 0 THEN 'HOLD' ELSE SG.SALARY_STATUS END) AS STATUS
					   ,P_DAYS,I_Q.BRANCH_ID--,MSP.SALARY_STATUS AS PMONTH_STATUS
					    ,I_Q.VERTICAL_ID,I_Q.SUBVERTICAL_ID,I_Q.DEPT_ID  --ADDED BY GADRIWALA 16102013 E.VERTICAL_ID,E.SUBVERTICAL_ID  --ADDED BY JAINA 29-09-2015 DEPT_ID
					   --,EMP_LEFT_DATE,EMP_LEFT
					   --,(CASE WHEN MSP.SALARY_STATUS = 'HOLD' AND PAN_NO = '' THEN 3 WHEN MSP.SALARY_STATUS = 'HOLD' THEN 2  WHEN PAN_NO = '' OR ISNULL(DOC.EMP_ID,0) <> 0 THEN 1 ELSE 0 END) AS COLOR_FLAG
					   --Added by Jaina 17-01-2018 (After discuss with Hardikbhai)
					   ,CASE WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 1 THEN
								  CASE WHEN (MSP.Salary_Status = 'HOLD' AND E.Pan_No = '') THEN 3
									   WHEN (MSP.Salary_Status = 'HOLD') then 2
									   WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 
								  ELSE 0 END
							 WHEN @Previous_Salary_Hold = 1  and @No_Pan_Card = 0 THEN
									CASE WHEN MSP.Salary_Status = 'HOLD' THEN 2 ELSE 0 END
							 WHEN @Previous_Salary_Hold = 0  and @No_Pan_Card = 1 THEN
									CASE WHEN (E.Pan_No = '' OR ISNULL(DOC.EMP_ID,0) <> 0) THEN 1 ELSE 0 END
							 ELSE 0 END As COLOR_FLAG												   						
					   ,I_Q.EMP_FIX_SALARY  --ADDED BY JAINA 07-09-2016
					   ,E.EMP_LEFT    --ADDED BY JAINA 16-11-2016
					   --,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN MSP1.SALARY_STATUS IN('HOLD','DONE') THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
					   --,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN Isnull(MSP1.SALARY_STATUS,'') = '' THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
					   --,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN Isnull(MSP.SALARY_STATUS,'') = 'Done' THEN '1' ELSE '0' END) END) AS PREV_MONTH_SALARY --Added by Jaina 12-01-2019
					   ,(CASE WHEN E.DATE_OF_JOIN >= @FROM_DATE THEN '1'  ELSE (CASE WHEN Isnull(MSP.SALARY_STATUS,'') = '' THEN '0' ELSE '1' END) END) AS PREV_MONTH_SALARY			
					   ,case when EA.exit_id > 0 then 1 else 0 end
				FROM T0080_EMP_MASTER E WITH (NOLOCK)
					 LEFT OUTER JOIN ##ATT_MUSTER1 AM1 ON AM1.EMP_ID = E.EMP_ID 
					 LEFT OUTER JOIN ( 
										SELECT I.EMP_ID , GRD_ID,BRANCH_ID,CAT_ID,DESIG_ID,DEPT_ID,TYPE_ID,VERTICAL_ID,SUBVERTICAL_ID,I.EMP_FIX_SALARY  
										FROM T0095_INCREMENT I WITH (NOLOCK)
										INNER JOIN( 
														SELECT MAX(INCREMENT_ID) AS INCREMENT_ID,EMP_ID 
														FROM T0095_INCREMENT WITH (NOLOCK)
														WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @CMP_ID
														GROUP BY EMP_ID  
												  ) QRY ON I.EMP_ID = QRY.EMP_ID AND I.INCREMENT_ID = QRY.INCREMENT_ID	 
									  ) I_Q  ON E.EMP_ID = I_Q.EMP_ID  
					INNER JOIN #EMP_CONS EC ON E.EMP_ID = EC.EMP_ID 
					INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON I_Q.BRANCH_ID = BM.BRANCH_ID  
					LEFT OUTER JOIN (
										SELECT EMP_ID,SALARY_STATUS 
										FROM T0200_MONTHLY_SALARY WITH (NOLOCK) 
										--WHERE MONTH_ST_DATE <= DATEADD(M,-1,@FROM_DATE) AND MONTH_END_DATE >= DATEADD(M,-1,@TO_DATE)
										WHERE month(MONTH_END_DATE) = Month(DATEADD(M,-1,@TO_DATE)) AND year(MONTH_END_DATE) = year(DATEADD(M,-1,@TO_DATE))
									)MSP ON E.EMP_ID = MSP.EMP_ID 
					INNER JOIN T0010_COMPANY_MASTER CM WITH (NOLOCK) ON E.CMP_ID = CM.CMP_ID 
					LEFT OUTER JOIN ( 
										SELECT MS.EMP_ID,PRESENT_DAYS ,SAL_TRAN_ID,M_OT_HOURS,M_LOAN_AMOUNT,M_IT_TAX,OTHER_DEDU_AMOUNT,OTHER_ALLOW_AMOUNT,IT_M_ED_CESS_AMOUNT,IT_M_SURCHARGE_AMOUNT,SALARY_STATUS 
										FROM 	T0200_MONTHLY_SALARY MS WITH (NOLOCK)  
										INNER JOIN #EMP_CONS EC ON MS.EMP_ID = EC.EMP_ID 
										WHERE CMP_ID = @CMP_ID AND MONTH_END_DATE >=@FROM_DATE AND MONTH_END_DATE <=@TO_DATE 
									)SG ON E.EMP_ID  =SG.EMP_ID 
					LEFT OUTER JOIN(
										SELECT MPI.EMP_ID,P_DAYS,OVER_TIME FROM T0190_MONTHLY_PRESENT_IMPORT MPI  WITH (NOLOCK)
										INNER JOIN #EMP_CONS EC ON MPI.EMP_ID = EC.EMP_ID 
										WHERE CMP_ID = @CMP_ID AND MPI.MONTH = MONTH(@TO_DATE) AND MPI.YEAR = YEAR(@TO_DATE)
										--AND P_DAYS>=0 --COMMENTED BY HARDIK 04/01/2016 AS BACKDATED LEAVE CASE SHOWING 0 PRESENT DAYS
										AND ((BACKDATED_LEAVE_DAYS <> 0 AND P_DAYS>0) OR (ISNULL(BACKDATED_LEAVE_DAYS,0) = 0 AND P_DAYS>=0)) --ADDED BY HARDIK 04/01/2016 AS BACKDATED LEAVE CASE SHOWING 0 PRESENT DAYS
									)Q_MPI	ON E.EMP_ID =Q_MPI.EMP_ID 
					LEFT OUTER JOIN (
					
										SELECT ADV_CLOSING AS M_ADV_AMOUNT,ADVT.EMP_ID  
										FROM T0140_ADVANCE_TRANSACTION ADVT WITH (NOLOCK) 
										INNER JOIN( 
														SELECT MAX(FOR_DATE) AS FOR_DATE,EMP_ID 
														FROM T0140_ADVANCE_TRANSACTION WITH (NOLOCK)
														WHERE FOR_DATE <= @TO_DATE AND CMP_ID = @CMP_ID 
														GROUP BY EMP_ID  
												  ) QRY ON ADVT.EMP_ID = QRY.EMP_ID AND ADVT.FOR_DATE = QRY.FOR_DATE	
									) I_Q1 ON E.EMP_ID = I_Q1.EMP_ID 	
					INNER JOIN T0011_LOGIN LO WITH (NOLOCK) ON LO.EMP_ID = E.EMP_ID
					--Comment by Jaina 12-01-2019
					--LEFT OUTER JOIN (
					--					SELECT EMP_ID,SALARY_STATUS 
					--					FROM T0200_MONTHLY_SALARY 
					--					WHERE MONTH_END_DATE BETWEEN DATEADD(M,-1,@FROM_DATE) AND DATEADD(M,-1,@TO_DATE) 
					--				) MSP1 ON E.EMP_ID = MSP1.EMP_ID							
					LEFT OUTER JOIN (
										SELECT EMP_ID FROM #EMP_DOC
									) AS DOC ON DOC.EMP_ID = E.EMP_ID
					LEFT OUTER JOIN(
									  SELECT EMP_ID FROM #EMP_SALARY_ON_HOLD
									) AS SH ON SH.EMP_ID = E.EMP_ID
					LEFT OUTER JOIN T0200_Emp_ExitApplication EA WITH (NOLOCK) ON EA.emp_id=E.Emp_ID and EA.[status]<>'R'  --Mukti(19122019)
				WHERE E.CMP_ID = @CMP_ID AND LO.IS_ACTIVE =1
					AND E.EMP_ID IN (SELECT EMP_ID FROM #EMP_CONS)
				ORDER BY  EMP_CODE ASC
			END
	END
	
	IF @FILTERTYPE = 0
		BEGIN
			SELECT * FROM #SALARY_TEMP
		END
	IF @FILTERTYPE = 1 
		BEGIN
			SELECT * FROM #SALARY_TEMP WHERE COLOR_FLAG = 1	
		END
	ELSE IF @FILTERTYPE = 2
		BEGIN
			SELECT * FROM #SALARY_TEMP WHERE COLOR_FLAG = 2	
		END
	ELSE IF @FILTERTYPE = 3
		BEGIN
			SELECT * FROM #SALARY_TEMP WHERE EMP_FIX_SALARY = 1	
		END
	ELSE IF @FILTERTYPE = 4
		BEGIN
			SELECT * FROM #SALARY_TEMP WHERE COLOR_FLAG = 3
		END
	ELSE IF @FILTERTYPE = 5
		BEGIN
			SELECT * FROM #SALARY_TEMP WHERE PREV_MONTH_SALARY = 0
		END
		
	-- Changed By rohit on 27082014
	IF EXISTS(SELECT TP.EMP_ID FROM T0190_TAX_PLANNING TP WITH (NOLOCK) INNER JOIN #EMP_CONS E ON TP.EMP_ID = E.EMP_ID WHERE CMP_ID=@CMP_ID AND TP.FOR_DATE>= @FROM_DATE AND TP.FOR_DATE<=@TO_DATE)
		BEGIN
			SELECT * FROM T0190_TAX_PLANNING TP WITH (NOLOCK) INNER JOIN #EMP_CONS E ON TP.EMP_ID = E.EMP_ID WHERE CMP_ID=@CMP_ID AND TP.FOR_DATE>= @FROM_DATE AND TP.FOR_DATE<=@TO_DATE
		END
	ELSE
		BEGIN
			SELECT * FROM T0190_TAX_PLANNING TP WITH (NOLOCK) INNER JOIN (SELECT MAX(TP.FOR_DATE) AS FOR_DATE,TP.EMP_ID FROM T0190_TAX_PLANNING TP WITH (NOLOCK) INNER JOIN #EMP_CONS E ON TP.EMP_ID = E.EMP_ID WHERE CMP_ID=@CMP_ID AND  TP.FOR_DATE<=@TO_DATE AND TP.FOR_DATE >= @FIN_START_DATE AND ISNULL(IS_REPEAT,0) = 1 GROUP BY TP.EMP_ID) QRY ON TP.EMP_ID = QRY.EMP_ID AND TP.FOR_DATE = QRY.FOR_DATE 
		END
	-- Ended by rohit
	
	IF @PENDING_LEAVE_SETTING = 1
		BEGIN
		--ADDED BY GADRIWALA MUSLIM 03092013
			SELECT DISTINCT ALPHA_EMP_CODE AS EMP_CODE, EMP_FULL_NAME,EM.EMP_ID,B_T.BRANCH_ID,BM.BRANCH_NAME 
			FROM T0100_LEAVE_APPLICATION AS LA  WITH (NOLOCK)
			INNER JOIN T0110_LEAVE_APPLICATION_DETAIL AS LAD WITH (NOLOCK) ON LA.LEAVE_APPLICATION_ID = LAD.LEAVE_APPLICATION_ID
			INNER JOIN T0080_EMP_MASTER AS EM WITH (NOLOCK) ON  LA.EMP_ID = EM.EMP_ID 
			-- ADDED BY ZISHANALI 30092013
			INNER JOIN ( 
							SELECT I.EMP_ID , BRANCH_ID FROM T0095_INCREMENT I WITH (NOLOCK)
							INNER JOIN( 
										SELECT MAX(INCREMENT_ID) AS INCREMENT_ID,EMP_ID 
										FROM T0095_INCREMENT WITH (NOLOCK)
										WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @CMP_ID 
										GROUP BY EMP_ID  
									  ) QRY ON I.EMP_ID = QRY.EMP_ID AND I.INCREMENT_ID = QRY.INCREMENT_ID	 
						) AS B_T ON B_T.EMP_ID = EM.EMP_ID
			INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON BM.BRANCH_ID = B_T.BRANCH_ID
			-- ADDED BY ZISHANALI 30092013
			WHERE (LA.APPLICATION_STATUS = 'P' OR LA.APPLICATION_STATUS = 'F') AND LAD.CMP_ID = @CMP_ID
				   AND (LAD.FROM_DATE >= @FROM_DATE AND LAD.TO_DATE <= @TO_DATE )
		--ADDED BY GADRIWALA MUSLIM 03092013
		END
	ELSE
	BEGIN
		SELECT 0,'',0,0,''
	END
	
	IF @EMP_PT_SETTING = 1
		BEGIN
		-- ADDED BY ROHIT ON 04-APR-2014
			 SELECT DISTINCT ALPHA_EMP_CODE AS EMP_CODE, EMP_FULL_NAME,EM.EMP_ID,B_T.BRANCH_ID,BM.BRANCH_NAME 
			 FROM T0080_EMP_MASTER AS EM WITH (NOLOCK)
			 INNER JOIN #EMP_CONS AS EC ON EM.EMP_ID =EC.EMP_ID
			 INNER JOIN ( 
							SELECT I.EMP_ID , BRANCH_ID,EMP_PT FROM T0095_INCREMENT I WITH (NOLOCK)
							INNER JOIN 
								( 
									SELECT MAX(INCREMENT_ID) AS INCREMENT_ID,EMP_ID 
										FROM T0095_INCREMENT WITH (NOLOCK)
									WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @CMP_ID 
									GROUP BY EMP_ID  
								) QRY ON I.EMP_ID = QRY.EMP_ID AND I.INCREMENT_ID = QRY.INCREMENT_ID	
						) AS B_T ON B_T.EMP_ID = EM.EMP_ID
			INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON BM.BRANCH_ID = B_T.BRANCH_ID
			INNER JOIN T0040_GENERAL_SETTING GS WITH (NOLOCK) ON BM.BRANCH_ID = GS.BRANCH_ID
			WHERE GS.IS_PT = 1 AND B_T.EMP_PT=0
					AND GS.FOR_DATE = (
										SELECT MAX(FOR_DATE) FROM T0040_GENERAL_SETTING WITH (NOLOCK)
										WHERE CMP_ID = @CMP_ID 
										AND BRANCH_ID = ISNULL(@BRANCH_ID,EC.BRANCH_ID)
										)  --MODIFIED BY RAMIZ ON 17092014
		-- ENDED BY ROHIT ON 04-APR-2014
		END
	ELSE
		BEGIN
			SELECT 0,'',0,0,''
		END
		  
	RETURN

