

-- =============================================
-- Author:		<Author,,JIMIT SONI>
-- Create date: <Create Date,,20022019>
-- Description:	<Description,,For monthly Attendance SMS>
---25/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
-- =============================================
CREATE PROCEDURE [dbo].[P_Monthly_Attendance_SMS_Reminder]
	@CMP_ID		NUMERIC(18,0),
	@CC_EMAIL	NVARCHAR(MAX) = ''
AS
BEGIN
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON

    DECLARE @CONSTRAINT VARCHAR(MAX)
	DECLARE @FROM_DATE	DATETIME
	DECLARE @TO_DATE	DATETIME	

	DECLARE @EMP_ID		NUMERIC
	DECLARE @R_EMP_ID	NUMERIC


	SET	@FROM_DATE	= DATEADD(M, -1, GETDATE())
	SET @FROM_DATE	= CONVERT(DATETIME, CONVERT(CHAR(10), @FROM_DATE, 103), 103);
	SET @FROM_DATE	= DATEADD(D, DAY(@FROM_DATE) * -1, @FROM_DATE) + 1;	
	SET	@TO_DATE	= DATEADD(M, 1, @FROM_DATE) - 1
		

	CREATE TABLE #EMP_CONS 
	(      
		EMP_ID NUMERIC ,     
		BRANCH_ID NUMERIC,
		INCREMENT_ID NUMERIC    
	)  

	EXEC SP_RPT_FILL_EMP_CONS  @CMP_ID,@FROM_DATE,@TO_DATE,0,0,0,0,0,0,0,'',0 ,0 ,0,0,0,0,0,0,0,0,0,0
	

	DELETE	EC 
	FROM	#EMP_CONS EC Inner JOIN
			T0080_EMP_MASTER EM ON EM.EMP_ID = EC.EMP_ID
	WHERE	ISNULL(MOBILE_NO,'') = ''

	SELECT	@CONSTRAINT = COALESCE(@CONSTRAINT + '#','') + CAST(EMP_ID AS VARCHAR(10))
	FROM	#EMP_CONS E  	
	
	CREATE TABLE #EMP_ATTENDANCE
	(
		EMP_ID		NUMERIC,
		FOR_DATE	DATETIME,
		ROW_ID		NUMERIC,
		CAPTION		VARCHAR(32),
		STATUS1		VARCHAR(8),
		STATUS2		VARCHAR(8),
		R_TYPE		TINYINT
	)

	exec SP_RPT_EMP_ATTENDANCE_MUSTER_GET   @Cmp_ID=@CMP_ID,@From_Date=@FROM_DATE,@To_Date=@TO_DATE,@Branch_ID=0,@Cat_ID=0,@Grd_ID=0,@Type_ID=0,@Dept_ID=0,
											@Desig_ID=0,@Emp_ID=0,@Constraint=@Constraint,@Report_For='ATT_STATUS',@Type=0	

	

	DECLARE @MAX_ROW_ID INT
	SELECT	@MAX_ROW_ID = MAX(ROW_ID)  FROM (SELECT DISTINCT ROW_ID, FOR_DATE FROM #EMP_ATTENDANCE WHERE R_TYPE=1) T 

	UPDATE	#EMP_ATTENDANCE SET CAPTION = '', STATUS1='', STATUS2='' WHERE ROW_ID < (@MAX_ROW_ID - 7) AND FOR_DATE > @TO_DATE
	--UPDATE	#EMP_ATTENDANCE SET CAPTION = 'P', STATUS1=ISNULL(STATUS1,'0.00')	WHERE ROW_ID = @MAX_ROW_ID - 7
	UPDATE	#EMP_ATTENDANCE SET CAPTION = 'A', STATUS1=ISNULL(STATUS1,'0.00')	WHERE ROW_ID = @MAX_ROW_ID - 6
	--UPDATE	#EMP_ATTENDANCE SET CAPTION = 'L', STATUS1=ISNULL(STATUS1,'0.00')	WHERE ROW_ID = @MAX_ROW_ID - 5
	--UPDATE	#EMP_ATTENDANCE SET CAPTION = 'W', STATUS1=ISNULL(STATUS1,'0.00')	WHERE ROW_ID = @MAX_ROW_ID - 4 
	--UPDATE	#EMP_ATTENDANCE SET CAPTION = 'H', STATUS1=ISNULL(STATUS1,'0.00')	WHERE ROW_ID = @MAX_ROW_ID - 3
	--UPDATE	#EMP_ATTENDANCE SET CAPTION = 'LC', STATUS1=ISNULL(STATUS1,'0.00')	WHERE ROW_ID = @MAX_ROW_ID - 2
	--UPDATE	#EMP_ATTENDANCE SET CAPTION = 'GP', STATUS1=ISNULL(STATUS1,'0.00')	WHERE ROW_ID = @MAX_ROW_ID - 1
	UPDATE	#EMP_ATTENDANCE SET CAPTION = 'PD', STATUS1=ISNULL(STATUS1,'0.00')	WHERE ROW_ID = @MAX_ROW_ID - 0
				
				
			DECLARE @EMPID	  NUMERIC(18,0)
			DECLARE @FOR_DATE DATETIME
			DECLARE @CAPTION1  VARCHAR(5)
			DECLARE @CAPTION2  VARCHAR(5)
			DECLARE	@STATUS1  VARCHAR(5)
			DECLARE @ATTENDANCE_TEXT VARCHAR(MAX)
			DECLARE @SRESPONSE VARCHAR(1000)
			DECLARE @MOBILE_NO AS VARCHAR(20)
			DECLARE @EMP_FULL_NAME AS VARCHAR(1000)
			DECLARE @BRANCH_ID NUMERIC
			DECLARE @EMP_FIRST_NAME AS VARCHAR(100)
			DECLARE @INITIAL AS VARCHAR(100)
			DECLARE @EMP_SECOND_NAME AS VARCHAR(100)
			DECLARE @EMP_LAST_NAME AS VARCHAR(100)
			DECLARE @EMP_CODE AS VARCHAR(100)
			DECLARE @CMP_IDCUR NUMERIC(18,0)

			Declare CusrEMP cursor for
				SELECT p.*,EM.Mobile_No,EM.EMP_FIRST_NAME,EM.EMP_SECOND_NAME,EM.EMP_LAST_NAME,EM.INITIAL,ALPHA_EMP_CODE,EC.Branch_ID,EM.CMP_ID
				from  (
							select distinct Emp_Id,CAPTION,STATUS1
							from #EMP_ATTENDANCE
							where Row_Id in (39,33)
						) x
						pivot 
						(
							MAX(STATUS1) for CAPTION in (PD,A)
						) p  INNER JOIN
					#EMP_CONS EC ON  EC.EMP_ID = P.EMP_ID  INNER JOIN 
					T0080_EMP_MASTER EM WITH (NOLOCK) ON EM.EMP_ID = EC.EMP_ID 
			Open CusrEMP
			Fetch next from CusrEMP into @EMPID,@CAPTION1,@CAPTION2,@MOBILE_NO,@EMP_FIRST_NAME,@EMP_SECOND_NAME,@EMP_LAST_NAME,@INITIAL,@EMP_CODE,@BRANCH_ID,@CMP_IDCUR
			While @@fetch_status = 0                    
			Begin     

				set @ATTENDANCE_TEXT = ''
				set @sResponse = ''
								
				SELECT	@ATTENDANCE_TEXT = ATTENDANCE_TEXT 
				FROM	T0040_SMS_SETTING  WITH (NOLOCK)
				WHERE	CMP_ID = @CMP_IDCUR AND BRANCH_ID = @BRANCH_ID
				
				--IF 	ISNULL(@ATTENDANCE_TEXT,'') = ''
				--	BEGIN
				--		SELECT	@ATTENDANCE_TEXT = ATTENDANCE_TEXT 
				--		FROM	T0040_SMS_SETTING 
				--		WHERE	CMP_ID = @CMP_ID AND ISNULL(BRANCH_ID,@BRANCH_ID) = @BRANCH_ID
				--	END
				IF ISNULL(@ATTENDANCE_TEXT,'') = ''
					BEGIN
						SET @ATTENDANCE_TEXT = 'Dear #Initial# #First_Name# #Second_Name# #Last_Name# Your Attendance For The Month of  #Month# Paid Days : #Payable_days# Unpaid Days : #Absent_days#'
					END 
	
							
				set @ATTENDANCE_TEXT = replace(@ATTENDANCE_TEXT,'#Mobile_No#',@Mobile_No)
				set @ATTENDANCE_TEXT = replace(@ATTENDANCE_TEXT,'#Initial#',@Initial)			
				set @ATTENDANCE_TEXT = replace(@ATTENDANCE_TEXT,'#First_Name#',@Emp_First_Name)			
				set @ATTENDANCE_TEXT = replace(@ATTENDANCE_TEXT,'#Second_Name#',@Emp_second_Name)			
				set @ATTENDANCE_TEXT = replace(@ATTENDANCE_TEXT,'#Last_Name#',@Emp_Last_Name)			
				set @ATTENDANCE_TEXT = replace(@ATTENDANCE_TEXT,'#Emp_Code#',@Emp_code)						
				set @ATTENDANCE_TEXT = replace(@ATTENDANCE_TEXT,'#Month#',DATENAME(M,@TO_DATE) + '-' +  CONVERT(VARCHAR(4),DATEPART(YYYY,@TO_DATE)))
				set @ATTENDANCE_TEXT = replace(@ATTENDANCE_TEXT,'#Payable_days#',@CAPTION1)				
				set @ATTENDANCE_TEXT = replace(@ATTENDANCE_TEXT,'#Absent_days#',@CAPTION2)
			
				

				IF ISNULL(@MOBILE_NO,'') <>''
					BEGIN
				--	-- FOR SEND SMS ON MOBILE
						INSERT INTO t0000_SMS_LOGs
						values (@EMPID,@ATTENDANCE_TEXT,'Attendace',@Mobile_No,getdate())
				
						EXEC PR_SENDSMSSQL @MOBILE_NO,@ATTENDANCE_TEXT,@CMP_IDCUR,@SRESPONSE OUT,'ATTENDANCE'
					END

			fetch next from CusrEMP into @EMPID,@CAPTION1,@CAPTION2,@MOBILE_NO,@EMP_FIRST_NAME,@EMP_SECOND_NAME,@EMP_LAST_NAME,@INITIAL,@EMP_CODE,@BRANCH_ID,@CMP_IDCUR
			end
			close CusrEMP                    
			deallocate CusrEMP

END


