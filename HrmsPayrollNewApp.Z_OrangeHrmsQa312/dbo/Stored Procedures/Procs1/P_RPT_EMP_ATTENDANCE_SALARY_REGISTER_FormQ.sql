

-----------------------------------------------

--ADDED JIMIT 11022015------
---SALARY REGISTER FORMAT FORM-Q FOR TAMIL NADU---
---13/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---

---------------------------------------------
CREATE PROCEDURE [dbo].[P_RPT_EMP_ATTENDANCE_SALARY_REGISTER_FormQ]      
     @COMPANY_ID		NUMERIC  
	,@FROM_DATE		DATETIME
	,@TO_DATE 		DATETIME
	,@BRANCH_ID		NUMERIC	
	,@GRADE_ID 		NUMERIC
	,@TYPE_ID 		NUMERIC
	,@DEPT_ID 		NUMERIC
	,@DESIG_ID 		NUMERIC
	,@EMP_ID 		NUMERIC
	,@CONSTRAINT	VARCHAR(MAX)
	,@CAT_ID        NUMERIC = 0
	,@IS_COLUMN		TINYINT = 0
	,@SALARY_CYCLE_ID  NUMERIC  = 0
	,@SEGMENT_ID NUMERIC = 0 
	,@VERTICAL NUMERIC = 0 
	,@SUBVERTICAL NUMERIC = 0 
	,@SUBBRANCH NUMERIC = 0 
	,@SUMMARY VARCHAR(MAX)=''
	,@PBRANCH_ID VARCHAR(200) = '0'
	,@ORDER_BY   VARCHAR(30) = 'CODE' 
	,@REPORT_CALL VARCHAR(20) = 'IN-OUT'   
    ,@WEEKOFF_ENTRY VARCHAR(1) = 'Y'
    ,@STATE_ID  NUMERIC(18,0) = 0
    
AS

SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON
	
	CREATE TABLE #EMP_CONS 
	(      
		EMP_ID NUMERIC ,     
		BRANCH_ID NUMERIC,
		INCREMENT_ID NUMERIC
	)	
	EXEC SP_RPT_FILL_EMP_CONS @COMPANY_ID,@FROM_DATE,@TO_DATE,@BRANCH_ID,@CAT_ID,@GRADE_ID,@TYPE_ID,@DEPT_ID,@DESIG_ID,@EMP_ID,@CONSTRAINT,0,0,0,0,0,0,0,0,0,0,0,0   
	
	
	
	CREATE TABLE #CROSSTAB_FORMQ     
		(   
			EMP_ID NUMERIC,
			CMP_ID	NUMERIC,
			EMP_CODE VARCHAR(100) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,       
			NAME_OF_THE_PERSON	VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
			DATE_OF_ENTRY_INTO_SERVICE VARCHAR(15) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
			DATE_OF_BIRTH VARCHAR(15) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,			
			DESIGNATION	VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
			LEAVE_ID						 NUMERIC,
			LEAVE_CREDIT_CL					 NUMERIC(18,0),
			LEAVE_CREDIT_SL					 NUMERIC(18,0),
			LEAVE_CREDIT_HOLIDAY_WITH_WAGES	 NUMERIC(18,0),
			LEAVE_AVAILED_CL				 NUMERIC(18,0),
			LEAVE_AVAILED_SL				 NUMERIC(18,0),						
			LEAVE_AVAILED_HOLIDAY_WITH_WAGES NUMERIC(18,0),
			LEAVE_BALANCE_CL				 NUMERIC(18,0),
			LEAVE_BALANCE_SL				 NUMERIC(18,0),					
			LEAVE_BALANCE_HOLIDAY_WITH_WAGES NUMERIC(18,0),		
			CMP_ADDRESS		VARCHAR(500) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
			STATE_NAME		VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
		)    
		
	DECLARE @STATE_NAME VARCHAR(50)
	SELECT @STATE_NAME = ISNULL(STATE_NAME,'') FROM T0020_STATE_MASTER WITH (NOLOCK) WHERE STATE_ID = @STATE_ID AND CMP_ID = @COMPANY_ID	
		
	INSERT INTO #CROSSTAB_FORMQ(EMP_ID,CMP_ID,EMP_CODE,NAME_OF_THE_PERSON,DATE_OF_ENTRY_INTO_SERVICE,DATE_OF_BIRTH,DESIGNATION,CMP_ADDRESS,STATE_NAME)
	SELECT		E.EMP_ID,E.CMP_ID,E.ALPHA_EMP_CODE,(E.EMP_FULL_NAME + ' - '+ E.ALPHA_EMP_CODE ) AS EMP_FULL_NAME,CONVERT(VARCHAR,E.DATE_OF_JOIN,103),CONVERT(VARCHAR,E.DATE_OF_BIRTH,103),D.DESIG_NAME,(CASE WHEN BM.BRANCH_ADDRESS = '' THEN C.CMP_ADDRESS ELSE BM.BRANCH_ADDRESS END) AS CMP_ADDRESS
				,@STATE_NAME 
	FROM 		T0080_EMP_MASTER E WITH (NOLOCK) INNER JOIN
						(SELECT I.EMP_ID,I.DESIG_ID,I.BRANCH_ID
						 FROM T0095_INCREMENT I WITH (NOLOCK) INNER JOIN 
							(SELECT MAX(INCREMENT_ID) AS INCREMENT_ID , EMP_ID 
							 FROM T0095_INCREMENT WITH (NOLOCK) 
							 WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @COMPANY_ID
							 GROUP BY EMP_ID  ) QRY ON
						I.EMP_ID = QRY.EMP_ID	AND I.INCREMENT_ID = QRY.INCREMENT_ID )INC_QRY ON 
				E.EMP_ID = INC_QRY.EMP_ID INNER JOIN
				#EMP_CONS EC ON EC.EMP_ID = E.EMP_ID INNER JOIN
				T0010_COMPANY_MASTER C WITH (NOLOCK) ON C.CMP_ID = E.CMP_ID INNER JOIN
				T0030_BRANCH_MASTER BM WITH (NOLOCK) ON BM.BRANCH_ID = INC_QRY.BRANCH_ID LEFT JOIN
				T0040_DESIGNATION_MASTER D WITH (NOLOCK) ON D.DESIG_ID = INC_QRY.DESIG_ID
				
				
	--------------------------------------LEAVE DETAILS----------------------------------------
	
			DECLARE @LEAVE_ID AS NUMERIC
			DECLARE @COUNT NUMERIC
			DECLARE  @TEMP_DATE DATETIME
			DECLARE @EMP_ID_CUR AS NUMERIC
			
			
	
		/*CASUAL LEAVE*/
	SELECT @LEAVE_ID = LEAVE_ID FROM T0040_LEAVE_MASTER WITH (NOLOCK)
				WHERE CMP_ID = @COMPANY_ID AND (ISNULL(LEAVE_NAME,'') LIKE '%CASUAL%' OR ISNULL(LEAVE_CODE,'') LIKE '%CL%')
	
				
				UPDATE 	CQ
				SET CQ.LEAVE_AVAILED_CL = Q.LEAVE_AVAILED_CL
				FROM #CROSSTAB_FORMQ CQ INNER JOIN 
				(
				SELECT  SUM(LEAVE_USED)AS LEAVE_AVAILED_CL,EC.EMP_ID
				FROM    T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN
						#EMP_CONS EC ON EC.EMP_ID = LT.EMP_ID														
				WHERE   CMP_ID = @COMPANY_ID AND FOR_DATE > = @FROM_DATE AND FOR_DATE <= @TO_DATE  AND LEAVE_ID = @LEAVE_ID 
				GROUP BY  EC.EMP_ID
				)Q ON Q.EMP_ID = CQ.EMP_ID
				
										
				UPDATE 	CQ
				SET CQ.LEAVE_CREDIT_CL = Q3.LEAVE_OPENING
				FROM #CROSSTAB_FORMQ CQ INNER JOIN 
				(
					SELECT (L1.LEAVE_OPENING + ISNULL(Q2.LEAVE_CREDIT,0)) AS LEAVE_OPENING,L1.EMP_ID,L1.LEAVE_ID 
							FROM T0140_LEAVE_TRANSACTION L1 WITH (NOLOCK) INNER JOIN 
								( SELECT MAX(FOR_DATE)AS FOR_DATE,LT.EMP_ID,LT.LEAVE_ID 
								  FROM T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN
										#EMP_CONS EC ON EC.EMP_ID = LT.EMP_ID 						
								  WHERE	CMP_ID = @COMPANY_ID AND FOR_DATE < = @FROM_DATE AND LEAVE_ID = @LEAVE_ID 
								  GROUP BY	LT.EMP_ID,LT.LEAVE_ID
								 )Q ON Q.EMP_ID = L1.EMP_ID AND Q.LEAVE_ID = L1.LEAVE_ID AND L1.FOR_DATE = Q.FOR_DATE
								 LEFT JOIN
										(
											SELECT SUM(LT2.LEAVE_CREDIT) AS LEAVE_CREDIT,EMP_ID
											FROM T0140_LEAVE_TRANSACTION LT2 WITH (NOLOCK)
											WHERE	CMP_ID = @COMPANY_ID AND FOR_DATE > = @FROM_DATE AND FOR_DATE < = @TO_DATE AND LEAVE_ID = @LEAVE_ID
											GROUP BY LT2.EMP_ID
										)Q2 ON Q2.EMP_ID = Q.EMP_ID												 
				)Q3 ON Q3.EMP_ID = CQ.EMP_ID 
				
				UPDATE 	CQ
				SET CQ.LEAVE_BALANCE_CL = Q2.LEAVE_CLOSING
				FROM #CROSSTAB_FORMQ CQ INNER JOIN 
				(
					SELECT LEAVE_CLOSING,L1.EMP_ID,L1.LEAVE_ID
							FROM T0140_LEAVE_TRANSACTION L1 WITH (NOLOCK) INNER JOIN
								 ( SELECT MAX(FOR_DATE)AS FOR_DATE,LT.EMP_ID,LT.LEAVE_ID
								   FROM T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN
										#EMP_CONS EC ON EC.EMP_ID = LT.EMP_ID
								   WHERE	CMP_ID = @COMPANY_ID AND FOR_DATE < = @TO_DATE AND LEAVE_ID = @LEAVE_ID 
								   GROUP BY	LT.EMP_ID,LT.LEAVE_ID
								  )Q ON Q.EMP_ID = L1.EMP_ID AND Q.LEAVE_ID = L1.LEAVE_ID	AND L1.FOR_DATE = Q.FOR_DATE		
				)Q2 ON Q2.EMP_ID = CQ.EMP_ID 
	
	
	
		/*SICK LEAVE*/
				
				SELECT @LEAVE_ID = LEAVE_ID FROM T0040_LEAVE_MASTER WITH (NOLOCK)
				WHERE CMP_ID = @COMPANY_ID AND (ISNULL(LEAVE_NAME,'') LIKE '%SICK%' OR ISNULL(LEAVE_CODE,'') LIKE '%SL%' OR ISNULL(LEAVE_NAME,'') LIKE '%MEDICAL%')
	
				UPDATE 	CQ
				SET CQ.LEAVE_AVAILED_SL = Q.LEAVE_AVAILED_SL
				FROM #CROSSTAB_FORMQ CQ INNER JOIN 
				(
				SELECT  SUM(LEAVE_USED)AS LEAVE_AVAILED_SL,EC.EMP_ID
				FROM    T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN
						#EMP_CONS EC ON EC.EMP_ID = LT.EMP_ID														
				WHERE   CMP_ID = @COMPANY_ID AND FOR_DATE > = @FROM_DATE AND FOR_DATE <= @TO_DATE  AND LEAVE_ID = @LEAVE_ID 
				GROUP BY  EC.EMP_ID
				)Q ON Q.EMP_ID = CQ.EMP_ID									
											
				UPDATE 	CQ
				SET CQ.LEAVE_CREDIT_SL = Q3.LEAVE_OPENING
				FROM #CROSSTAB_FORMQ CQ INNER JOIN 
				(
					SELECT (L1.LEAVE_OPENING + ISNULL(Q2.LEAVE_CREDIT,0)) AS LEAVE_OPENING,L1.EMP_ID,L1.LEAVE_ID 
							FROM T0140_LEAVE_TRANSACTION L1 WITH (NOLOCK) INNER JOIN 
								( SELECT MAX(FOR_DATE)AS FOR_DATE,LT.EMP_ID,LT.LEAVE_ID 
								  FROM T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN
										#EMP_CONS EC ON EC.EMP_ID = LT.EMP_ID 						
								  WHERE	CMP_ID = @COMPANY_ID AND FOR_DATE < = @FROM_DATE AND LEAVE_ID = @LEAVE_ID 
								  GROUP BY	LT.EMP_ID,LT.LEAVE_ID
								 )Q ON Q.EMP_ID = L1.EMP_ID AND Q.LEAVE_ID = L1.LEAVE_ID AND L1.FOR_DATE = Q.FOR_DATE
								 LEFT JOIN
										(
											SELECT SUM(LT2.LEAVE_CREDIT) AS LEAVE_CREDIT,EMP_ID
											FROM T0140_LEAVE_TRANSACTION LT2 WITH (NOLOCK)
											WHERE	CMP_ID = @COMPANY_ID AND FOR_DATE > = @FROM_DATE AND FOR_DATE < = @TO_DATE AND LEAVE_ID = @LEAVE_ID
											GROUP BY LT2.EMP_ID
										)Q2 ON Q2.EMP_ID = Q.EMP_ID										 
				)Q3 ON Q3.EMP_ID = CQ.EMP_ID 
				
				
				UPDATE 	EL
				SET EL.LEAVE_BALANCE_SL = Q2.LEAVE_CLOSING
				FROM #CROSSTAB_FORMQ EL INNER JOIN 
				(
					SELECT LEAVE_CLOSING,L1.EMP_ID,L1.LEAVE_ID
							FROM T0140_LEAVE_TRANSACTION L1 WITH (NOLOCK) INNER JOIN
								 ( SELECT MAX(FOR_DATE)AS FOR_DATE,LT.EMP_ID,LT.LEAVE_ID
								   FROM T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN
										#EMP_CONS EC ON EC.EMP_ID = LT.EMP_ID
								   WHERE	CMP_ID = @COMPANY_ID AND FOR_DATE < = @TO_DATE AND LEAVE_ID = @LEAVE_ID 
								   GROUP BY	LT.EMP_ID,LT.LEAVE_ID
								  )Q ON Q.EMP_ID = L1.EMP_ID AND Q.LEAVE_ID = L1.LEAVE_ID	AND L1.FOR_DATE = Q.FOR_DATE		
				)Q2 ON Q2.EMP_ID = EL.EMP_ID 
		
		/*HOLIDAY WITH WAGES*/
		
				SELECT @LEAVE_ID = LEAVE_ID FROM T0040_LEAVE_MASTER WITH (NOLOCK)
				WHERE CMP_ID = @COMPANY_ID AND (ISNULL(LEAVE_NAME,'') LIKE '%PRIVILEGE%' OR ISNULL(LEAVE_CODE,'') LIKE 'PL')
				
				PRINT @LEAVE_ID
				
				UPDATE 	CQ
				SET CQ.LEAVE_AVAILED_HOLIDAY_WITH_WAGES = Q.LEAVE_AVAILED_HOLIDAY_WITH_WAGES
				FROM #CROSSTAB_FORMQ CQ INNER JOIN 
				(
				SELECT  SUM(LEAVE_USED)AS LEAVE_AVAILED_HOLIDAY_WITH_WAGES,EC.EMP_ID
				FROM    T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN
						#EMP_CONS EC ON EC.EMP_ID = LT.EMP_ID														
				WHERE   CMP_ID = @COMPANY_ID AND FOR_DATE > = @FROM_DATE AND FOR_DATE <= @TO_DATE  AND LEAVE_ID = @LEAVE_ID 
				GROUP BY  EC.EMP_ID
				)Q ON Q.EMP_ID = CQ.EMP_ID									
											
				UPDATE 	CQ
				SET CQ.LEAVE_CREDIT_HOLIDAY_WITH_WAGES = Q3.LEAVE_OPENING
				FROM #CROSSTAB_FORMQ CQ INNER JOIN 
				(
					SELECT (L1.LEAVE_OPENING + ISNULL(Q2.LEAVE_CREDIT,0)) AS LEAVE_OPENING,L1.EMP_ID,L1.LEAVE_ID 
							FROM T0140_LEAVE_TRANSACTION L1 WITH (NOLOCK) INNER JOIN 
								( SELECT MAX(FOR_DATE)AS FOR_DATE,LT.EMP_ID,LT.LEAVE_ID 
								  FROM T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN
										#EMP_CONS EC ON EC.EMP_ID = LT.EMP_ID 						
								  WHERE	CMP_ID = @COMPANY_ID AND FOR_DATE < = @FROM_DATE AND LEAVE_ID = @LEAVE_ID 
								  GROUP BY	LT.EMP_ID,LT.LEAVE_ID
								 )Q ON Q.EMP_ID = L1.EMP_ID AND Q.LEAVE_ID = L1.LEAVE_ID AND L1.FOR_DATE = Q.FOR_DATE
								 LEFT JOIN
										(
											SELECT SUM(ISNULL(LT2.LEAVE_CREDIT,0)) AS LEAVE_CREDIT,EMP_ID
											FROM T0140_LEAVE_TRANSACTION LT2 WITH (NOLOCK)
											WHERE	CMP_ID = @COMPANY_ID AND FOR_DATE > = @FROM_DATE AND FOR_DATE <= @TO_DATE AND LEAVE_ID = @LEAVE_ID
											GROUP BY LT2.EMP_ID
										)Q2 ON Q2.EMP_ID = Q.EMP_ID				
				)Q3 ON Q3.EMP_ID = CQ.EMP_ID 
				
				UPDATE 	CQ
				SET CQ.LEAVE_BALANCE_HOLIDAY_WITH_WAGES = Q2.LEAVE_CLOSING
				FROM #CROSSTAB_FORMQ CQ INNER JOIN 
				(
							SELECT LEAVE_CLOSING,L1.EMP_ID,L1.LEAVE_ID
							FROM T0140_LEAVE_TRANSACTION L1 WITH (NOLOCK) INNER JOIN
								 ( SELECT MAX(FOR_DATE)AS FOR_DATE,LT.EMP_ID,LT.LEAVE_ID
								   FROM T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN
										#EMP_CONS EC ON EC.EMP_ID = LT.EMP_ID
								   WHERE	CMP_ID = @COMPANY_ID AND FOR_DATE < = @TO_DATE AND LEAVE_ID = @LEAVE_ID 
								   GROUP BY	LT.EMP_ID,LT.LEAVE_ID
								  )Q ON Q.EMP_ID = L1.EMP_ID AND Q.LEAVE_ID = L1.LEAVE_ID	AND L1.FOR_DATE = Q.FOR_DATE		
				)Q2 ON Q2.EMP_ID = CQ.EMP_ID 
						 
						 
	---------------------------------ENDED-------------------------------------------------------
	----------------------------START GETTING WORKING HOURS--------------------------------------
	DECLARE @DURATION AS VARCHAR(MAX)
	DECLARE @FOR_DATE AS VARCHAR(10)
	DECLARE @INSERT_WEEKDAY VARCHAR(MAX)
	DECLARE @VALUE_WEEKDAY VARCHAR(MAX)
	DECLARE @WEEKDAY VARCHAR(2)
	DECLARE @TEST AS VARCHAR(4000)	
	DECLARE @CODE AS VARCHAR(20)
	DECLARE @QRY AS VARCHAR(4000)
	DECLARE	@FORDATE AS NUMERIC(18,0)
	
	DECLARE @MONTH  AS VARCHAR(5)
	DECLARE @YEAR	AS VARCHAR(5)
	
	
	
	SET @MONTH = MONTH(@FROM_DATE)
	SET @YEAR = YEAR(@FROM_DATE)
	
	SET @INSERT_WEEKDAY = ''
	 SET @VALUE_WEEKDAY = ''
	
					SET @FORDATE = 1	
					WHILE @FORDATE <= 31
						BEGIN								
								SET @FOR_DATE =  @FORDATE
								
								SET @TEST = 'ALTER TABLE  #CROSSTAB_FORMQ ADD [' + @FOR_DATE + '] VARCHAR(10) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS DEFAULT ''00:00'' WITH VALUES'
								EXEC(@TEST) 
								--PRINT @TEST              				
								SET @TEST=''
								
								SET @FORDATE = @FORDATE + 1
						END
				
				
						
	----------------------------------------ENDED----------------------------------------------------
	SET @TEST = 'ALTER TABLE  #CROSSTAB_FORMQ  ADD TOTAL_HOURS_OF_OVERTIME_WORKED VARCHAR(20) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS'
	EXEC(@TEST)
	
	SET @TEST = 'ALTER TABLE  #CROSSTAB_FORMQ ADD TOTAL_HOURS_OF_WORK_DONE VARCHAR(20) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS'
	EXEC(@TEST)
	
	SET @TEST = 'ALTER TABLE  #CROSSTAB_FORMQ ADD TOTAL_MATERNITY_LEAVE_AVAILED NUMERIC(18,0)'
	EXEC(@TEST)
	
	
	
	SELECT @LEAVE_ID = LEAVE_ID FROM T0040_LEAVE_MASTER WITH (NOLOCK)
				WHERE CMP_ID = @COMPANY_ID AND (ISNULL(LEAVE_NAME,'') LIKE '%MATERNITY%' OR ISNULL(LEAVE_CODE,'') LIKE 'MTL')
				PRINT @LEAVE_ID
				UPDATE 	CQ
				SET CQ.TOTAL_MATERNITY_LEAVE_AVAILED = Q.TOTAL_MATERNITY_LEAVE_AVAILED
				FROM #CROSSTAB_FORMQ CQ LEFT JOIN 
				(
				SELECT  SUM(LEAVE_USED)AS TOTAL_MATERNITY_LEAVE_AVAILED,EC.EMP_ID
				FROM    T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN
						#EMP_CONS EC ON EC.EMP_ID = LT.EMP_ID														
				WHERE   CMP_ID = @COMPANY_ID AND FOR_DATE > = @FROM_DATE AND FOR_DATE <= @TO_DATE  AND LEAVE_ID = @LEAVE_ID --AND LT.EMP_ID = @EMP_ID
				GROUP BY  EC.EMP_ID
				)Q ON Q.EMP_ID = CQ.EMP_ID
	
		
			
	CREATE TABLE #DATA         
		(         
		   EMP_ID   NUMERIC ,         
		   FOR_DATE DATETIME,        
		   DURATION_IN_SEC NUMERIC,        
		   SHIFT_ID NUMERIC ,        
		   SHIFT_TYPE NUMERIC ,        
		   EMP_OT  NUMERIC ,        
		   EMP_OT_MIN_LIMIT NUMERIC,        
		   EMP_OT_MAX_LIMIT NUMERIC,        
		   P_DAYS  NUMERIC(12,3) DEFAULT 0,        
		   OT_SEC  NUMERIC DEFAULT 0  ,
		   IN_TIME DATETIME,
		   SHIFT_START_TIME DATETIME,
		   OT_START_TIME NUMERIC DEFAULT 0,
		   SHIFT_CHANGE TINYINT DEFAULT 0,
		   FLAG INT DEFAULT 0,
		   WEEKOFF_OT_SEC  NUMERIC DEFAULT 0,
		   HOLIDAY_OT_SEC  NUMERIC DEFAULT 0,
		   CHK_BY_SUPERIOR NUMERIC DEFAULT 0,
		   IO_TRAN_ID	   NUMERIC DEFAULT 0, -- IO_TRAN_ID IS USED FOR IS_CMP_PURPOSE (T0150_EMP_INOUT)
		   OUT_TIME DATETIME,
		   SHIFT_END_TIME DATETIME,			--ANKIT 16112013
		   OT_END_TIME NUMERIC DEFAULT 0,	--ANKIT 16112013
		   WORKING_HRS_ST_TIME TINYINT DEFAULT 0, --HARDIK 14/02/2014
		   WORKING_HRS_END_TIME TINYINT DEFAULT 0, --HARDIK 14/02/2014
		   GATEPASS_DEDUCT_DAYS NUMERIC(18,2) DEFAULT 0 -- ADD BY GADRIWALA MUSLIM 05012014
	   )    
	   
	  
	DECLARE @OT_HOURS	AS NUMERIC(18,2)
	EXEC SP_CALCULATE_PRESENT_DAYS @COMPANY_ID,@FROM_DATE,@TO_DATE,@BRANCH_ID,@CAT_ID,@GRADE_ID,@TYPE_ID,@DEPT_ID,@DESIG_ID,@EMP_ID,@CONSTRAINT,4
	
	UPDATE	C
	SET		C.TOTAL_HOURS_OF_WORK_DONE = Q.TOTAL_HOURS_OF_WORK_DONE
	FROM #CROSSTAB_FORMQ C INNER JOIN
	(
		SELECT		CAST(DBO.F_RETURN_HOURS((SUM(DURATION_IN_SEC))) AS VARCHAR(20)) AS TOTAL_HOURS_OF_WORK_DONE,EMP_ID					
		FROM 		#DATA 
		GROUP BY EMP_ID
	)Q ON Q.EMP_ID = C.EMP_ID
	
			
	UPDATE	C
	SET		C.TOTAL_HOURS_OF_OVERTIME_WORKED = Q.TOTAL_HOURS_OF_OVERTIME_WORKED
	FROM #CROSSTAB_FORMQ C INNER JOIN
	(
		SELECT		CAST(DBO.F_RETURN_HOURS((SUM(OT_SEC))) AS VARCHAR(20)) AS TOTAL_HOURS_OF_OVERTIME_WORKED,EMP_ID
		FROM 		#DATA 
		GROUP BY  	EMP_ID
	)Q ON Q.EMP_ID = C.EMP_ID				
	
	
	SET @FOR_DATE = 1
				
				WHILE @FOR_DATE <= 31
					BEGIN
													
						
						SET @INSERT_WEEKDAY = '[' + @FOR_DATE + ']'
							
																									
						SET @QRY = 'UPDATE	C 
									SET	' + @INSERT_WEEKDAY + ' =  Q.DURATION
									FROM	#CROSSTAB_FORMQ C INNER JOIN	
											(
											SELECT	CAST(DBO.F_RETURN_HOURS(DURATION_IN_SEC)AS VARCHAR(20)) AS DURATION,EMP_ID
											FROM	#DATA 	
											WHERE	DATEPART(DAY,FOR_DATE) = ' + @FOR_DATE  + '	
													AND MONTH(FOR_DATE) = ' + @MONTH + '
													AND YEAR(FOR_DATE) = ' + @YEAR + '						
											)Q ON Q.EMP_ID = C.EMP_ID'
					
						PRINT @QRY
						EXEC (@QRY)	
						SET		@INSERT_WEEKDAY = ''
						SET @FOR_DATE = @FOR_DATE + 1
					END
	UPDATE #CROSSTAB_FORMQ
	SET EMP_CODE = '="' + EMP_CODE + '"'
	
	ALTER TABLE  #CROSSTAB_FORMQ DROP COLUMN LEAVE_ID
	ALTER TABLE  #CROSSTAB_FORMQ DROP COLUMN EMP_ID
	ALTER TABLE  #CROSSTAB_FORMQ DROP COLUMN CMP_ID
	
	SELECT ROW_NUMBER() OVER(ORDER BY EMP_CODE  ASC) AS SR_NO ,* FROM #CROSSTAB_FORMQ
	
	
	
	DROP TABLE #CROSSTAB_FORMQ
	



