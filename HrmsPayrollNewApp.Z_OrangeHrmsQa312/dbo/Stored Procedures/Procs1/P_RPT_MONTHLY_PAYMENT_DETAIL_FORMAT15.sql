
---25/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[P_RPT_MONTHLY_PAYMENT_DETAIL_FORMAT15]  
  @CMP_ID   NUMERIC  
 ,@FROM_DATE  DATETIME  
 ,@TO_DATE   DATETIME  
 ,@BRANCH_ID  NUMERIC  
 ,@CAT_ID   NUMERIC   
 ,@GRD_ID   NUMERIC  
 ,@TYPE_ID   NUMERIC  
 ,@DEPT_ID   NUMERIC  
 ,@Desig_ID   numeric  
 ,@Emp_ID   numeric  
 ,@constraint  varchar(max)  
 ,@Sal_Type  numeric = 0     
 ,@Salary_Cycle_id numeric = NULL
 ,@Segment_Id  numeric = 0		 
 ,@Vertical_Id numeric = 0		 
 ,@SubVertical_Id numeric = 0	 
 ,@SubBranch_Id numeric = 0 	 
 ,@Status  Varchar   = 'Done'
AS  
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON
	  
	  IF @BRANCH_ID = 0    
	  SET @BRANCH_ID = NULL  
    
	 IF @CAT_ID = 0    
	 SET @CAT_ID = NULL  
	  
	 IF @GRD_ID = 0    
	 SET @GRD_ID = NULL  
	  
	 IF @TYPE_ID = 0    
	 SET @TYPE_ID = NULL  
	  
	 IF @DEPT_ID = 0    
	 SET @DEPT_ID = NULL  
	  
	 IF @DESIG_ID = 0    
	 SET @DESIG_ID = NULL  
	  
	 IF @EMP_ID = 0    
	 SET @EMP_ID = NULL  
	    
	  
	IF @SALARY_CYCLE_ID = 0	
	SET @SALARY_CYCLE_ID = NULL	
	IF @SEGMENT_ID = 0		
	SET @SEGMENT_ID = NULL
	IF @VERTICAL_ID = 0		
	SET @VERTICAL_ID = NULL
	IF @SUBVERTICAL_ID = 0	
	SET @SUBVERTICAL_ID = NULL	
	IF @SUBBRANCH_ID = 0	
	SET @SUBBRANCH_ID = NULL	
	
		CREATE TABLE #EMP_CONS 
		 (      
		   EMP_ID NUMERIC ,     
		   BRANCH_ID NUMERIC,
		   INCREMENT_ID NUMERIC    
		 )    
   
		EXEC SP_RPT_FILL_EMP_CONS   @CMP_ID,@FROM_DATE,@TO_DATE,@BRANCH_ID,@CAT_ID,@GRD_ID,@TYPE_ID,@DEPT_ID,@DESIG_ID ,@EMP_ID ,
								@CONSTRAINT ,@SAL_TYPE ,@SALARY_CYCLE_ID ,@SEGMENT_ID ,@VERTICAL_ID ,@SUBVERTICAL_ID ,@SUBBRANCH_ID 

	
		CREATE table #Pay_slip         
		  (   
			Emp_Id	 NUMERIC,
			NET_AMT	 NUMERIC,
			PROCESS_TYPE VARCHAR(30),
			PROCESS_TYPE_ID NUMERIC,
			YEAR_TO_DATE  NUMERIC--,
			--PAYMENT_PROCESS_ID NUMERIC
		  )
	
		 DECLARE @F_STARTDATE DATETIME
		 DECLARE @F_ENDDATE DATETIME
		 Declare @Sal_St_Date   Datetime    
		 DECLARE @SAL_END_DATE   DATETIME  
		 DECLARE @IS_ROUNDING AS NUMERIC(1,0)
		 DECLARE @ROUND				NUMERIC  
		 SET @ROUND = 0
  
		DECLARE @MANUAL_SALARY_PERIOD AS NUMERIC(18,0)
  
		IF @BRANCH_ID IS NULL
			BEGIN 
				SELECT TOP 1 @SAL_ST_DATE  = SAL_ST_DATE ,@MANUAL_SALARY_PERIOD= ISNULL(MANUAL_SALARY_PERIOD ,0),
				@IS_ROUNDING = ISNULL(AD_ROUNDING,1) 
				  FROM T0040_GENERAL_SETTING WITH (NOLOCK) WHERE CMP_ID = @CMP_ID    
				  AND FOR_DATE = ( SELECT MAX(FOR_DATE) FROM T0040_GENERAL_SETTING WITH (NOLOCK) WHERE FOR_DATE <=@FROM_DATE AND CMP_ID = @CMP_ID)    
			END
		ELSE
			BEGIN
				SELECT @SAL_ST_DATE  =SAL_ST_DATE ,@MANUAL_SALARY_PERIOD= ISNULL(MANUAL_SALARY_PERIOD ,0),
				@IS_ROUNDING = ISNULL(AD_ROUNDING,1) 
				  FROM T0040_GENERAL_SETTING WITH (NOLOCK) WHERE CMP_ID = @CMP_ID AND BRANCH_ID = @BRANCH_ID    
				  AND FOR_DATE = ( SELECT MAX(FOR_DATE) FROM T0040_GENERAL_SETTING WITH (NOLOCK) WHERE FOR_DATE <=@FROM_DATE AND BRANCH_ID = @BRANCH_ID AND CMP_ID = @CMP_ID)    
			END  
		
		IF @SALARY_CYCLE_ID > 0
			BEGIN
				SELECT @SAL_ST_DATE = SALARY_ST_DATE FROM T0040_SALARY_CYCLE_MASTER WITH (NOLOCK) WHERE TRAN_ID = @SALARY_CYCLE_ID
			END  
       
		 IF ISNULL(@SAL_ST_DATE,'') = ''    
			BEGIN    
			   SET @FROM_DATE  = @FROM_DATE     
			   SET @TO_DATE = @TO_DATE    
			END     
		 ELSE IF DAY(@SAL_ST_DATE) =1 
			BEGIN    
			   SET @FROM_DATE  = @FROM_DATE     
			   SET @TO_DATE = @TO_DATE    
			END     
		 ELSE IF @SAL_ST_DATE <> ''  AND DAY(@SAL_ST_DATE) > 1   
			BEGIN    
		    
		   IF @MANUAL_SALARY_PERIOD =0 
				BEGIN
				   SET @SAL_ST_DATE =  CAST(CAST(DAY(@SAL_ST_DATE)AS VARCHAR(5)) + '-' + CAST(DATENAME(MM,DATEADD(M,-1,@FROM_DATE)) AS VARCHAR(10)) + '-' +  CAST(YEAR(DATEADD(M,-1,@FROM_DATE) )AS VARCHAR(10)) AS SMALLDATETIME)    
				   SET @SAL_END_DATE = DATEADD(D,-1,DATEADD(M,1,@SAL_ST_DATE))
				   SET @FROM_DATE = @SAL_ST_DATE
				   SET @TO_DATE = @SAL_END_DATE  
				 END
			ELSE
				BEGIN
					SELECT @SAL_ST_DATE=FROM_DATE,@SAL_END_DATE=END_DATE FROM SALARY_PERIOD WHERE MONTH= MONTH(@FROM_DATE) AND YEAR=YEAR(@FROM_DATE)							   
					 SET @FROM_DATE = @SAL_ST_DATE
				   SET @TO_DATE = @SAL_END_DATE    
				END			
		END 
	
	
	
			SET @F_STARTDATE = DATEADD(DD,0, DATEDIFF(DD,0, DATEADD( MM, -(((12 + DATEPART(M, @TO_DATE)) - 4)%12), @TO_DATE ) - DATEPART(D,DATEADD( MM, -(((12 + DATEPART(M, @TO_DATE)) - 4)%12),@TO_DATE ))+1 ) )

			IF DAY(@SAL_ST_DATE) <> 1
				BEGIN
					SET @F_STARTDATE =  CAST(CAST(DAY(@SAL_ST_DATE)AS VARCHAR(5)) + '-' + CAST(DATENAME(MM,DATEADD(M,-1,@F_STARTDATE)) AS VARCHAR(10)) + '-' +  CAST(YEAR(DATEADD(M,-1,@F_STARTDATE) )AS VARCHAR(10)) AS SMALLDATETIME)    
				END
	
			SET @F_ENDDATE = DATEADD(SS,-1,DATEADD(MM,12,@F_STARTDATE))
	
			
			INSERT INTO #PAY_SLIP(EMP_ID,NET_AMT,PROCESS_TYPE,PROCESS_TYPE_ID,YEAR_TO_DATE)--,PAYMENT_PROCESS_ID)
			SELECT	EC.EMP_ID,0,			
					MS.PROCESS_TYPE,MS.PROCESS_TYPE_ID,ISNULL(SUM(MS.NET_AMOUNT),0) AS YEAR_TO_DATE--,
					--MS.PAYMENT_PROCESS_ID		   
			FROM	MONTHLY_EMP_BANK_PAYMENT MS WITH (NOLOCK) INNER JOIN   			  
					#EMP_CONS EC ON MS.EMP_ID = EC.EMP_ID 	
			WHERE	MS.CMP_ID = @CMP_ID   	
					AND MS.FOR_DATE >= @F_STARTDATE AND MS.FOR_DATE <= @TO_DATE 	
			GROUP BY MS.PROCESS_TYPE_ID,EC.EMP_ID,MS.PROCESS_TYPE--,PAYMENT_PROCESS_ID
			
			
			UPDATE #PAY_SLIP 
			SET	   NET_AMT = QRY.NET_AMT
			FROM	(SELECT	EC.EMP_ID,PROCESS_TYPE_ID,ISNULL(SUM(MS.NET_AMOUNT),0) AS NET_AMT,PROCESS_TYPE
					 FROM	MONTHLY_EMP_BANK_PAYMENT MS WITH (NOLOCK) INNER JOIN   			  
							#EMP_CONS EC ON MS.EMP_ID = EC.EMP_ID 	
					 WHERE	MS.CMP_ID = @CMP_ID   	
							AND MS.FOR_DATE >= @FROM_DATE AND MS.FOR_DATE <= @TO_DATE 	
					 GROUP BY MS.PROCESS_TYPE_ID,EC.EMP_ID,PROCESS_TYPE)QRY LEFT OUTER JOIN 
					 #PAY_SLIP P 
			ON QRY.EMP_ID = P.EMP_ID AND QRY.PROCESS_TYPE_ID = P.PROCESS_TYPE_ID
					AND P.PROCESS_TYPE = QRY.PROCESS_TYPE
								
			
			--UPDATE #PAY_SLIP 
			--SET	   YEAR_TO_DATE = QRY.YEAR_TO_DATE
			--FROM	(SELECT	EC.EMP_ID,PROCESS_TYPE_ID,ISNULL(SUM(MS.NET_AMOUNT),0) AS YEAR_TO_DATE
			--		 FROM	MONTHLY_EMP_BANK_PAYMENT MS INNER JOIN   			  
			--				#EMP_CONS EC ON MS.EMP_ID = EC.EMP_ID 	
			--		 WHERE	MS.CMP_ID = @CMP_ID   	
			--				AND MS.FOR_DATE >= @F_STARTDATE AND MS.FOR_DATE <= @TO_DATE 	
			--		 GROUP BY MS.PROCESS_TYPE_ID,EC.EMP_ID)QRY LEFT OUTER JOIN #PAY_SLIP P 
			--ON QRY.EMP_ID = P.EMP_ID AND QRY.PROCESS_TYPE_ID = P.PROCESS_TYPE_ID
			
	
	SELECT * FROM #PAY_SLIP
	ORDER BY EMP_ID
	
	
RETURN
