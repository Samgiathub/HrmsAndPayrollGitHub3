
---28/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[Get_BulkParticipants_InOut_list]
	 @training_apr_id	numeric(18,0)
	,@cmp_id		numeric(18,0)
AS
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON

DECLARE @TEMPTABLE TABLE -- Changed by Gadriwala Muslim 09122016
(
	STDATE DATETIME
   ,ENDATE DATETIME
   ,STTIME VARCHAR(25)
   ,ENDTIME VARCHAR(25)
)
BEGIN

--with test (startdate, enddate) as
--(	select training_date,training_end_date from T0120_HRMS_TRAINING_APPROVAL where cmp_id = @cmp_id and training_apr_id=@training_apr_id
--union all
--select dateadd(day, 1, x.startdate), x.enddate 
--from T0120_HRMS_TRAINING_APPROVAL 
--cross join test x where x.startdate < x.enddate
--and cmp_id = @cmp_id and training_apr_id=@training_apr_id 
--)

-- Changed by Gadriwala Muslim 09122016

--WITH TEST (ST_DATE, END_DATE,STTIME,ENDTIME) AS
--(	
--	SELECT FROM_DATE,TO_DATE,HTS.FROM_TIME,HTS.TO_TIME FROM T0120_HRMS_TRAINING_SCHEDULE HTS INNER JOIN  -- Changed by Gadriwala Muslim 09122016
--	T0120_HRMS_TRAINING_APPROVAL HTA ON HTS.TRAINING_APP_ID = HTA.TRAINING_APP_ID
--	WHERE HTA.CMP_ID = @CMP_ID AND TRAINING_APR_ID=@TRAINING_APR_ID
--	UNION ALL
--	SELECT DATEADD(DAY, 1, X.ST_DATE), X.END_DATE,HTS.FROM_TIME,HTS.TO_TIME
--	FROM T0120_HRMS_TRAINING_SCHEDULE HTS INNER JOIN
--	T0120_HRMS_TRAINING_APPROVAL HTA ON HTS.TRAINING_APP_ID = HTA.TRAINING_APP_ID
--	CROSS JOIN TEST X WHERE X.ST_DATE < X.END_DATE
--	AND HTA.CMP_ID = @CMP_ID AND TRAINING_APR_ID=@TRAINING_APR_ID 
	
--)

--INSERT INTO @TEMPTABLE 
--SELECT * FROM Test
--OPTION (MAXRECURSION 0);

DECLARE @MIN_DATE DATETIME
DECLARE @MAX_DATE DATETIME

SELECT	@MIN_DATE = MIN(FROM_DATE),@MAX_DATE = MAX(TO_DATE)
FROM	T0120_HRMS_TRAINING_SCHEDULE HTS WITH (NOLOCK)
		INNER JOIN T0120_HRMS_TRAINING_APPROVAL HTA WITH (NOLOCK) ON HTS.TRAINING_APP_ID = HTA.TRAINING_APP_ID -- Changed by Gadriwala Muslim 09122016	
WHERE	HTA.CMP_ID = @CMP_ID AND TRAINING_APR_ID=@TRAINING_APR_ID

SELECT	ROW_ID, DATEADD(D, ROW_ID-1, @MIN_DATE) AS FOR_DATE
INTO	#T_DATES
FROM	(SELECT	TOP 365 ROW_NUMBER() OVER(ORDER BY OBJECT_ID) AS ROW_ID 
		 FROM	SYS.tables) T
WHERE	ROW_ID < (DATEDIFF(D, @MIN_DATE, @MAX_DATE) +2 )
		 
			
INSERT INTO @TEMPTABLE 
SELECT	FOR_DATE, TO_DATE, HTS.FROM_TIME,HTS.TO_TIME 
FROM	T0120_HRMS_TRAINING_SCHEDULE HTS WITH (NOLOCK)
		INNER JOIN T0120_HRMS_TRAINING_APPROVAL HTA WITH (NOLOCK) ON HTS.TRAINING_APP_ID = HTA.TRAINING_APP_ID -- Changed by Gadriwala Muslim 09122016	
		CROSS APPLY (SELECT FOR_DATE FROM #T_DATES D WHERE D.FOR_DATE BETWEEN FROM_DATE AND TO_DATE) D
WHERE	HTA.CMP_ID = @CMP_ID AND TRAINING_APR_ID=@TRAINING_APR_ID
ORDER BY FROM_DATE, TO_DATE, FOR_DATE

DROP TABLE #T_DATES

--select * from @TEMPTABLE
DECLARE @STDATE DATETIME 
DECLARE @TODATE DATETIME
DECLARE @STTIME VARCHAR(25)
DECLARE @ENDTIME VARCHAR(25)
CREATE TABLE #FINAL
(
	 TRAN_ID		NUMERIC(18,0)
	,EMP_ID			NUMERIC(18,0)
	,EMP_FULL_NAME	VARCHAR(100)
	,ALPHA_EMP_CODE VARCHAR(100)
	,FOR_DATE		DATETIME
	,IN_DATE		DATETIME
	,IN_TIME		VARCHAR(50)
	,OUT_TIME		VARCHAR(50)
	,HOURS			VARCHAR(50)
	,TRAINING_APR_ID NUMERIC(18,0)
	,IP_ADDRESS		VARCHAR(50)
	,TRAINING_APP_ID NUMERIC(18,0)
	,TRAINING_ST_TIME VARCHAR(25)
	,TRAINING_END_TIME VARCHAR(25)
	
)	
	

	
DECLARE CUR CURSOR
FOR 
	SELECT * FROM @TEMPTABLE	
OPEN CUR
FETCH NEXT FROM CUR INTO @STDATE,@TODATE,@STTIME,@ENDTIME
WHILE @@FETCH_STATUS = 0
	BEGIN

		
		INSERT INTO #FINAL
		SELECT  TRAN_ID,T.EMP_ID,EM.EMP_FULL_NAME,EM.ALPHA_EMP_CODE,@STDATE,@STDATE ,				
			   RIGHT(CONVERT(CHAR(20),MIN(R.IN_TIME), 100), 8) AS IN_TIME
			   ,RIGHT(CONVERT(CHAR(20),MAX(R.OUT_TIME), 100),8) AS OUT_TIME
			   ,HOURS
			   ,R.TRAINING_APR_ID,IP_ADDRESS,T.TRAINING_APP_ID,@STTIME,@ENDTIME 
		FROM  T0130_HRMS_TRAINING_EMPLOYEE_DETAIL T WITH (NOLOCK) LEFT JOIN 
			  T0150_EMP_TRAINING_INOUT_RECORD R WITH (NOLOCK) ON R.EMP_ID = T.EMP_ID and R.For_date = @STDATE -- AND 
			  --(( dbo.F_GET_AMPM(R.IN_TIME) BETWEEN @STTIME AND @ENDTIME) OR (dbo.F_GET_AMPM(R.OUT_TIME)  BETWEEN @STTIME AND @ENDTIME))-- Changed by Gadriwala Muslim 09122016
			  INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON EM.EMP_ID = T.EMP_ID  
		WHERE T.CMP_ID =@CMP_ID AND (T.EMP_TRAN_STATUS=1 OR T.EMP_TRAN_STATUS=4) AND T.TRAINING_APR_ID=@TRAINING_APR_ID	
		GROUP BY TRAN_ID,T.EMP_ID,EM.EMP_FULL_NAME,EM.ALPHA_EMP_CODE,R.IN_TIME ,R.OUT_TIME,HOURS,R.TRAINING_APR_ID,IP_ADDRESS,TRAINING_APP_ID
		
		FETCH NEXT FROM CUR INTO @STDATE,@TODATE,@STTIME,@ENDTIME
	END
CLOSE CUR
DEALLOCATE CUR
	


SELECT  * FROM #FINAL ORDER BY IN_DATE,EMP_ID
--SELECT COUNT( DISTINCT EMP_ID) FROM #FINAL --ORDER BY EMP_ID,IN_DATE

DELETE @TEMPTABLE 
DROP TABLE #FINAL

END

