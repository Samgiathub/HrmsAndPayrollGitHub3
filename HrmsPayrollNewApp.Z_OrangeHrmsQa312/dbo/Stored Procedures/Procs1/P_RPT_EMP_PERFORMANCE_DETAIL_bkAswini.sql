




---28/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[P_RPT_EMP_PERFORMANCE_DETAIL_bkAswini]
      
 @FROM_DATE  DATETIME,      
 @TO_DATE  DATETIME ,      
 @BRANCH_ID  NUMERIC,   
 @Cmp_Id   NUMERIC,      
 @Cat_ID numeric, 
 @Grade_ID   NUMERIC  ,      
 @TYPE_ID  NUMERIC ,      
 @DEPT_ID  NUMERIC  ,      
 @DESIG_ID  NUMERIC ,      
 @EMP_ID   NUMERIC  ,      
 @CONSTRAINT  VARCHAR(MAX) = '',      
 @ORDER_BY	VARCHAR(30) = 'CODE'
 
AS 
   
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON
    
	DECLARE @QRY NVARCHAR(MAX)
    SET @From_Date = CONVERT(DateTime,CONVERT(Char(10), @From_Date, 103), 103);
	SET @To_Date= CONVERT(DateTime,CONVERT(Char(10), @To_Date, 103) + ' 23:59:59', 103);
	   
	   
    --IF DATEDIFF(D,@FROM_DATE,@TO_DATE)>31 
		--BEGIN
			--SET @TO_DATE=DATEADD(D,-1,DATEADD(MM,1,@FROM_DATE))				
		--END	
				
	
	
	CREATE TABLE #EMP_CONS 
	(      
		EMP_ID NUMERIC ,     
		BRANCH_ID NUMERIC,
		INCREMENT_ID NUMERIC    
	);
	

	CREATE NONCLUSTERED INDEX IX_EMP_CONS_EMPID ON #EMP_CONS (EMP_ID);

	EXEC SP_RPT_FILL_EMP_CONS  @Cmp_Id,@FROM_DATE,@TO_DATE,@BRANCH_ID,@CAT_ID,@Grade_ID,@TYPE_ID,@DEPT_ID,@DESIG_ID ,@EMP_ID ,@CONSTRAINT ,0 ,0 ,0,0,0,0,0,0,0,0,0,0
	
	
	DECLARE @cols varchar(max)

	DECLARE @colsSUM varchar(max)
	DECLARE @Query varchar(max)
	DECLARE @MAXSRNO AS NUMERIC(18,0)
	
	-- TOTAL SUM OF DATE WISE
	SELECT DISTINCT FOR_DATE INTO #SUM_TOTAL  FROM T0100_EMP_PERFORMANCE_DETAIL WITH (NOLOCK) WHERE FOR_DATE 
	BETWEEN @FROM_DATE AND @TO_DATE ORDER BY FOR_DATE
	 select @colsSUM = STUFF((SELECT ',sum(' + QUOTENAME(datename(mm, For_date) + '-' + datename(yy,for_date)) + ')' 
					from #SUM_TOTAL 
			FOR XML PATH(''), TYPE
			).value('.', 'NVARCHAR(MAX)') 
		,1,1,'')
	DROP TABLE #SUM_TOTAL
	
	
  
	 -- INDIVIDUAL DATE WISE GET DATES	  
	SELECT DISTINCT FOR_DATE INTO #TEMPTBLE  FROM T0100_EMP_PERFORMANCE_DETAIL WITH (NOLOCK) WHERE FOR_DATE 
	BETWEEN @FROM_DATE AND @TO_DATE ORDER BY FOR_DATE
	 select @cols = STUFF((SELECT ',' + QUOTENAME(datename(mm, For_date) + '-' + datename(yy,for_date)) 
					from #TEMPTBLE 
			FOR XML PATH(''), TYPE
			).value('.', 'NVARCHAR(MAX)') 
		,1,1,'')
	DROP TABLE #TEMPTBLE
	
	
		
 --select @cols = STUFF((SELECT distinct ',' + QUOTENAME(datename(mm, For_date) + ' - ' + datename(yy,for_date)) 
  --                  from T0100_EMP_PERFORMANCE_DETAIL where for_date BETWEEN @FROM_DATE AND @TO_DATE 
  --          FOR XML PATH(''), TYPE
  --          ).value('.', 'NVARCHAR(MAX)') 
  --      ,1,1,'')
        
    
    CREATE TABLE #TABLE_TOTAL_AVG
    (
		EMP_ID	NUMERIC(18,0),
		FOR_DATE DATETIME,
		TOTAL	NUMERIC(18,0),
		PER_AVG	NUMERIC(18,2)
    )
    
    
    
    INSERT INTO #TABLE_TOTAL_AVG
    SELECT EPD.EMP_ID,EPD.FOR_DATE,SUM(EPD.PERCENTAGE) AS TOTAL,AVG(EPD.PERCENTAGE) AS PER_AVG
    FROM T0100_EMP_PERFORMANCE_DETAIL EPD WITH (NOLOCK) INNER JOIN #EMP_CONS EC ON EPD.EMP_ID = EC.EMP_ID
    AND EPD.FOR_DATE BETWEEN @FROM_DATE AND @TO_DATE
    GROUP BY EPD.EMP_ID,EPD.FOR_DATE
    
    IF OBJECT_ID('tempdb..##EMP_PERFORMANCE_TBL') IS NOT NULL    ---added aswini
BEGIN
    DROP TABLE ##EMP_PERFORMANCE_TBL;
END
    
	SET @Query = 'SELECT EMP_ID,ALPHA_EMP_CODE,EMP_FULL_NAME,BRANCH_NAME,DEPARTMENT_NAME,DESIGNATION,CAST(DATE_OF_JOIN AS VARCHAR(20)) AS DATE_OF_JOIN,GROSS_SALARY,CAST(PERIOD AS NUMERIC(18,2)) AS PERIOD,'+@cols+'
	INTO ##EMP_PERFORMANCE_TBL
	FROM 
	(
		SELECT EM.EMP_ID,EM.ALPHA_EMP_CODE,EM.EMP_FULL_NAME,BM.BRANCH_NAME,DM.DEPT_NAME AS DEPARTMENT_NAME,DSM.DESIG_NAME AS DESIGNATION,CONVERT(DATE,EM.DATE_OF_JOIN) AS DATE_OF_JOIN,B.GROSS_SALARY AS GROSS_SALARY,dbo.F_GET_AGE(EM.DATE_OF_JOIN,GETDATE(),''Y'','''') as PERIOD,
		isnull(EPD.PERCENTAGE,0) as PERCENTAGE,DATENAME(MM,EPD.FOR_DATE) + ''-'' + datename(yy,EPD.FOR_DATE) AS ''MONTHSNAME''
		FROM  T0100_EMP_PERFORMANCE_DETAIL EPD WITH (NOLOCK)
		INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON EPD.EMP_ID = EM.EMP_ID
		INNER JOIN #EMP_CONS EC ON EM.EMP_ID = EC.EMP_ID
		LEFT OUTER JOIN
				(
					SELECT	EMP_ID,I.CMP_ID,I.BRANCH_ID,I.DEPT_ID,I.DESIG_ID,I.GROSS_SALARY
									FROM	T0095_INCREMENT I WITH (NOLOCK)
									WHERE	I.INCREMENT_ID =(
																SELECT	TOP 1 INCREMENT_ID
																FROM	T0095_INCREMENT I1 WITH (NOLOCK)
																WHERE	I1.EMP_ID=I.EMP_ID AND I1.CMP_ID=I.CMP_ID
																ORDER BY	INCREMENT_EFFECTIVE_DATE DESC, INCREMENT_ID DESC
															)
				) AS B ON B.EMP_ID = EC.EMP_ID AND B.CMP_ID=EM.CMP_ID
		LEFT OUTER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON B.BRANCH_ID = BM.BRANCH_ID
		LEFT OUTER JOIN T0040_DEPARTMENT_MASTER DM WITH (NOLOCK) ON B.DEPT_ID = DM.DEPT_ID
		LEFT OUTER JOIN T0040_DESIGNATION_MASTER DSM WITH (NOLOCK) ON B.DESIG_ID = DSM.DESIG_ID
	) qry
	Pivot 
	(	
		avg(Percentage) for MonthsName In ('+@cols+') 
	)as PVT'
	
	EXEC (@Query)
	
	CREATE TABLE ##EMP_PERFORMANCE_TBL (                       ---added aswini
    EMP_ID INT,
    ALPHA_EMP_CODE NVARCHAR(MAX),
    EMP_FULL_NAME NVARCHAR(MAX),
    BRANCH_NAME NVARCHAR(MAX),
    DEPARTMENT_NAME NVARCHAR(MAX),
    DESIGNATION NVARCHAR(MAX),
    DATE_OF_JOIN NVARCHAR(MAX),
    GROSS_SALARY NUMERIC(18, 2),
    PERIOD NUMERIC(18, 2),
    -- Add other columns as needed
);	
	
	--DROP TABLE ##EMP_PERFORMANCE_TBL
	
	SET @QRY = 'SELECT TOP 1 99999999 AS EMP_ID,'''' AS ALPHA_EMP_CODE,''GRAND TOTAL'' AS EMP_FULL_NAME,'''' AS BRANCH_NAME,
				'''' AS DEPARTMENT_NAME,'''' AS DESIGNATION,'''' AS DATE_OF_JOIN,SUM(ISNULL(GROSS_SALARY,0)),SUM(ISNULL(PERIOD,0)),' + @colsSUM + '
				FROM ##EMP_PERFORMANCE_TBL'
	INSERT INTO ##EMP_PERFORMANCE_TBL
	EXEC(@QRY)



	SELECT EMP_ID,SUM(TOTAL) AS TOTAL,CAST(AVG(PER_AVG) AS DECIMAL(10,2)) AS PER_AVG
	INTO #TABLE_TOTAL_AVG_FINAL
	FROM #TABLE_TOTAL_AVG
	GROUP BY EMP_ID
	
	

--	 IF OBJECT_ID('tempdb..##FINAL_AMOUNT') IS NOT NULL    ---added aswini
--BEGIN
--    DROP TABLE ##FINAL_AMOUNT;
--END
IF OBJECT_ID('tempdb..##FINAL_AMOUNT') IS NOT NULL
    DROP TABLE ##FINAL_AMOUNT;


	-- Create ##FINAL_AMOUNT table with SRNO column
CREATE TABLE ##FINAL_AMOUNT (
    SRNO INT,
    EMP_ID INT,
    ALPHA_EMP_CODE NVARCHAR(MAX),
    EMP_FULL_NAME NVARCHAR(MAX),
    BRANCH_NAME NVARCHAR(MAX),
    DEPARTMENT_NAME NVARCHAR(MAX),
    DESIGNATION NVARCHAR(MAX),
    DATE_OF_JOIN NVARCHAR(MAX),
    GROSS_SALARY NUMERIC(18, 2),
    PERIOD NUMERIC(18, 2),
    TOTAL NUMERIC(18, 0),
    PER_AVG NUMERIC(18, 2)
    -- Add other columns as needed
);

-- Populate ##FINAL_AMOUNT using INSERT INTO ... SELECT
INSERT INTO ##FINAL_AMOUNT (SRNO, ALPHA_EMP_CODE, EMP_FULL_NAME, BRANCH_NAME, DEPARTMENT_NAME, DESIGNATION, DATE_OF_JOIN, GROSS_SALARY, PERIOD, TOTAL, PER_AVG)
SELECT 
    ROW_NUMBER() OVER (ORDER BY ALPHA_EMP_CODE) AS SRNO,
    EPT.ALPHA_EMP_CODE,
    EPT.EMP_FULL_NAME,
    EPT.BRANCH_NAME,
    EPT.DEPARTMENT_NAME,
    EPT.DESIGNATION,
    CAST(EPT.DATE_OF_JOIN AS VARCHAR(20)) AS DATE_OF_JOIN,
    EPT.GROSS_SALARY,
    EPT.PERIOD,
    TA.TOTAL,
    TA.PER_AVG
FROM 
    ##EMP_PERFORMANCE_TBL EPT
LEFT JOIN 
    #TABLE_TOTAL_AVG_FINAL TA ON EPT.EMP_ID = TA.EMP_ID;

-- Update TOTAL for 'GRAND TOTAL'
UPDATE T
SET T.TOTAL = FT.TOTAL
FROM ##FINAL_AMOUNT T 
CROSS APPLY (SELECT SUM(ISNULL(TOTAL,0)) AS TOTAL FROM ##FINAL_AMOUNT) FT
WHERE T.EMP_FULL_NAME = 'GRAND TOTAL';

-- Get MAXSRNO
SELECT @MAXSRNO = MAX(SRNO) + 1 FROM ##FINAL_AMOUNT;

-- Update SRNO for 'GRAND TOTAL'
UPDATE ##FINAL_AMOUNT 
SET SRNO = @MAXSRNO 
WHERE EMP_FULL_NAME = 'GRAND TOTAL';

-- Select data from ##FINAL_AMOUNT
SELECT * FROM ##FINAL_AMOUNT ORDER BY SRNO;








	--SET @Query = 'SELECT ROW_NUMBER() OVER(ORDER BY ALPHA_EMP_CODE) AS SRNO,EPT.ALPHA_EMP_CODE,EPT.EMP_FULL_NAME,EPT.BRANCH_NAME,EPT.DEPARTMENT_NAME,EPT.DESIGNATION,CAST(EPT.DATE_OF_JOIN AS VARCHAR(20)) AS DATE_OF_JOIN,EPT.GROSS_SALARY,EPT.PERIOD,'+@cols+',
	--TA.TOTAL,TA.PER_AVG
	--INTO ##FINAL_AMOUNT
	--FROM ##EMP_PERFORMANCE_TBL EPT LEFT JOIN #TABLE_TOTAL_AVG_FINAL TA ON EPT.EMP_ID = TA.EMP_ID'
	--EXEC(@Query)
	
		
	--UPDATE	T
	--SET		T.TOTAL = FT.TOTAL
	--FROM ##FINAL_AMOUNT T INNER JOIN ( SELECT SUM(ISNULL(TOTAL,0)) AS TOTAL FROM ##FINAL_AMOUNT ) FT 
	--ON T.EMP_FULL_NAME='GRAND TOTAL'
	
	
	--SELECT @MAXSRNO = MAX(SRNO) + 1 FROM  ##FINAL_AMOUNT
	
	--UPDATE ##FINAL_AMOUNT 
	--SET SRNO = @MAXSRNO 
	--WHERE EMP_FULL_NAME='GRAND TOTAL'
	
	
	
	--SELECT * FROM ##FINAL_AMOUNT ORDER BY SRNO
	
	--- DROP TABLE
	DROP TABLE ##FINAL_AMOUNT
	DROP TABLE ##EMP_PERFORMANCE_TBL
	
	


