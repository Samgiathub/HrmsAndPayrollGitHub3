


-- =============================================
-- AUTHOR:		<AUTHOR,,GADRIWALA MUSLIM>
-- CREATE DATE: <CREATE DATE,,10112016>
-- DESCRIPTION:	<DESCRIPTION,, GET LIST OF EMPLOYEE'S WHICH INVITE FOR TRAINING>
---23/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
-- =============================================
CREATE PROCEDURE [dbo].[GET_EMP_TRAINING_INVITATION_LIST]
@TRAINING_APP_ID AS NUMERIC(18,0)
AS
BEGIN
	-- SET NOCOUNT ON ADDED TO PREVENT EXTRA RESULT SETS FROM
	-- INTERFERING WITH SELECT STATEMENTS.
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON
	
	DECLARE @FROM_DATE AS DATETIME
	DECLARE @TO_DATE AS DATETIME
	
	CREATE TABLE #LEAVE_APPROVED
		(
			EMP_ID NUMERIC(18,0),
			FOR_DATE DATETIME,
			LEAVE_CODE NVARCHAR(50),
			LEAVE_NAME NVARCHAR(50),
			LEAVE_DAYS NUMERIC(18,2) DEFAULT 0
		)
		
		 
	
		SELECT  @FROM_DATE = MIN(FROM_DATE) ,@TO_DATE = MAX(TO_DATE)
		FROM T0120_HRMS_TRAINING_SCHEDULE WITH (NOLOCK)	WHERE TRAINING_APP_ID = @TRAINING_APP_ID
		
		INSERT INTO  #LEAVE_APPROVED(EMP_ID,FOR_DATE,LEAVE_CODE,LEAVE_NAME,LEAVE_DAYS)
		SELECT LT.EMP_ID,LT.FOR_DATE,LM.LEAVE_CODE,LM.LEAVE_NAME,ISNULL(LT.LEAVE_USED,0) + ISNULL(LT.COMPOFF_USED,0)  
		FROM T0140_LEAVE_TRANSACTION LT WITH (NOLOCK)
		INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK) ON LM.LEAVE_ID = LT.LEAVE_ID
		INNER JOIN T0130_HRMS_TRAINING_EMPLOYEE_DETAIL HTED WITH (NOLOCK) ON HTED.EMP_ID = LT.EMP_ID
		WHERE (FOR_DATE BETWEEN @FROM_DATE AND @TO_DATE) AND (LEAVE_USED + COMPOFF_USED)> 0 AND HTED.TRAINING_APP_ID = @TRAINING_APP_ID
	
	
	
	SELECT DISTINCT ED.EMP_ID, EM.ALPHA_EMP_CODE + '-' + EM.EMP_FULL_NAME AS EMP_FULL_NAME_NEW, 
	TRAN_EMP_DETAIL_ID,EMP_TRAN_STATUS,GM.GRD_NAME,BM.BRANCH_NAME,DSM.DESIG_NAME,DM.DEPT_NAME, 
	CASE WHEN EMP_TRAN_STATUS = 0 THEN 'PENDING' WHEN 
			  EMP_TRAN_STATUS = 1 THEN 'APPROVED' WHEN 
			  EMP_TRAN_STATUS = 4 THEN 'UNPLANNED' ELSE 'REJECTED'
	END AS STATUS,CASE WHEN ISNULL(LA.LEAVE_DAYS,0) > 0 THEN 1 ELSE 0 END AS LEAVE_APPLIED,CASE WHEN ISNULL(TI.Tran_Id,0)=0 THEN '' ELSE CASE WHEN isnull(TI.In_Time,'') <> '' THEN 'P' ELSE 'A' END END Attended,EM.EMP_FULL_NAME
	FROM T0130_HRMS_TRAINING_EMPLOYEE_DETAIL ED WITH (NOLOCK) INNER JOIN
	(
		SELECT I.EMP_ID,I.GRD_ID,I.DESIG_ID,I.DEPT_ID,I.BRANCH_ID FROM T0095_INCREMENT I WITH (NOLOCK) INNER JOIN 
		(	SELECT MAX(IE.INCREMENT_ID) AS INCREMENT_ID , IE.EMP_ID FROM T0095_INCREMENT IE  WITH (NOLOCK) INNER JOIN
			(
				SELECT MAX(IE.INCREMENT_EFFECTIVE_DATE) AS INCREMENT_EFFECTIVE_DATE,IE.EMP_ID FROM T0095_INCREMENT IE WITH (NOLOCK) INNER JOIN 
				T0130_HRMS_TRAINING_EMPLOYEE_DETAIL TD WITH (NOLOCK) ON IE.EMP_ID = TD.EMP_ID and TD.cmp_id=IE.Cmp_ID 
				WHERE TD.TRAINING_APP_ID = @TRAINING_APP_ID			
				GROUP BY IE.Emp_ID
			 )INN_QRY ON INN_QRY.EMP_ID= IE.EMP_ID
			 GROUP BY IE.Emp_ID
		)QRY ON QRY.INCREMENT_ID = I.INCREMENT_ID
	) INC ON INC.EMP_ID  = ED.EMP_ID
	INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON EM.EMP_ID = ED.EMP_ID
	INNER JOIN T0040_GRADE_MASTER GM WITH (NOLOCK) ON GM.GRD_ID = INC.GRD_ID
	INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON BM.BRANCH_ID = INC.BRANCH_ID
	INNER JOIN T0040_DESIGNATION_MASTER DSM WITH (NOLOCK) ON DSM.DESIG_ID = INC.DESIG_ID
	LEFT OUTER JOIN T0040_DEPARTMENT_MASTER DM WITH (NOLOCK) ON DM.DEPT_ID = INC.DEPT_ID	
	LEFT OUTER JOIN #LEAVE_APPROVED LA ON LA.EMP_ID = ED.EMP_ID 
	LEFT OUTER JOIN T0150_EMP_Training_INOUT_RECORD TI WITH (NOLOCK) ON TI.Training_Apr_Id = ED.Training_Apr_ID and TI.emp_id = ED.Emp_ID
	WHERE TRAINING_APP_ID = @TRAINING_APP_ID
	--ORDER BY EMP_TRAN_STATUS,EMP_FIRST_NAME,EMP_ID ASC
    -- INSERT STATEMENTS FOR PROCEDURE HERE
END

