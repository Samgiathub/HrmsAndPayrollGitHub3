-- =============================================
-- Author:		<Author,,Jimit Soni>
-- Create date: <Create Date,,12082019>
-- Description:	<Description,,Bonus Statement Report for WCL>
---01/2/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
-- =============================================
CREATE PROCEDURE [dbo].[P_GET_BONUS_AND_EXGRATIA_STATEMENT]
	 @CMP_ID			NUMERIC
	,@FROM_DATE			DATETIME
	,@TO_DATE 			DATETIME 
	,@BRANCH_ID			VARCHAR(MAX) = ''
	,@CAT_ID			VARCHAR(MAX) = ''
	,@GRD_ID 			VARCHAR(MAX) = ''
	,@TYPE_ID 			VARCHAR(MAX) = ''
	,@DEPT_ID 			VARCHAR(MAX) = ''
	,@DESIG_ID 			VARCHAR(MAX) = ''
	,@EMP_ID 			NUMERIC = 0
	,@CONSTRAINT		VARCHAR(MAX) = ''
	,@Export_Type		VARCHAR(10)	 = 'EXCEL'
AS
BEGIN
	
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON

		IF OBJECT_ID('TEMPDB..#EMP_CONS') IS NOT NULL
			DROP TABLE #EMP_CONS

		CREATE TABLE #EMP_CONS
		(      
			EMP_ID NUMERIC,
			BRANCH_ID NUMERIC,
			INCREMENT_ID NUMERIC   
		)

		 IF @BRANCH_ID = 0            
		  SET @BRANCH_ID = NULL          
      
		 IF @CAT_ID = 0            
		  SET @CAT_ID = NULL          
       
		 IF @GRD_ID = 0            
		  SET @GRD_ID = NULL          
       
		 IF @TYPE_ID = 0            
		  SET @TYPE_ID = NULL          
       
		 IF @DEPT_ID = 0            
		  SET @DEPT_ID = NULL          
       
		 IF @DESIG_ID = 0            
		  SET @DESIG_ID = NULL          
       
		 IF @EMP_ID = 0            
		  SET @EMP_ID = NULL  
		  
		  EXEC SP_RPT_FILL_EMP_CONS		@CMP_ID,@FROM_DATE,@TO_DATE,@BRANCH_ID,@CAT_ID,@GRD_ID,@TYPE_ID,@DEPT_ID,@DESIG_ID,
										@EMP_ID,@CONSTRAINT,0,0,0,0,0,0    
	
		
		IF OBJECT_ID('TEMPDB..#BONUS_STATEMENT') IS NOT NULL
			DROP TABLE #BONUS_STATEMENT


		CREATE TABLE #BONUS_STATEMENT
		(
			Emp_Id		NUMERIC(18,0),
			CMP_ID		NUMERIC(18,0),
			[MONTH]		DATETIME,
			ACTUAL_DAYS NUMERIC(5,2),
			PAID_DAYS	NUMERIC(5,2),
			ARREAR_DAYS NUMERIC(5,2),
			OP_BL_EXGR  NUMERIC(18,2) DEFAULT 0,
			OP_BL_BON	NUMERIC(18,2) DEFAULT 0,
			CR_BL_EXGR  NUMERIC(18,2) DEFAULT 0,
			CR_BL_BON	NUMERIC(18,2) DEFAULT 0,
			DB_BL_EXGR  NUMERIC(18,2) DEFAULT 0,
			DB_BL_BON	NUMERIC(18,2) DEFAULT 0,
			CL_BL_EXGR  NUMERIC(18,2) DEFAULT 0,
			CL_BL_BON	NUMERIC(18,2) DEFAULT 0
		)
   
		DECLARE @EMP_ID_CUR NUMERIC
		DECLARE @LAST_BONUS_PAID DATETIME
		DECLARE @TEMP_FOR_DATE DATETIME
		
		IF OBJECT_ID('DBO.TEMPDB..#DATES') IS NOT NULL
			DROP TABLE #DATES
		
		CREATE TABLE #DATES(ID INT, FOR_DATE DATETIME) 

		INSERT 
		INTO	#DATES
		SELECT	ROW_ID, DATEADD(M,ROW_ID-1,@FROM_DATE)
		FROM	(
					SELECT  ROW_NUMBER() OVER(ORDER BY OBJECT_ID) ROW_ID 
					FROM	sys.objects
				 ) T
		WHERE	T.ROW_ID <= (DATEDIFF(M, @FROM_DATE, @TO_DATE) + 1)
		

		

		INSERT INTO #BONUS_STATEMENT(EMP_ID,CMP_ID,[MONTH])
		SELECT	EC.EMP_ID,CMP_ID,FOR_DATE
		FROM	T0080_EMP_MASTER EM WITH (NOLOCK)
				INNER JOIN	#EMP_CONS EC ON EC.EMP_ID = EM.EMP_ID	
				CROSS JOIN  #DATES


		
		

		DECLARE @OP_BL_EXGR AS NUMERIC(18,2)
		DECLARE @OP_BL_BON AS NUMERIC(18,2)

		DECLARE @DB_BL_EXGR AS NUMERIC(18,2)
		DECLARE @DB_BL_BON AS NUMERIC(18,2)

		DECLARE @CL_BL_EXGR AS NUMERIC(18,2)
		DECLARE @CL_BL_BON AS NUMERIC(18,2)
		

				
		DECLARE CUR1 CURSOR FOR   
			SELECT	DISTINCT EMP_ID 
			FROM	#BONUS_STATEMENT 					 
		OPEN CUR1  
			FETCH NEXT FROM CUR1 INTO @EMP_ID_CUR
				WHILE @@FETCH_STATUS = 0  
					BEGIN  
				       	
						SELECT	@LAST_BONUS_PAID = CAST(CAST(B.BONUS_EFFECT_YEAR AS VARCHAR) + '-' + CAST(B.BONUS_EFFECT_MONTH AS VARCHAR) + '-' + CAST(1 AS VARCHAR) AS DATETIME) 
						FROM	T0180_BONUS B WITH (NOLOCK)
						WHERE	EMP_ID = @EMP_ID_CUR AND CMP_ID = @CMP_ID  AND 
								TO_DATE = (
												SELECT	MAX(TO_DATE)
												FROM	T0180_BONUS WITH (NOLOCK)
												WHERE	TO_DATE <= @TO_DATE AND CMP_ID = @CMP_ID AND EMP_ID = @EMP_ID_CUR
											)   
						SET	@TEMP_FOR_DATE = @FROM_DATE

					

						SET @OP_BL_EXGR = 0
						SET @OP_BL_BON = 0

						SET @DB_BL_EXGR = 0
						SET @DB_BL_BON = 0

						SET @CL_BL_EXGR = 0
						SET @CL_BL_BON = 0

						WHILE (@TEMP_FOR_DATE <= @TO_DATE)
							BEGIN
									
									
										UPDATE  BT
										SET		BT.CR_BL_EXGR = ISNULL(Q.CR_BL_EXGR,0) + ISNULL(( CASE WHEN ISNULL(Q.Arear_Day,0) <> 0 Then ISNULL(Q.CR_BL_EXGR,0) * ISNULL(Q.Arear_Day,0) / ISNULL(Q.Outof_Days,0) End),0) ,
												BT.CR_BL_BON = ISNULL(Q.CR_BL_BON,0) + ISNULL((CASE WHEN ISNULL(Q.Arear_Day,0) <> 0 Then ISNULL(Q.CR_BL_BON,0) * ISNULL(Q.Arear_Day,0) / ISNULL(Q.Outof_Days,0) End),0) ,
												BT.ACTUAL_DAYS = ISNULL(Q.Outof_Days,0),
												BT.ARREAR_DAYS = ISNULL(Q.Arear_Day,0),
												BT.PAID_DAYS = ISNULL(Q.Sal_Cal_Days,0)
										FROM	#BONUS_STATEMENT BT
												LEFT OUTER JOIN (
																SELECT  distinct EM.EMP_ID,EM.CMP_ID,MONTH_ST_DATE AS [MONTH],MS.OUTOF_DAYS,MS.SAL_CAL_DAYS,MS.AREAR_DAY,
																		(ISNULL(MAD.M_AD_AMOUNT,0) + ISNULL(MAD.M_AREAR_AMOUNT,0) + ISNULL(MAD.M_AREAR_AMOUNT_Cutoff,0)) AS CR_BL_EXGR,
																		(ISNULL(MAD1.M_AD_AMOUNT,0) + ISNULL(MAD1.M_AREAR_AMOUNT,0) + ISNULL(MAD1.M_AREAR_AMOUNT_Cutoff,0)) AS CR_BL_BON
																FROM	T0080_EMP_MASTER EM WITH (NOLOCK)																		
																		LEFT OUTER JOIN	T0200_MONTHLY_SALARY MS WITH (NOLOCK) ON MS.EMP_ID = EM.EMP_ID	
																		LEFT OUTER JOIN	T0210_MONTHLY_AD_DETAIL MAD WITH (NOLOCK)  ON MAD.EMP_ID = EM.EMP_ID And Mad.For_date = @TEMP_FOR_DATE--AND MONTH(MAD.For_DATE) = MONTH(MS.Month_End_Date) AND YEAR(MAD.For_DATE) = YEAR(MS.Month_End_Date)
																		INNER JOIN	T0050_AD_MASTER AM WITH (NOLOCK) ON AM.AD_ID = MAD.AD_ID AND Am.AD_DEF_ID = 32
																		LEFT OUTER JOIN	T0210_MONTHLY_AD_DETAIL MAD1 WITH (NOLOCK) ON MAD1.EMP_ID = EM.EMP_ID And Mad1.For_date = @TEMP_FOR_DATE--AND MONTH(MAD.For_DATE) = MONTH(MS.Month_End_Date) AND YEAR(MAD.For_DATE) = YEAR(MS.Month_End_Date)			
																		INNER JOIN	T0050_AD_MASTER AM1 WITH (NOLOCK) ON AM1.AD_ID = MAD1.AD_ID AND Am1.AD_DEF_ID = 19			
																WHERE   MS.CMP_ID = @CMP_ID AND 
																		--MONTH(MONTH_END_DATE) = MONTH(@TEMP_FOR_DATE) AND YEAR(MONTH_END_DATE) = YEAR(@TEMP_FOR_DATE)	
																		Month_St_Date = @TEMP_FOR_DATE
																		AND MS.EMP_ID = @EMP_ID_CUR	
																		AND	MAD.Sal_Tran_ID IS NOT NULL	and MAD1.Sal_Tran_ID IS NOT NULL AND 	MAD.S_Sal_Tran_ID IS NULl and MAD1.S_Sal_Tran_ID IS NULl																
															)Q ON BT.EMP_ID = @EMP_ID_CUR  AND BT.[MONTH] = @TEMP_FOR_DATE												
										WHERE	BT.[MONTH] = @TEMP_FOR_DATE AND BT.Cmp_Id = @CMP_ID AND BT.EMP_ID = @EMP_ID_CUR						
										
										
										UPDATE  BT
										SET		BT.CR_BL_EXGR = ISNULL(BT.CR_BL_EXGR,0) + ISNULL(Q1.S_CR_BL_EXGR,0),
												BT.CR_BL_BON = ISNULL(BT.CR_BL_BON,0) + ISNULL(Q1.S_CR_BL_BON,0)												
										FROM	#BONUS_STATEMENT BT
												LEFT OUTER JOIN (
																SELECT  distinct ISNULL(MAD.M_AD_AMOUNT,0) AS S_CR_BL_EXGR,
																		ISNULL(MAD1.M_AD_AMOUNT,0) AS S_CR_BL_BON
																FROM	T0080_EMP_MASTER EM WITH (NOLOCK)																		
																		LEFT OUTER JOIN	T0201_MONTHLY_SALARY_SETT MS WITH (NOLOCK) ON MS.EMP_ID = EM.EMP_ID	
																		LEFT OUTER JOIN	T0210_MONTHLY_AD_DETAIL MAD WITH (NOLOCK) ON MAD.EMP_ID = EM.EMP_ID AND MONTH(MAD.For_DATE) = MONTH(MS.S_Month_End_Date) AND YEAR(MAD.For_DATE) = YEAR(MS.S_Month_End_Date)
																		INNER JOIN	T0050_AD_MASTER AM WITH (NOLOCK) ON AM.AD_ID = MAD.AD_ID AND Am.AD_DEF_ID = 32
																		LEFT OUTER JOIN	T0210_MONTHLY_AD_DETAIL MAD1 WITH (NOLOCK)  ON MAD1.EMP_ID = EM.EMP_ID AND MONTH(MAD.For_DATE) = MONTH(MS.S_Month_End_Date) AND YEAR(MAD.For_DATE) = YEAR(MS.S_Month_End_Date)			
																		INNER JOIN	T0050_AD_MASTER AM1 WITH (NOLOCK) ON AM1.AD_ID = MAD1.AD_ID AND Am1.AD_DEF_ID = 19			
																WHERE   MS.CMP_ID = @CMP_ID AND MONTH(S_MONTH_END_DATE) = MONTH(@TEMP_FOR_DATE) AND 
																		YEAR(S_MONTH_END_DATE) = YEAR(@TEMP_FOR_DATE)	AND MS.Cmp_Id = @CMP_ID	AND MS.EMP_ID = @EMP_ID_CUR	AND
																		MAD.S_Sal_Tran_ID IS NOT NULl and MAD1.S_Sal_Tran_ID IS NOT NULl 
															)Q1 ON BT.EMP_ID = @EMP_ID_CUR  AND BT.[MONTH] = @TEMP_FOR_DATE
										WHERE	BT.[MONTH] = @TEMP_FOR_DATE AND BT.Cmp_Id = @CMP_ID AND BT.EMP_ID = @EMP_ID_CUR		


										

										UPDATE	BT
										SET		BT.DB_BL_EXGR = Q.DB_BL_EXGR,
												BT.DB_BL_BON  = Q.DB_BL_BON																										
										FROM    #BONUS_STATEMENT BT 
												INNER JOIN (
																SELECT 	ISNULL(sum(B.Bonus_Amount),0) AS DB_BL_BON ,ISNULL(sum(B.Ex_Gratia_Bonus_Amount),0) AS DB_BL_EXGR,
																		Bonus_Effect_month,Bonus_Effect_Year
																FROM	T0180_BONUS B WITH (NOLOCK)
																WHERE	MONTH(@TEMP_FOR_DATE) = B.Bonus_Effect_month AND YEAR(@TEMP_FOR_DATE) = B.Bonus_Effect_Year														 
																		AND B.Cmp_Id = @CMP_ID and B.EMP_ID = @EMP_ID_CUR AND Bonus_Calculated_On = 'Allowance'
																GROUP BY Bonus_Effect_month,Bonus_Effect_Year --- ADDED by Hardik 17/06/2020 for WCL as both bonus given on same month so 1 entry not showing in report
															)Q ON	BT.EMP_ID = @EMP_ID_CUR  AND MONTH(@TEMP_FOR_DATE) = Bonus_Effect_month AND YEAR(@TEMP_FOR_DATE) = Bonus_Effect_Year	
										WHERE	[MONTH] = @TEMP_FOR_DATE AND Cmp_Id = @CMP_ID AND EMP_ID = @EMP_ID_CUR
												
										
										IF (@TEMP_FOR_DATE = @FROM_DATE)
											BEGIN
												 

												 		

													UPDATE  BT
													SET		BT.OP_BL_EXGR	=	ISNULL(Q1.OP_BL_EXGR,0) - ISNULL(Q.DB_BL_EXGR,0),
															BT.OP_BL_BON	=   ISNULL(Q2.OP_BL_BON,0) - ISNULL(Q.DB_BL_BON,0)												
													FROM	#BONUS_STATEMENT BT
															LEFT OUTER JOIN (
																				SELECT  distinct ISNULL(SUM(MAD.M_AD_AMOUNT),0) AS OP_BL_EXGR
																				FROM	T0080_EMP_MASTER EM WITH (NOLOCK)																																
																						LEFT OUTER JOIN	T0210_MONTHLY_AD_DETAIL MAD WITH (NOLOCK) ON MAD.EMP_ID = EM.EMP_ID 
																						INNER JOIN		T0050_AD_MASTER AM WITH (NOLOCK) ON AM.AD_ID = MAD.AD_ID AND Am.AD_DEF_ID = 32																								
																				WHERE   MAd.CMP_ID = @CMP_ID AND mad.for_date < @FROM_DATE and MAd.EMP_ID = @EMP_ID_CUR  
																		)Q1 ON BT.EMP_ID = @EMP_ID_CUR  AND BT.[MONTH] = @TEMP_FOR_DATE
															LEFT OUTER JOIN (
																				SELECT  distinct ISNULL(SUM(MAD.M_AD_AMOUNT),0) AS OP_BL_BON
																				FROM	T0080_EMP_MASTER EM WITH (NOLOCK) 																																																						
																						LEFT OUTER JOIN	T0210_MONTHLY_AD_DETAIL MAD WITH (NOLOCK) ON MAD.EMP_ID = EM.EMP_ID 
																						INNER JOIN	T0050_AD_MASTER AM1 WITH (NOLOCK) ON AM1.AD_ID = MAD.AD_ID AND Am1.AD_DEF_ID = 19			
																				WHERE   MAd.CMP_ID = @CMP_ID AND mad.for_date < @FROM_DATE AND MAd.EMP_ID = @EMP_ID_CUR  
																		)Q2 ON BT.EMP_ID = @EMP_ID_CUR  AND BT.[MONTH] = @TEMP_FOR_DATE
															LEFT OUTER JOIN  (
																				SELECT 	ISNULL(SUM(B.Bonus_Amount),0) AS DB_BL_BON ,ISNULL(SUM(B.Ex_Gratia_Bonus_Amount),0) AS DB_BL_EXGR
																						--,Bonus_Effect_month,Bonus_Effect_Year
																				FROM	T0180_BONUS B WITH (NOLOCK)
																				WHERE	dbo.GET_MONTH_ST_DATE(Bonus_Effect_month,Bonus_Effect_Year) < @FROM_DATE												 
																						AND B.Cmp_Id = @CMP_ID and B.EMP_ID = @EMP_ID_CUR
																			)Q ON	BT.EMP_ID = @EMP_ID_CUR  
													WHERE	BT.[MONTH] = @TEMP_FOR_DATE AND BT.Cmp_Id = @CMP_ID AND BT.EMP_ID = @EMP_ID_CUR

											END



										UPDATE	BT
										SET		BT.OP_BL_EXGR = q.CL_BL_EXGR,
												BT.OP_BL_BON =	q.CL_BL_BON
										FROM	#BONUS_STATEMENT BT		
												INNER JOIN (
																SELECT 	B.CL_BL_EXGR,B.CL_BL_BON,[MONTH]
																FROM	#BONUS_STATEMENT B
																WHERE	[MONTH] = DATEADD(M, -1, @TEMP_FOR_DATE) AND Cmp_Id = @CMP_ID AND EMP_ID = @EMP_ID_CUR		
															)Q	ON	BT.EMP_ID = @EMP_ID_CUR  --AND BT.[MONTH] = Q.[MONTH]
										WHERE	BT.[MONTH] = @TEMP_FOR_DATE AND Cmp_Id = @CMP_ID AND EMP_ID = @EMP_ID_CUR		
										
										
										


										UPDATE	BT
										SET		BT.CL_BL_EXGR = (ISNULL(OP_BL_EXGR,0) + ISNULL(CR_BL_EXGR,0) - ISNULL(DB_BL_EXGR,0)),
												BT.CL_BL_BON  = (ISNULL(OP_BL_BON,0) + ISNULL(CR_BL_BON,0) - ISNULL(DB_BL_BON,0))
										FROM	#BONUS_STATEMENT BT													
										WHERE	[MONTH] = @TEMP_FOR_DATE AND Cmp_Id = @CMP_ID AND EMP_ID = @EMP_ID_CUR	
										
										
																			
										
																					

								SET @TEMP_FOR_DATE = DATEADD(M, 1, @TEMP_FOR_DATE)
							END
				        
						FETCH NEXT FROM CUR1 INTO @EMP_ID_CUR 
					END  
		CLOSE CUR1  
		DEALLOCATE CUR1 

		IF @Export_Type = 'EXCEL'
			BEGIN
								
					SELECT  * FROM
					(
						SELECT	'="' + EM.ALPHA_EMP_CODE + '"' AS [EMPLOYEE CODE],EM.EMP_FULL_NAME AS [EMPLOYEE NAME],DM.DEPT_NAME AS DEPARTMENT,DG.DESIG_NAME AS DESIGNATION,GM.GRD_NAME AS GRADE,
							BM.BRANCH_NAME AS BRANCH,CONVERT(VARCHAR(12),BT.[MONTH],103) [MONTH] ,BT.ACTUAL_DAYS AS [ACTUAL DAYS],BT.ARREAR_DAYS AS [ARREAR DAYS],BT.PAID_DAYS AS [PAID DAYS],
							CONVERT(VARCHAR(12),DATE_OF_JOIN,103) [DATE OF JOINING],CONVERT(VARCHAR(12),EMP_LEFT_DATE,103) [LEFT DATE],
							BT.OP_BL_BON [OPENING BALANCE BONUS],OP_BL_EXGR [OPENING BALANCE  EXGRATIA],
							CR_BL_BON [CREDIT BALANCE BONUS],CR_BL_EXGR [CREDIT BALANCE EXGRATIA],
							DB_BL_BON [DEBIT BALANCE BONUS],DB_BL_EXGR [DEBIT BALANCE EXGRATIA],
							CL_BL_BON [CLOSING BALANCE BONUS],CL_BL_EXGR [CLOSING BALANCE EXGRATIA]
						FROM	#BONUS_STATEMENT BT
								INNER JOIN #EMP_CONS EC ON EC.EMP_ID = BT.EMP_ID
								INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON EM.EMP_ID = EC.EMP_ID
								INNER JOIN T0095_INCREMENT I WITH (NOLOCK) ON I.INCREMENT_ID = EC.INCREMENT_ID AND I.EMP_ID = EC.EMP_ID
								LEFT OUTER JOIN T0040_DEPARTMENT_MASTER DM WITH (NOLOCK) ON DM.DEPT_ID = I.DEPT_ID
								LEFT OUTER JOIN T0040_DESIGNATION_MASTER DG WITH (NOLOCK) ON DG.DESIG_ID = I.DESIG_ID
								LEFT OUTER JOIN T0040_GRADE_MASTER GM WITH (NOLOCK) ON GM.GRD_ID = I.GRD_ID
								INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON BM.BRANCH_ID = I.BRANCH_ID
						--UNION ALL

						--SELECT	NULL,NULL,NULL,NULL,NULL,NULL,
						--		'TOTAL',SUM(ACTUAL_DAYS),SUM(PAID_DAYS),SUM(ARREAR_DAYS),NULL,NULL,SUM(OP_BL_EXGR),SUM(OP_BL_BON),
						--		SUM(CR_BL_EXGR),SUM(CR_BL_BON),SUM(DB_BL_EXGR),SUM(DB_BL_BON),(SUM(OP_BL_EXGR) + SUM(CR_BL_EXGR) - SUM(DB_BL_EXGR)) AS CL_BL_EXGR,
						--		(SUM(OP_BL_BON) + SUM(CR_BL_BON) - SUM(DB_BL_BON)) AS CL_BL_BON								
						--FROM	#BONUS_STATEMENT
					)Q
					
			END
		ELSE
			BEGIN
					SELECT	EM.EMP_ID,EM.ALPHA_EMP_CODE AS [EMPLOYEE CODE],EM.EMP_FULL_NAME AS [EMPLOYEE NAME],DM.DEPT_NAME AS DEPARTMENT,DG.DESIG_NAME AS DESIGNATION,GM.GRD_NAME AS GRADE,
							BM.BRANCH_NAME AS BRANCH,CASE WHEN BT.Emp_Id = 9999 THEN 'TOTAL' ELSE CONVERT(VARCHAR(12),BT.[MONTH],103) END [MONTH] ,BT.ACTUAL_DAYS AS [ACTUAL DAYS],BT.ARREAR_DAYS AS [ARREAR DAYS],BT.PAID_DAYS AS [PAID DAYS],
							CONVERT(VARCHAR(12),DATE_OF_JOIN,103) [DATE OF JOINING],CONVERT(VARCHAR(12),EMP_LEFT_DATE,103) [LEFT DATE],
							BT.OP_BL_BON [OPENING BALANCE BONUS],OP_BL_EXGR [OPENING BALANCE  EXGRATIA],
							CR_BL_BON [CREDIT BALANCE BONUS],CR_BL_EXGR [CREDIT BALANCE EXGRATIA],
							DB_BL_BON [DEBIT BALANCE BONUS],DB_BL_EXGR [DEBIT BALANCE EXGRATIA],
							CL_BL_BON [CLOSING BALANCE BONUS],CL_BL_EXGR [CLOSING BALANCE EXGRATIA],
							@FROM_DATE AS [FROM DATE],@TO_DATE AS [TO DATE],BRANCH_ADDRESS [BRNACH ADDRESS],CMP_NAME [COMPANY NAME],
							CMP_ADDRESS [COMPANY ADDRESS] ,BRANCH_NAME [BRANCH NAME],COMP_NAME [COMP NAME]
					FROM	#BONUS_STATEMENT BT
							INNER JOIN #EMP_CONS EC ON EC.EMP_ID = BT.EMP_ID
							INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON EM.EMP_ID = EC.EMP_ID
							INNER JOIN T0095_INCREMENT I WITH (NOLOCK) ON I.INCREMENT_ID = EC.INCREMENT_ID AND I.EMP_ID = EC.EMP_ID
							LEFT OUTER JOIN T0040_DEPARTMENT_MASTER DM WITH (NOLOCK) ON DM.DEPT_ID = I.DEPT_ID
							LEFT OUTER JOIN T0040_DESIGNATION_MASTER DG WITH (NOLOCK) ON DG.DESIG_ID = I.DESIG_ID
							LEFT OUTER JOIN T0040_GRADE_MASTER GM WITH (NOLOCK) ON GM.GRD_ID = I.GRD_ID
							LEFT OUTER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON BM.BRANCH_ID = I.BRANCH_ID
							INNER JOIN T0010_COMPANY_MASTER CM WITH (NOLOCK) ON CM.CMP_ID = EM.CMP_ID
			END

		
END

