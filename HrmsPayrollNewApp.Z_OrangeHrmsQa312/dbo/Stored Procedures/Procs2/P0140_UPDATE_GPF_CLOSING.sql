
---30/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[P0140_UPDATE_GPF_CLOSING]
	@CMP_ID NUMERIC(18,0),
	@EMP_ID NUMERIC(18,0),
	@FOR_DATE DATETIME
AS
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON

	IF OBJECT_ID('tempdb..#TMP') IS NOT NULL
		DROP TABLE #TMP
		
	
	SELECT	TOP 0 ROW_NUMBER() OVER(ORDER BY FOR_DATE, TRAN_ID) AS ROW_NO,*
	INTO	#TMP
	FROM	T0140_EMP_GPF_TRANSACTION WITH (NOLOCK)
	
	DECLARE @TEMP_FOR_DATE DATETIME

	SELECT	@TEMP_FOR_DATE = MAX(For_Date)
	FROM	T0140_EMP_GPF_TRANSACTION WITH (NOLOCK)
	WHERE	FOR_DATE < @FOR_DATE AND CMP_ID=@CMP_ID AND EMP_ID=@EMP_ID
	
	IF @TEMP_FOR_DATE IS NULL 
		SELECT	@TEMP_FOR_DATE = ISNULL(MAX(For_Date),@FOR_DATE)
		FROM	T0140_EMP_GPF_TRANSACTION WITH (NOLOCK)
		WHERE	FOR_DATE <= @FOR_DATE AND CMP_ID=@CMP_ID AND EMP_ID=@EMP_ID
		
	
	
	SET @FOR_DATE = @TEMP_FOR_DATE
	
	DECLARE @POSTING_FOR_DATE DATETIME;
	
	SET		@POSTING_FOR_DATE = NULL;
	
	SELECT	@POSTING_FOR_DATE = MIN(FOR_DATE) 
	FROM	dbo.T0140_EMP_GPF_TRANSACTION WITH (NOLOCK)
	WHERE	FOR_DATE>=@FOR_DATE AND CMP_ID=@CMP_ID AND EMP_ID=@Emp_Id AND GPF_POSTING > 0

	
	IF @POSTING_FOR_DATE IS NULL	
		INSERT	INTO #TMP
		SELECT	ROW_NUMBER() OVER(ORDER BY FOR_DATE, TRAN_ID) AS ROW_NO,*		
		FROM	T0140_EMP_GPF_TRANSACTION WITH (NOLOCK)
		WHERE	FOR_DATE>=@FOR_DATE AND CMP_ID=@CMP_ID AND EMP_ID=@Emp_Id
	ELSE
		INSERT	INTO #TMP
		SELECT	ROW_NUMBER() OVER(ORDER BY FOR_DATE, TRAN_ID) AS ROW_NO,*		
		FROM	T0140_EMP_GPF_TRANSACTION WITH (NOLOCK)
		WHERE	FOR_DATE>=@FOR_DATE AND CMP_ID=@CMP_ID AND EMP_ID=@Emp_Id
				AND FOR_DATE <= @POSTING_FOR_DATE

	

	;with prev(ROW_NO,TRAN_ID,Cmp_ID,Emp_ID,For_Date,GPF_Opening,GPF_Credit,GPF_Debit,GPF_Closing) AS
	(
		SELECT	ROW_NO,TRAN_ID,GPF.Cmp_ID,GPF.Emp_ID,GPF.For_Date,GPF.GPF_Opening ,GPF.GPF_Credit,GPF.GPF_Debit,CAST(((GPF.GPF_Opening + GPF.GPF_CREDIT) - GPF.GPF_DEBIT)AS numeric(18,4)) as GPF_Closing
		FROM	#TMP GPF 
		WHERE	ROW_NO = 1
		
		UNION ALL
		
		SELECT	GPF.ROW_NO,GPF.TRAN_ID,GPF.Cmp_ID,GPF.Emp_ID,GPF.For_Date,G1.GPF_CLOSING,GPF.GPF_Credit,GPF.GPF_Debit,CAST(((G1.GPF_CLOSING + GPF.GPF_CREDIT) - GPF.GPF_DEBIT)AS numeric(18,4)) as GPF_Closing
		FROM	#TMP GPF INNER JOIN (SELECT ROW_NO,Cmp_ID,Emp_ID,For_Date,GPF_Opening,GPF_Credit,GPF_Debit,GPF_Closing
									 FROM prev G1) G1 ON GPF.ROW_NO=(G1.ROW_NO+ 1)
	)

	UPDATE	T0140_EMP_GPF_TRANSACTION
	SET		GPF_OPENING = P.GPF_OPENING,
			GPF_CLOSING = CASE WHEN G.FOR_DATE=@POSTING_FOR_DATE THEN 0 ELSE P.GPF_CLOSING END,
			GPF_POSTING = CASE WHEN G.FOR_DATE=@POSTING_FOR_DATE THEN P.GPF_CLOSING ELSE GPF_POSTING END
	FROM PREV P INNER JOIN T0140_EMP_GPF_TRANSACTION G ON P.TRAN_ID=G.TRAN_ID;
	
	DROP TABLE #TMP


