


---25/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[P0120_BOND_APPROVAL_IMPORT]
	 @CMP_ID						NUMERIC(18,0)
	,@EMP_CODE						VARCHAR(50)
	,@BOND_NAME						VARCHAR(50)	
	,@BOND_APR_AMOUNT				NUMERIC
	,@BOND_APR_NO_OF_INSTALLMENT	NUMERIC
	,@BOND_APR_INSTALLMENT_AMOUNT	NUMERIC
	,@BOND_APR_DATE					DATETIME				
	,@INSTALLMENT_START_DATE		DATETIME
	,@BOND_PAID_AMOUNT					NUMERIC(18,2) = 0 
	,@NO_OF_INSTALLMENT_PAID		NUMERIC(18,0) = 0
	,@BOND_RETURN_MODE				CHAR(1)
	,@LOG_STATUS					VARCHAR(10)	OUTPUT		
	,@GUID							VARCHAR(2000) = ''
	
AS
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON

    DECLARE @BOND_APR_ID NUMERIC(18,0)
    DECLARE @BOND_MODE AS CHAR(1)
    DECLARE @BOND_APR_DEDUCT_FROM_SAL NUMERIC
    DECLARE @BOND_APR_PENDING_AMOUNT  NUMERIC(18,0)
    DECLARE @DEDUCTION_TYPE VARCHAR(20)
    DECLARE @TRAN_TYPE VARCHAR(1)
    DECLARE @BOND_ID AS NUMERIC(18,0)
    DECLARE @EMP_ID AS NUMERIC(18,0) 
    DECLARE @BOND_RETURN_MONTH	INT
    DECLARE @BOND_RETURN_YEAR	INT
    DECLARE @BOND_RETURN_DATE	DATETIME
    DECLARE @INSTALLMENT_ID AS NUMERIC(18,0)
    DECLARE @GRD_ID AS NUMERIC(18,0)
    DECLARE @BOND_GRD_ID AS VARCHAR(128)
    
    SET @BOND_APR_ID = 0
    SET @LOG_STATUS = '0'
	SET @BOND_APR_DEDUCT_FROM_SAL = 1
	SET @BOND_APR_PENDING_AMOUNT = 0
	SET @DEDUCTION_TYPE='MONTHLY'
	SET @TRAN_TYPE ='I'
	SET @BOND_ID = 0
	SET @GRD_ID = 0
	SET @BOND_GRD_ID = 0
	 --IF (@TRAN_TYPE = 'I' OR @TRAN_TYPE='U')
		-- BEGIN
		 
		 ---- BOND IMPORT SHEET RESTRICTION -----
		 
			DECLARE @ROWNO INT,
			@TEMPROWNO INT;
			
			SELECT @ROWNO = MAX(T.ROW_NO) + 1 FROM T0080_IMPORT_LOG T WITH (NOLOCK) WHERE CMP_ID=@CMP_ID
			IF (@ROWNO IS NULL)
				SET @ROWNO = 1;
				
			SET @TEMPROWNO = @ROWNO;
			
			
			IF @EMP_CODE IS NULL 
			BEGIN
				INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,'','EMPLOYEE CODE CANNOT BE NULL','','ENETER VALID EMPLOYEE CODE',GETDATE(),'BOND APPROVAL',@GUID)  
				SET @ROWNO = @ROWNO + 1;
			END
			
			IF NOT EXISTS(SELECT 1 FROM V0080_EMPLOYEE_MASTER WHERE ALPHA_EMP_CODE=@EMP_CODE AND CMP_ID=@CMP_ID)
				BEGIN
					INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'EMPLOYEE CODE NOT EXIST',@EMP_CODE,'ENTER VALID EMPLOYEE CODE.',GETDATE(),'BOND APPROVAL',@GUID)  
					SET @ROWNO = @ROWNO + 1;
				END
			ELSE
				BEGIN
					SELECT @EMP_ID = EMP_ID,@GRD_ID = GRD_ID  FROM V0080_EMPLOYEE_MASTER WHERE ALPHA_EMP_CODE=@EMP_CODE AND CMP_ID=@CMP_ID
				END
			
			
			IF @BOND_NAME IS NULL
				BEGIN
					INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'BOND NAME IS NOT ENTERED','','ENTER VALID BOND NAME',GETDATE(),'BOND APPROVAL',@GUID)  
					SET @ROWNO = @ROWNO + 1;
				END
			
			IF NOT EXISTS(SELECT 1 FROM T0040_BOND_MASTER WITH (NOLOCK) WHERE BOND_NAME=@BOND_NAME AND CMP_ID=@CMP_ID)
				BEGIN
					INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'BOND DOES NOT EXIST WITH THIS NAME',@BOND_NAME,'PLEASE ENTER CORRECT BOND NAME',GETDATE(),'BOND APPROVAL',@GUID)  
					SET @ROWNO = @ROWNO + 1;
				END
			ELSE
				BEGIN
					DECLARE @BOND_MAX_LIMIT AS NUMERIC(18,2)
					SET @BOND_MAX_LIMIT = 0
					SELECT @BOND_MAX_LIMIT = BOND_AMOUNT,@BOND_GRD_ID = GRADE_DETAILS  FROM T0040_BOND_MASTER WITH (NOLOCK) WHERE BOND_NAME=@BOND_NAME AND CMP_ID=@CMP_ID
					
					IF(@GRD_ID <> 0) -- GRADE WISE BOND VALIDATION
						BEGIN
							IF @GRD_ID NOT IN (SELECT CAST(DATA AS NUMERIC) GRD_ID FROM DBO.SPLIT(@BOND_GRD_ID, '#') T WHERE ISNUMERIC(DATA) > 0)
								BEGIN
									INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'ENTER CORRECT GRADE WISE BOND NAME',@BOND_NAME,'ENTER CORRECT GRADE WISE BOND NAME',GETDATE(),'BOND APPROVAL',@GUID)  
									SET @ROWNO = @ROWNO + 1;
								END
						END
					
				END
			
			IF ISNULL(@BOND_APR_AMOUNT,0) = 0
				BEGIN
					INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'ENTER CORRECT BOND AMOUNT',@BOND_NAME,'ENTER CORRECT BOND AMOUNT',GETDATE(),'BOND APPROVAL',@GUID)  
					SET @ROWNO = @ROWNO + 1;
				END
			ELSE IF @BOND_APR_AMOUNT > @BOND_MAX_LIMIT
				BEGIN
					INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'BOND AMOUNT CANNOT BE GREATER THEN MAX LIMIT',@BOND_NAME,'ENTER CORRECT BOND AMOUNT',GETDATE(),'BOND APPROVAL',@GUID)  
					SET @ROWNO = @ROWNO + 1;
				END
			
			IF ISNULL(@BOND_APR_NO_OF_INSTALLMENT,0) = 0
				BEGIN
					INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'ENTER CORRECT BOND INSTALLMENT DETAILS',@BOND_NAME,'ENTER CORRECT BOND INSTALLMENT DETAILS',GETDATE(),'BOND APPROVAL',@GUID)  
					SET @ROWNO = @ROWNO + 1;
				END
			
			IF ISNULL(@BOND_APR_INSTALLMENT_AMOUNT,0) = 0
			BEGIN
				INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'ENTER CORRECT BOND INSTALLMENT AMOUNT ',@BOND_NAME,'ENTER CORRECT BOND INSTALLMENT AMOUNT',GETDATE(),'BOND APPROVAL',@GUID)  
				SET @ROWNO = @ROWNO + 1;
			END
			
			IF (@BOND_APR_AMOUNT < @BOND_APR_INSTALLMENT_AMOUNT)
			BEGIN
				INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'INVALID INSTALLMENT AMOUNT',@BOND_APR_INSTALLMENT_AMOUNT,'INSTALLMENT AMOUNT CANNOT BE GREATER THAN BOND AMOUNT.',GETDATE(),'BOND APPROVAL',@GUID)  
				SET @ROWNO = @ROWNO + 1;
			END
			IF (ISNULL(@BOND_APR_NO_OF_INSTALLMENT,0) = 0)
			BEGIN
				INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'INVALID VALUE "NO OF INSTALLMENT"',@BOND_APR_NO_OF_INSTALLMENT,'VALUE FOR NO OF INSTALLMENT FIELD MUST BE SUPPLIED.',GETDATE(),'BOND APPROVAL',@GUID)  
				SET @ROWNO = @ROWNO + 1;
			END
			
			IF @BOND_APR_DATE IS NULL
			BEGIN
				INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'INVALID BOND APPROVAL DATE"','','ENTER VALID BOND APPROVAL DATE.',GETDATE(),'BOND APPROVAL',@GUID)  
				SET @ROWNO = @ROWNO + 1;
			END
			
			IF @INSTALLMENT_START_DATE IS NULL
			BEGIN
				INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'INVALID INSTALLMENT START DATE"','','ENTER VALID BOND INSTALLMENT START DATE.',GETDATE(),'BOND APPROVAL',@GUID)  
				SET @ROWNO = @ROWNO + 1;
			END
			
			IF(@BOND_APR_DATE > @INSTALLMENT_START_DATE)
			BEGIN
				INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'BOND INSTALLMENT START DATE SHOULD GREATER THEN APPROVAL DATE"','','ENTER VALID BOND INSTALLMENT START DATE OR APPROVAL DATE.',GETDATE(),'BOND APPROVAL',@GUID)  
				SET @ROWNO = @ROWNO + 1;
			END
		
			IF EXISTS(SELECT 1 FROM T0200_MONTHLY_SALARY WITH (NOLOCK) WHERE CMP_ID = @CMP_ID AND EMP_ID = @EMP_ID AND MONTH_ST_DATE >= @INSTALLMENT_START_DATE)
			BEGIN
				INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'SALARY IS EXIST."','','ENTER VALID INSTALLMENT START DATE',GETDATE(),'BOND APPROVAL',@GUID)  
				SET @ROWNO = @ROWNO + 1;
			END
			
			IF (@ROWNO <> @TEMPROWNO)
			BEGIN
				SET @LOG_STATUS = '1';
				RETURN 0;
			END
	
	
		---- BOND IMPORT SHEET RESTRICTION -----
		-- END
		 
		 
	
	IF(ISNULL(@BOND_APR_NO_OF_INSTALLMENT,0) <> 0 AND ISNULL(@INSTALLMENT_START_DATE,'1900-01-01') <> '1900-01-01')
		BEGIN		
			SELECT @BOND_RETURN_DATE = DATEADD(MONTH, @BOND_APR_NO_OF_INSTALLMENT, @INSTALLMENT_START_DATE)
			SET @BOND_RETURN_MONTH = MONTH(@BOND_RETURN_DATE)
			SET @BOND_RETURN_YEAR = YEAR(@BOND_RETURN_DATE)
		END
	
		IF @TRAN_TYPE ='I' 
			BEGIN
				
				SELECT @EMP_ID = EMP_ID 
				FROM T0080_EMP_MASTER WITH (NOLOCK)
				WHERE ALPHA_EMP_CODE = @EMP_CODE AND CMP_ID = @CMP_ID			
				
				IF NOT EXISTS(	SELECT BOND_ID 
								FROM T0040_BOND_MASTER WITH (NOLOCK)
								WHERE  UPPER(BOND_NAME) = UPPER(@BOND_NAME) AND CMP_ID = @CMP_ID
							  ) 
					BEGIN	
						EXEC P0040_BOND_MASTER @BOND_ID OUTPUT,@CMP_ID,@BOND_NAME,@BOND_NAME,9999999,'Bond Added From Import Sheet',0,'',@TRAN_TYPE
					END
				ELSE
					BEGIN
						SELECT @BOND_ID = BOND_ID 
						FROM T0040_BOND_MASTER WITH (NOLOCK)
						WHERE BOND_NAME = @BOND_NAME AND CMP_ID=@CMP_ID
					END
									
				SELECT @BOND_APR_ID = ISNULL(MAX(BOND_APR_ID),0) + 1 	
				FROM T0120_BOND_APPROVAL WITH (NOLOCK)
				
				
				--IF @BOND_PAID_AMOUNT <> 0 COMMENTED BY RAJPUT AS OLD CONDITION
				--BEGIN
				--	SET @BOND_APR_AMOUNT = @BOND_APR_AMOUNT - @BOND_PAID_AMOUNT
				--END
				
				SET @BOND_APR_AMOUNT = @BOND_APR_AMOUNT
				IF @BOND_PAID_AMOUNT <> 0
				BEGIN
					SET @BOND_APR_PENDING_AMOUNT = @BOND_APR_AMOUNT - @BOND_PAID_AMOUNT
				END
				
				IF @NO_OF_INSTALLMENT_PAID <> 0 
				BEGIN
					IF @NO_OF_INSTALLMENT_PAID > @BOND_APR_NO_OF_INSTALLMENT
						SET @BOND_APR_NO_OF_INSTALLMENT = 0
					ELSE
						SET @BOND_APR_NO_OF_INSTALLMENT = @BOND_APR_NO_OF_INSTALLMENT
				END
				
				
				--IF @NO_OF_INSTALLMENT_PAID <> 0 COMMENTED BY RAJPUT ON 12112018 AS OLD CONDITION
				--BEGIN
				--	IF @NO_OF_INSTALLMENT_PAID > @BOND_APR_NO_OF_INSTALLMENT
				--		SET @BOND_APR_NO_OF_INSTALLMENT = 0
				--	ELSE
				--		SET @BOND_APR_NO_OF_INSTALLMENT = @BOND_APR_NO_OF_INSTALLMENT - @NO_OF_INSTALLMENT_PAID
				--END

			
				IF EXISTS (	SELECT	1 
							FROM	T0120_BOND_APPROVAL WITH (NOLOCK)
							WHERE	BOND_ID = @BOND_ID AND EMP_ID = @EMP_ID AND 
									BOND_APR_AMOUNT = @BOND_APR_AMOUNT AND BOND_APR_DATE = @BOND_APR_DATE AND 
									INSTALLMENT_START_DATE =  @INSTALLMENT_START_DATE 
							)
					BEGIN 
						
						INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'BOND WITH SAME DETAILS ALREADY EXIST',@BOND_NAME,'BOND WITH SAME DETAILS ALREADY EXIST',@BOND_APR_DATE,'BOND APPROVAL',@GUID)  
						SET @ROWNO = @ROWNO + 1;
						SET @LOG_STATUS = '1';
						RETURN 0;
					END

				
				INSERT INTO T0120_BOND_APPROVAL
					(
						 BOND_APR_ID
						,CMP_ID
						,EMP_ID
						,BOND_ID
						,BOND_APR_DATE
						,BOND_APR_CODE
						,BOND_APR_AMOUNT
						,BOND_APR_NO_OF_INSTALLMENT
						,BOND_APR_INSTALLMENT_AMOUNT
						,BOND_APR_DEDUCT_FROM_SAL
						,DEDUCTION_TYPE
						,INSTALLMENT_START_DATE
						,BOND_PAID_AMOUNT
						,NO_OF_INSTALLMENT_PAID
						,BOND_APR_PENDING_AMOUNT
						,BOND_APPROVAL_REMARKS
						,ATTACHMENT_PATH
						,BOND_RETURN_MODE
						,BOND_RETURN_MONTH
						,BOND_RETURN_YEAR
						,BOND_RETURN_STATUS
						,BOND_RETURN_DATE
						,PAYMENT_PROCESS_ID
					)

					VALUES   
					(
					 
						 @BOND_APR_ID
						,@CMP_ID
						,@EMP_ID
						,@BOND_ID
						,@BOND_APR_DATE
						,@BOND_APR_ID
						,@BOND_APR_AMOUNT
						,@BOND_APR_NO_OF_INSTALLMENT
						,@BOND_APR_INSTALLMENT_AMOUNT
						,@BOND_APR_DEDUCT_FROM_SAL
						,@DEDUCTION_TYPE
						,@INSTALLMENT_START_DATE
						,@BOND_PAID_AMOUNT
						,@NO_OF_INSTALLMENT_PAID
						,@BOND_APR_PENDING_AMOUNT
						,'OPENING IMPORT'
						,NULL
						,@BOND_RETURN_MODE
						,@BOND_RETURN_MONTH
						,@BOND_RETURN_YEAR
						,NULL
						,NULL
						,NULL
					) 
					
			---- INSTALLMENT DETAILS FIRST TIME ADD ----
			
			IF NOT EXISTS(	SELECT 1 FROM T0130_BOND_INSTALLMENT_DETAIL WITH (NOLOCK)
							WHERE CMP_ID=@CMP_ID AND BOND_APR_ID=@BOND_APR_ID AND EFFECTIVE_DATE=@INSTALLMENT_START_DATE)
				BEGIN
					
					SELECT @INSTALLMENT_ID = ISNULL(MAX(INSTALLMENT_ID),0) + 1 FROM T0130_BOND_INSTALLMENT_DETAIL WITH (NOLOCK)
					
					INSERT INTO T0130_BOND_INSTALLMENT_DETAIL(INSTALLMENT_ID,CMP_ID,EMP_ID,BOND_ID,BOND_APR_ID,EFFECTIVE_DATE,INSTALLMENT_AMT,SYSTEM_DATE)
					VALUES(@INSTALLMENT_ID,@CMP_ID,@EMP_ID,@BOND_ID,@BOND_APR_ID,@INSTALLMENT_START_DATE,@BOND_APR_INSTALLMENT_AMOUNT,GETDATE())
					
				END
			
			---- END ----
									
			END 
	ELSE IF @TRAN_TYPE ='U' 
				BEGIN
				
				SELECT	@EMP_ID = EMP_ID 
				FROM	T0080_EMP_MASTER WITH (NOLOCK)
				WHERE	ALPHA_EMP_CODE = @EMP_CODE AND CMP_ID = @CMP_ID
				
				ALTER TABLE T0120_BOND_APPROVAL DISABLE TRIGGER TRI_T0120_BOND_APPROVAL
				
				DELETE FROM T0120_BOND_APPROVAL WHERE BOND_apr_ID = @BOND_Apr_ID

				INSERT INTO T0120_BOND_APPROVAL
					(
						 BOND_APR_ID
						,CMP_ID
						,EMP_ID
						,BOND_ID
						,BOND_APR_DATE
						,BOND_APR_CODE
						,BOND_APR_AMOUNT
						,BOND_APR_NO_OF_INSTALLMENT
						,BOND_APR_INSTALLMENT_AMOUNT
						,BOND_APR_DEDUCT_FROM_SAL
						,DEDUCTION_TYPE
						,INSTALLMENT_START_DATE
						,BOND_PAID_AMOUNT
						,NO_OF_INSTALLMENT_PAID
						,BOND_APR_PENDING_AMOUNT
						,BOND_APPROVAL_REMARKS
						,ATTACHMENT_PATH
						,BOND_RETURN_MODE
						,BOND_RETURN_MONTH
						,BOND_RETURN_YEAR
						,BOND_RETURN_STATUS
						,BOND_RETURN_DATE
						,PAYMENT_PROCESS_ID
					)
					VALUES   
					(
						 @BOND_APR_ID
						,@CMP_ID
						,@EMP_ID
						,@BOND_ID
						,@BOND_APR_DATE
						,@BOND_APR_ID
						,@BOND_APR_AMOUNT
						,@BOND_APR_NO_OF_INSTALLMENT
						,@BOND_APR_INSTALLMENT_AMOUNT
						,@BOND_APR_DEDUCT_FROM_SAL
						,@DEDUCTION_TYPE
						,@INSTALLMENT_START_DATE
						,@BOND_PAID_AMOUNT
						,@NO_OF_INSTALLMENT_PAID
						,@BOND_APR_PENDING_AMOUNT
						,'OPENING IMPORT'
						,''
						,@BOND_RETURN_MODE
						,@BOND_RETURN_MONTH
						,@BOND_RETURN_YEAR
						,NULL
						,NULL
						,NULL
					) 
				
			ALTER TABLE T0120_BOND_APPROVAL ENABLE TRIGGER TRI_T0120_BOND_APPROVAL
				
			---- INSTALLMENT DETAILS FIRST TIME ADD ----
			
			IF NOT EXISTS(	SELECT 1 FROM T0130_BOND_INSTALLMENT_DETAIL WITH (NOLOCK)
							WHERE CMP_ID=@CMP_ID AND BOND_APR_ID=@BOND_APR_ID AND EFFECTIVE_DATE=@INSTALLMENT_START_DATE)
				BEGIN
					
					SELECT @INSTALLMENT_ID = ISNULL(MAX(INSTALLMENT_ID),0) + 1 FROM T0130_BOND_INSTALLMENT_DETAIL WITH (NOLOCK)
					
					INSERT INTO T0130_BOND_INSTALLMENT_DETAIL(INSTALLMENT_ID,CMP_ID,EMP_ID,BOND_ID,BOND_APR_ID,EFFECTIVE_DATE,INSTALLMENT_AMT,SYSTEM_DATE)
					VALUES(@INSTALLMENT_ID,@CMP_ID,@EMP_ID,@BOND_ID,@BOND_APR_ID,@INSTALLMENT_START_DATE,@BOND_APR_INSTALLMENT_AMOUNT,GETDATE())
					
				END
			
			---- END ----	
			
				END
				
	ELSE IF @TRAN_TYPE ='D'
		BEGIN
	
			DELETE FROM T0120_BOND_APPROVAL WHERE BOND_APR_ID = @BOND_APR_ID
			
		END	
	RETURN




