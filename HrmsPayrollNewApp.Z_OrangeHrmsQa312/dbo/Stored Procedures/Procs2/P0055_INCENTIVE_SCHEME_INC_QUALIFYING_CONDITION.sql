


---21/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[P0055_INCENTIVE_SCHEME_INC_QUALIFYING_CONDITION]
    @SCHEME_ID NUMERIC(18,0) 
   --,@ROW_ID NUMERIC(18,0)
   ,@INC_TRAN_ID NUMERIC(18,0)
   ,@INCENTIVE_NAME	VARCHAR(100)
   ,@SLAB_TYPE TINYINT
   ,@CALC_TYPE VARCHAR(100)
   ,@CALC_ON VARCHAR(100)
   ,@FROM_SLAB NUMERIC(18,2)
   ,@TO_SLAB NUMERIC(18,2)
   ,@SLAB_VALUE NUMERIC(18,2)
   ,@CONSIDER_PARA VARCHAR(100)
   ,@INCENTIVE_FOR VARCHAR(50)
   ,@TRAN_TYPE	Char(1)
AS

SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON

BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
  
 DECLARE @ROW_ID NUMERIC(18,0)	  
 
 IF @TRAN_TYPE  = 'Q'
	BEGIN	
		IF (@CONSIDER_PARA = '')
			SET @CONSIDER_PARA='--All--'
		IF EXISTS(SELECT 1 FROM dbo.T0055_INCENTIVE_SCHEME_INC WITH (NOLOCK) WHERE SCHEME_ID=@SCHEME_ID AND INCENTIVE_FOR=@INCENTIVE_FOR)
			BEGIN
			IF @SCHEME_ID <> 0
				BEGIN
						SELECT @ROW_ID = ISNULL(MAX(ROW_ID),0) + 1  FROM dbo.T0055_INCENTIVE_SCHEME_INC WITH (NOLOCK)
						INSERT INTO dbo.T0055_INCENTIVE_SCHEME_INC(SCHEME_ID,ROW_ID,INC_TRAN_ID,INCENTIVE_NAME,SLAB_TYPE,CALC_TYPE,CALC_ON,FROM_SLAB,TO_SLAB,SLAB_VALUE,CONSIDER_PARA,INCENTIVE_FOR)
						VALUES(@SCHEME_ID,@ROW_ID,@INC_TRAN_ID,@INCENTIVE_NAME,@SLAB_TYPE,@CALC_TYPE,@CALC_ON,@FROM_SLAB,@TO_SLAB,@SLAB_VALUE,@CONSIDER_PARA,@INCENTIVE_FOR) 
				END
			END  
		ELSE
		BEGIN
		
		
				IF EXISTS(SELECT 1 FROM DBO.T0050_INCENTIVE_SCHEME WITH (NOLOCK) WHERE SCHEME_ID=@SCHEME_ID) --ADDED ON 14022018 FOR INCENTIVE ADD IN OTHER SCHEME ID 
					BEGIN 
					
						IF NOT EXISTS(SELECT 1 FROM dbo.T0055_INCENTIVE_SCHEME_INC WITH (NOLOCK) WHERE SCHEME_ID=@SCHEME_ID AND INCENTIVE_NAME=@INCENTIVE_NAME
										AND INCENTIVE_FOR=@INCENTIVE_FOR)
							BEGIN
									IF NOT EXISTS(SELECT 1 FROM dbo.T0055_INCENTIVE_SCHEME_PARA WITH (NOLOCK) WHERE PARA_NAME=@INCENTIVE_NAME AND PARA_FOR=@INCENTIVE_FOR) -- CHECK INCENTIVE NAME SHOULD NOT DUPLICATE RESTRICTION
										BEGIN	
										
											SELECT @ROW_ID = ISNULL(MAX(ROW_ID),0) + 1  FROM dbo.T0055_INCENTIVE_SCHEME_INC WITH (NOLOCK)
											INSERT INTO dbo.T0055_INCENTIVE_SCHEME_INC(SCHEME_ID,ROW_ID,INC_TRAN_ID,INCENTIVE_NAME,SLAB_TYPE,CALC_TYPE,CALC_ON,FROM_SLAB,TO_SLAB,SLAB_VALUE,CONSIDER_PARA,INCENTIVE_FOR)
											VALUES(@SCHEME_ID,@ROW_ID,@INC_TRAN_ID,@INCENTIVE_NAME,@SLAB_TYPE,@CALC_TYPE,@CALC_ON,@FROM_SLAB,@TO_SLAB,@SLAB_VALUE,@CONSIDER_PARA,@INCENTIVE_FOR) 
										
										END
									ELSE
										BEGIN
										
											RAISERROR('@@ Invalid Qualifying Condition ! This Qualifying Condition Name Already Exist In Parameter. @@',16,2)
											RETURN
										END
							END
					END
				ELSE
					BEGIN
			
							SELECT @SCHEME_ID= MAX(SCHEME_ID) FROM dbo.T0050_INCENTIVE_SCHEME WITH (NOLOCK)
							SET @SCHEME_ID=@SCHEME_ID
							 
							IF NOT EXISTS(SELECT 1 FROM dbo.T0055_INCENTIVE_SCHEME_PARA WITH (NOLOCK) WHERE PARA_NAME=@INCENTIVE_NAME AND PARA_FOR=@INCENTIVE_FOR) -- CHECK INCENTIVE NAME SHOULD NOT DUPLICATE RESTRICTION
								BEGIN		
									IF @SCHEME_ID <> 0
										BEGIN
											SELECT @ROW_ID = ISNULL(MAX(ROW_ID),0) + 1  FROM dbo.T0055_INCENTIVE_SCHEME_INC WITH (NOLOCK)
											INSERT INTO dbo.T0055_INCENTIVE_SCHEME_INC(SCHEME_ID,ROW_ID,INC_TRAN_ID,INCENTIVE_NAME,SLAB_TYPE,CALC_TYPE,CALC_ON,FROM_SLAB,TO_SLAB,SLAB_VALUE,CONSIDER_PARA,INCENTIVE_FOR)
											VALUES(@SCHEME_ID,@ROW_ID,@INC_TRAN_ID,@INCENTIVE_NAME,@SLAB_TYPE,@CALC_TYPE,@CALC_ON,@FROM_SLAB,@TO_SLAB,@SLAB_VALUE,@CONSIDER_PARA,@INCENTIVE_FOR) 
										END
								END
							ELSE
								
									RAISERROR('@@ Invalid Qualifying Condition ! This Qualifying Condition Name Already Exist In Parameter. @@',16,2)
									RETURN
							END
					
					END
	END

END




