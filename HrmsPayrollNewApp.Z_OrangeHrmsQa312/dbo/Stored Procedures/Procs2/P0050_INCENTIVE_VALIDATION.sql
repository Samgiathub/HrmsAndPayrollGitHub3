


---20/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[P0050_INCENTIVE_VALIDATION]
    @EFFECTIVE_DATE DATETIME
   ,@CMP_ID NUMERIC(18,0)
   ,@BRANCH_ID NVARCHAR(MAX)
   ,@DESIG_ID NVARCHAR(MAX)
   ,@LOG_STATUS INT = 0 OUTPUT
   ,@TRAN_TYPE CHAR(1)
   ,@SCHEME_ID NUMERIC(18,0)
AS

SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON

BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	
	IF(@TRAN_TYPE='I' OR @TRAN_TYPE='E')
		BEGIN
			
			DECLARE @BRANCH NUMERIC(18,0)
			DECLARE @DESIG NUMERIC(18,0) 
			 
			IF @EFFECTIVE_DATE = ''
			BEGIN
				INSERT INTO DBO.T0080_IMPORT_LOG VALUES ('',@CMP_ID,0,'EFFECTIVE DATE IS NOT PROPERLY INSERTED',0,'ENTER PROPER EFFECTIVE DATE',GETDATE(),'INCENTIVE VALIDATION',0)						
				SET @LOG_STATUS=1			
				RETURN
			END
			
			IF @BRANCH_ID = ''
				BEGIN
					SET @LOG_STATUS = 0  
					RAISERROR('@@Atleast one branch must be selected.@@',16,2)  
					RETURN   
				END
				
			IF @DESIG_ID = ''
				BEGIN
					SET @LOG_STATUS = 0  
					RAISERROR('@@DESIGNATION NOT ASSIGN@@',16,2)  
					RETURN   
				END
			
			CREATE TABLE #TMP_SCHEME
			(	
				EFFECTIVE_DATE DATETIME,
				SCHEME_ID NUMERIC(18,0)
			)
			
			
			INSERT INTO #TMP_SCHEME
			SELECT EFFECTIVE_DATE,SCHEME_ID FROM DBO.T0050_INCENTIVE_SCHEME WITH (NOLOCK)
				WHERE CMP_ID=@CMP_ID AND EFFECTIVE_DATE=@EFFECTIVE_DATE
				
		    
			SELECT	@EFFECTIVE_DATE AS EFFECTIVE_DATE, B.BRANCH_ID, D.DESIG_ID
			INTO	#COMBINATIONS
			FROM	(SELECT CAST(DATA AS INT) AS BRANCH_ID FROM DBO.SPLIT(@BRANCH_ID, '#') WHERE DATA <>'') B
					CROSS JOIN (SELECT CAST(DATA AS INT) AS DESIG_ID FROM DBO.SPLIT(@DESIG_ID, '#') WHERE DATA <>'') D
			
			
			
			DECLARE @EXIST_RECORDS VARCHAR(MAX)
			SELECT	@EXIST_RECORDS = COALESCE(@EXIST_RECORDS + CHAR(10), '') + B.BRANCH_NAME + ' - ' + D.DESIG_NAME + ' :: ' + CONVERT(CHAR(10), T.EFFECTIVE_DATE, 103) + ',</BR>'
			FROM	#TMP_SCHEME	T
					CROSS APPLY (SELECT * FROM #COMBINATIONS C1 WHERE C1.EFFECTIVE_DATE=T.EFFECTIVE_DATE) C1
					INNER JOIN T0030_BRANCH_MASTER B WITH (NOLOCK) ON C1.BRANCH_ID=B.BRANCH_ID
					INNER JOIN T0040_DESIGNATION_MASTER D WITH (NOLOCK) ON C1.DESIG_ID=D.DESIG_ID
					
			WHERE	EXISTS(SELECT 1 
							FROM	T0055_INCENTIVE_SCHEME_DETAIL SD WITH (NOLOCK)
									INNER JOIN #COMBINATIONS C ON SD.BRANCH_ID=C.BRANCH_ID
							WHERE	T.SCHEME_ID=SD.SCHEME_ID AND C.BRANCH_ID=C1.BRANCH_ID AND T.SCHEME_ID <> @SCHEME_ID)
					AND EXISTS(SELECT 1 
							FROM	T0055_INCENTIVE_SCHEME_DETAIL SD WITH (NOLOCK)
									INNER JOIN #COMBINATIONS C ON SD.DESIG_ID=C.DESIG_ID
							WHERE	T.SCHEME_ID=SD.SCHEME_ID AND C.DESIG_ID=C1.DESIG_ID AND T.SCHEME_ID <> @SCHEME_ID)
							
			IF @EXIST_RECORDS IS NOT NULL AND @EXIST_RECORDS <> ''						
			SELECT @EXIST_RECORDS AS RECORDS
			
		END 
	ELSE IF (@TRAN_TYPE='D')
		BEGIN
			SELECT 1 FROM DBO.T0220_INCENTIVE_PROCESS  WITH (NOLOCK)
				WHERE SCHEME_ID=@SCHEME_ID AND CMP_ID=@CMP_ID
		END
	ELSE IF (@TRAN_TYPE='P')
		BEGIN
			
			DELETE FROM DBO.T0220_INCENTIVE_PROCESS  
				WHERE CMP_ID=@CMP_ID AND INC_TRAN_ID=@SCHEME_ID
		
		END
		
	--SELECT DISTINCT BRANCH_NAME as BRANCH,DESIGNATION_NAME as DESIGNATION FROM
	--(	
	--				SELECT    
	--				  CASE WHEN INC.BRANCH_ID IS NOT NULL THEN (SELECT BM1.BRANCH_NAME + ', ' FROM T0030_BRANCH_MASTER BM1 WHERE BRANCH_ID IN (SELECT BRANCH_ID FROM #FINAL_BRANCH_DESIGNATION) FOR XML PATH('')) ELSE 'ALL' END AS BRANCH_NAME
	--				, CASE WHEN INC.DESIG_ID IS NOT NULL THEN (SELECT DM1.DESIG_NAME + ', ' FROM T0040_DESIGNATION_MASTER DM1 WHERE DESIG_ID IN (SELECT DESIG_ID FROM #FINAL_BRANCH_DESIGNATION) FOR XML PATH('')) ELSE 'ALL' END AS DESIGNATION_NAME
	--				  FROM #FINAL_BRANCH_DESIGNATION INC LEFT OUTER JOIN
	--				  T0030_BRANCH_MASTER  ON  
	--				  INC.CMP_ID = DBO.T0030_BRANCH_MASTER.CMP_ID
	--				  LEFT OUTER JOIN
	--				  T0040_DESIGNATION_MASTER  ON  
	--				  INC.CMP_ID = DBO.T0040_DESIGNATION_MASTER.CMP_ID
		              
	--) TAB1 ORDER BY BRANCH_NAME,DESIGNATION_NAME
	
	
		
END




