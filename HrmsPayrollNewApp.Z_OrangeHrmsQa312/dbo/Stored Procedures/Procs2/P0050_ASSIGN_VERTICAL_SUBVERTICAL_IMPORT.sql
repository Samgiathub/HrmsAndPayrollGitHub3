
---20/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[P0050_ASSIGN_VERTICAL_SUBVERTICAL_IMPORT]
	 @CMP_ID						NUMERIC(18,0)
	,@EMP_CODE						VARCHAR(50)
	,@OUTLET						VARCHAR(300)	
	,@DISTRIBUTOR					VARCHAR(300)	
	,@EFFECTIVE_DATE		DATETIME
	,@LOG_STATUS					VARCHAR(10)	OUTPUT		
	,@GUID							VARCHAR(2000) = ''
	
AS
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON  
      
    DECLARE @TRAN_TYPE VARCHAR(1)
    DECLARE @TRAN_ID AS NUMERIC(18,0)
    DECLARE @EMP_ID AS NUMERIC(18,0) 
    DECLARE @VERTICAL_ID AS NUMERIC(18,0)
    DECLARE @SUBVERTICAL_ID AS NUMERIC(18,0)
    SET @VERTICAL_ID = 0
    SET @SUBVERTICAL_ID = 0
	SET @TRAN_TYPE ='I'
	SET @TRAN_ID = 0
	
 
	DECLARE @ROWNO INT,
	@TEMPROWNO INT;
	
	
IF NOT EXISTS(SELECT 1 FROM T0040_VERTICAL_SEGMENT WITH (NOLOCK) WHERE VERTICAL_NAME = @DISTRIBUTOR AND CMP_ID = @CMP_ID)
	BEGIN
		SELECT @VERTICAL_ID = MAX(VERTICAL_ID) + 1 FROM T0040_VERTICAL_SEGMENT WITH (NOLOCK)
		
		INSERT INTO T0040_VERTICAL_SEGMENT(VERTICAL_ID,CMP_ID,VERTICAL_CODE,VERTICAL_NAME,VERTICAL_DESCRIPTION)	
		VALUES(@VERTICAL_ID,@CMP_ID,@DISTRIBUTOR,@DISTRIBUTOR,'')
	END
ELSE
	BEGIN
		SELECT @VERTICAL_ID = VERTICAL_ID FROM T0040_VERTICAL_SEGMENT WITH (NOLOCK) WHERE CMP_ID = @CMP_ID AND VERTICAL_NAME = @DISTRIBUTOR
	END
				
IF NOT EXISTS(SELECT 1 FROM T0050_SubVertical WITH (NOLOCK) WHERE SUBVERTICAL_NAME = @OUTLET AND Vertical_ID = @VERTICAL_ID AND CMP_ID = @CMP_ID)
	BEGIN
		SELECT @SUBVERTICAL_ID = MAX(SUBVERTICAL_ID) + 1 FROM T0050_SUBVERTICAL WITH (NOLOCK) 
		
		INSERT INTO T0050_SUBVERTICAL(SUBVERTICAL_ID,CMP_ID,VERTICAL_ID,SUBVERTICAL_CODE,SUBVERTICAL_NAME,SUBVERTICAL_DESCRIPTION)	
		VALUES(@SUBVERTICAL_ID,@CMP_ID,@VERTICAL_ID,@OUTLET,@OUTLET,'')
	END
RETURN

	
	SELECT @ROWNO = MAX(T.ROW_NO) + 1 FROM T0080_IMPORT_LOG T WITH (NOLOCK) WHERE CMP_ID=@CMP_ID
	IF (@ROWNO IS NULL)
		SET @ROWNO = 1;
				
	SET @TEMPROWNO = @ROWNO;
			
			
			--IF @EMP_CODE IS NULL 
			--BEGIN
			--	INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,'','EMPLOYEE CODE CANNOT BE NULL','','ENETER VALID EMPLOYEE CODE',GETDATE(),'ASSIGN VERTICAL SUBVERTICAL',@GUID)  
			--	SET @ROWNO = @ROWNO + 1;
			--END
			
			--IF NOT EXISTS(SELECT 1 FROM V0080_EMPLOYEE_MASTER WHERE ALPHA_EMP_CODE=@EMP_CODE AND CMP_ID=@CMP_ID)
			--	BEGIN
			--		INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'EMPLOYEE CODE NOT EXIST',@EMP_CODE,'ENTER VALID EMPLOYEE CODE.',GETDATE(),'ASSIGN VERTICAL SUBVERTICAL',@GUID)  
			--		SET @ROWNO = @ROWNO + 1;
			--	END
			
			
			
			IF @DISTRIBUTOR IS NULL
				BEGIN
					INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'DISTRIBUTOR IS NOT ENTERED','','ENTER VALID DISTRIBUTOR NAME',GETDATE(),'ASSIGN VERTICAL SUBVERTICAL',@GUID)  
					SET @ROWNO = @ROWNO + 1;
				END
				
			IF @OUTLET IS NULL
				BEGIN
					INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'OUTLET IS NOT ENTERED','','ENTER VALID OUTLET NAME',GETDATE(),'ASSIGN VERTICAL SUBVERTICAL',@GUID)  
					SET @ROWNO = @ROWNO + 1;
				END
			
			IF NOT EXISTS(SELECT 1 FROM T0040_VERTICAL_SEGMENT WITH (NOLOCK) WHERE VERTICAL_NAME=@DISTRIBUTOR AND CMP_ID = @CMP_ID)
				BEGIN
				
					SELECT @VERTICAL_ID = MAX(VERTICAL_ID) + 1 FROM T0040_VERTICAL_SEGMENT WITH (NOLOCK)
					
					INSERT INTO T0040_VERTICAL_SEGMENT
						(
							VERTICAL_ID,
							CMP_ID,
							VERTICAL_CODE,
							VERTICAL_NAME,
							VERTICAL_DESCRIPTION
						)	
					VALUES
						(
							@VERTICAL_ID,
							@CMP_ID,
							@DISTRIBUTOR,
							@DISTRIBUTOR,
							''
						)
					
					
				END
			ELSE
				BEGIN
				
					SELECT @VERTICAL_ID = VERTICAL_ID 
					FROM T0040_VERTICAL_SEGMENT WITH (NOLOCK)
					WHERE CMP_ID = @CMP_ID AND VERTICAL_NAME = @DISTRIBUTOR
					
				END
				
			IF NOT EXISTS(SELECT 1 FROM T0050_SubVertical WITH (NOLOCK) WHERE SUBVERTICAL_NAME=@OUTLET AND isnull(@VERTICAL_ID,0) <> 0 AND CMP_ID = @CMP_ID)
				BEGIN
				
					SELECT @SUBVERTICAL_ID = MAX(SUBVERTICAL_ID) + 1 FROM T0050_SUBVERTICAL WITH (NOLOCK)
					
					INSERT INTO T0050_SUBVERTICAL
						(
							SUBVERTICAL_ID,
							CMP_ID,
							VERTICAL_ID,
							SUBVERTICAL_CODE,
							SUBVERTICAL_NAME,
							SUBVERTICAL_DESCRIPTION
						)	
					VALUES
						(
							@SUBVERTICAL_ID,
							@CMP_ID,
							@VERTICAL_ID,
							@OUTLET,
							@OUTLET,
							''
						)
				END
			
			
		
			IF (@ROWNO <> @TEMPROWNO)
			BEGIN
				SET @LOG_STATUS = '1';
				RETURN 0;
			END
	
	
		---- BOND IMPORT SHEET RESTRICTION -----
		-- END
		 
		 
	

		IF @TRAN_TYPE ='I' AND @EMP_CODE IS NOT NULL 
			BEGIN
				
				SELECT @EMP_ID = EMP_ID 
				FROM T0080_EMP_MASTER WITH (NOLOCK)
				WHERE ALPHA_EMP_CODE = @EMP_CODE AND CMP_ID = @CMP_ID			
									
				SELECT @TRAN_ID = ISNULL(MAX(TRAN_ID),0) + 1 	
				FROM T0050_ASSIGN_VERTICALSUBVERTICAL WITH (NOLOCK)
				
			
				IF EXISTS (	SELECT	1 
							FROM	T0050_ASSIGN_VERTICALSUBVERTICAL WITH (NOLOCK)
							WHERE	EMP_ID = @EMP_ID AND 
									EFFECTIVE_DATE =  @EFFECTIVE_DATE
							)
					BEGIN 
						
						INSERT INTO dbo.T0080_IMPORT_LOG VALUES (@ROWNO,@CMP_ID,@EMP_CODE,'VERTICAL WITH SAME DETAILS ALREADY EXIST',@DISTRIBUTOR,'VERTICAL WITH SAME DETAILS ALREADY EXIST',@EFFECTIVE_DATE,'ASSIGN VERTICAL SUBVERTICAL',@GUID)  
						SET @ROWNO = @ROWNO + 1;
						SET @LOG_STATUS = '1';
						RETURN 0;
					END
				
				
				INSERT INTO T0050_ASSIGN_VERTICALSUBVERTICAL
					(
						 TRAN_ID
						,CMP_ID
						,EMP_ID
						,EFFECTIVE_DATE
						,VERTICAL_ID
						,USER_ID
					)

					VALUES   
					(
					 
						 @TRAN_ID
						,@CMP_ID
						,@EMP_ID
						,@EFFECTIVE_DATE
						,@VERTICAL_ID
						,0
					) 
					
		
									
			END 
	
	RETURN




