


---21/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[P0040_INCENTIVE_RECORD_GET]
    @CMP_ID NUMERIC
   ,@SCHEME_ID	NUMERIC = 0
   ,@PARA_CONSTRAINT NVARCHAR(MAX)
   ,@TRAN_TYPE	CHAR(1)
   
AS

SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON


BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
 		IF(@TRAN_TYPE='P')
			BEGIN
				CREATE TABLE #PARA_MASTER (PARA_ID NUMERIC, FROM_SLAB NUMERIC(18,2), TO_SLAB NUMERIC(18,2),ROW_ID NUMERIC(18,0),SLAB_VALUE NUMERIC(18,2),PARA_NAME VARCHAR(100),P_FORMULA NVARCHAR(MAX),PARA_FOR VARCHAR(50));
			
				IF @SCHEME_ID = 0
					BEGIN
						INSERT INTO #PARA_MASTER (ROW_ID,PARA_ID, FROM_SLAB, TO_SLAB,SLAB_VALUE,PARA_NAME,P_FORMULA,PARA_FOR)
						SELECT	PD.ROW_ID,PD.PARA_ID, PD.FROM_SLAB, PD.TO_SLAB,PD.SLAB_VALUE,PD.PARA_NAME,'' AS P_FORMULA,PD.PARA_FOR 
						FROM	T0045_PARAMETER_DETAIL PD WITH (NOLOCK)
								INNER JOIN (SELECT CAST(DATA AS NUMERIC) AS PARA_ID FROM dbo.Split(@PARA_CONSTRAINT, '#') T WHERE DATA <> '') T ON PD.Para_Id=T.PARA_ID
								
						SELECT PM.PARA_ID,PM.PARA_NAME,0 as SCHEME_ID,'' AS P_FORMULA,PARA_FOR
						FROM T0040_PARAMETER_MASTER  PM WITH (NOLOCK)
						WHERE EXISTS(SELECT 1 FROM #PARA_MASTER	PT WHERE PM.Para_Id=PT.PARA_ID)
					END
				ELSE
					BEGIN
						--SELECT PARA_ID IN ONE CELL 
						SELECT @PARA_CONSTRAINT = COALESCE(@PARA_CONSTRAINT + '#', '') + CAST(PARA_ID AS VARCHAR)
						FROM   (SELECT DISTINCT PARA_ID FROM T0055_INCENTIVE_SCHEME_PARA WITH (NOLOCK) WHERE SCHEME_ID=@SCHEME_ID) INC
						SET @PARA_CONSTRAINT=@PARA_CONSTRAINT
						
						INSERT INTO #PARA_MASTER (ROW_ID,PARA_ID, FROM_SLAB, TO_SLAB,SLAB_VALUE,PARA_NAME,P_FORMULA,PARA_FOR)
						SELECT	PD.ROW_ID,PD.PARA_ID, PD.FROM_SLAB, PD.TO_SLAB,PD.SLAB_VALUE,PD.PARA_NAME,PD.P_FORMULA,PD.PARA_FOR 
						FROM	T0055_INCENTIVE_SCHEME_PARA PD WITH (NOLOCK)
						INNER JOIN (SELECT CAST(DATA AS NUMERIC) AS PARA_ID FROM dbo.Split(@PARA_CONSTRAINT, '#') T WHERE DATA <> '') T ON PD.Para_Id=T.PARA_ID
						WHERE	PD.SCHEME_ID = @SCHEME_ID
							
						SELECT DISTINCT PM.PARA_ID,PM.PARA_NAME,PM.SCHEME_ID,PM.P_FORMULA,PM.PARA_FOR 
						FROM T0055_INCENTIVE_SCHEME_PARA  PM WITH (NOLOCK) -- PARAMETER MASTER TABLE REMOVE EDIT TIME DYNAMIC PARAMETER NAME PM.PARA_FOR ADDED ON 31012018 FOR PARA-STATUS
				   		WHERE EXISTS(SELECT 1 FROM #PARA_MASTER	PT WHERE PM.Para_Id=PT.PARA_ID) AND PM.SCHEME_ID=@SCHEME_ID ORDER BY PM.PARA_NAME   -- ADDED ON 05022018 ORDER BY PM.PARA_NAME   
					
						
					END
					
				SELECT * FROM #PARA_MASTER ORDER BY FROM_SLAB,TO_SLAB
	 		
		END	
		
		IF(@TRAN_TYPE='I')
			BEGIN
			
			
			IF @SCHEME_ID = 0
				BEGIN
				
					SELECT IM.INC_TRAN_ID,IM.INCENTIVE_NAME,0 as SCHEME_ID,IM.CALC_ON,IM.CALC_TYPE,IM.SLAB_TYPE,'' AS CONSIDER_PARA
					FROM T0040_INCENTIVE_MASTER  IM WITH (NOLOCK)
					INNER JOIN (SELECT CAST(DATA AS NUMERIC) AS INC_TRAN_ID FROM dbo.Split(@PARA_CONSTRAINT, '#') T WHERE DATA <> '') T ON IM.INC_TRAN_ID=T.INC_TRAN_ID
					--EXISTS(SELECT 1 FROM dbo.T0045_INCENTIVE_DETAIL SM WHERE IM.Inc_Tran_ID=SM.INC_TRAN_ID)
					
					SELECT	ID.ROW_ID,ID.INC_TRAN_ID,ID.INCENTIVE_NAME,ID.SLAB_TYPE,ID.CALC_TYPE,
					ID.CALC_ON,ID.FROM_SLAB,ID.TO_SLAB,ID.SLAB_VALUE,'' AS CONSIDER_PARA
					FROM	T0045_INCENTIVE_DETAIL ID WITH (NOLOCK)
							INNER JOIN (SELECT CAST(DATA AS NUMERIC) AS INC_TRAN_ID FROM dbo.Split(@PARA_CONSTRAINT, '#') T WHERE DATA <> '') T ON ID.INC_TRAN_ID=T.INC_TRAN_ID
				
					
				END
			ELSE
				BEGIN
					
					
					-- Manager Multiple Id in One Cell
					SELECT @PARA_CONSTRAINT = COALESCE(@PARA_CONSTRAINT + '#', '') + CAST(INC_TRAN_ID AS VARCHAR)
					FROM   (SELECT DISTINCT INC_TRAN_ID FROM T0055_INCENTIVE_SCHEME_INC WITH (NOLOCK) WHERE SCHEME_ID=@SCHEME_ID) INC
					SET @PARA_CONSTRAINT=@PARA_CONSTRAINT
					
					SELECT	PD.ROW_ID,PD.INC_TRAN_ID,PD.INCENTIVE_NAME,PD.SLAB_TYPE,PD.CALC_TYPE,
					PD.CALC_ON,PD.FROM_SLAB,PD.TO_SLAB,PD.SLAB_VALUE,PD.CONSIDER_PARA,PD.INCENTIVE_FOR 
					INTO #INCENTIVE_MASTER
					FROM	T0055_INCENTIVE_SCHEME_INC PD WITH (NOLOCK)
					INNER JOIN (SELECT CAST(DATA AS NUMERIC) AS INC_TRAN_ID FROM dbo.Split(@PARA_CONSTRAINT, '#') T WHERE DATA <> '') T ON PD.INC_TRAN_ID=T.INC_TRAN_ID
							WHERE	PD.SCHEME_ID = @SCHEME_ID
						
					SELECT DISTINCT IC.INC_TRAN_ID,IC.INCENTIVE_NAME,IC.SCHEME_ID,IC.CALC_ON,IC.CALC_TYPE,IC.SLAB_TYPE,IC.CONSIDER_PARA
					FROM T0055_INCENTIVE_SCHEME_INC IC WITH (NOLOCK) -- REMOVE T0040_INCENTIVE_MASTER TAKE INCENTIVE NAME FROM T0055_INCENTIVE_SCHEME_INC
				   			WHERE EXISTS(SELECT 1 FROM #INCENTIVE_MASTER IND WHERE IC.INC_TRAN_ID=IND.INC_TRAN_ID) AND IC.SCHEME_ID=@SCHEME_ID
							AND IC.INCENTIVE_FOR='INCENTIVE'
					--SELECT	DISTINCT PARA_NAME 
					--FROM	T0055_INCENTIVE_SCHEME_PARA  PM
					--WHERE	SCHEME_ID=@SCHEME_ID
				   	SELECT * FROM #INCENTIVE_MASTER IM WHERE IM.INCENTIVE_FOR='INCENTIVE' ORDER BY FROM_SLAB,TO_SLAB
					DROP TABLE #INCENTIVE_MASTER
						
				END
				
			--SELECT * FROM T0040_INCENTIVE_MASTER
	 		--SET @PARA_VALUE=REPLACE(@PARA_VALUE,'#',',')
	 		--SELECT * FROM dbo.Split(@PARA_VALUE, ',') T INNER JOIN T0040_PARAMETER_MASTER P ON CAST(T.DATA AS NUMERIC) = P.PARA_ID
		END	
		
		IF (@TRAN_TYPE='E')
			BEGIN
				
				SELECT DISTINCT SCHEME_ID,CMP_ID,EFFECTIVE_DATE,DESIG_ID,BRANCH_ID,BRANCH_NAME as BRANCH,DESIGNATION_NAME as DESIGNATION FROM
				(
					  SELECT    INC.SCHEME_ID, INC.CMP_ID,INC.EFFECTIVE_DATE, INC.DESIG_ID, 
					  INC.BRANCH_ID,
					  CASE WHEN INC.BRANCH_ID IS NOT NULL THEN (SELECT BM1.BRANCH_NAME + ', ' FROM T0030_BRANCH_MASTER BM1 WITH (NOLOCK) WHERE BRANCH_ID IN (SELECT CAST(DATA AS NUMERIC(18,0)) FROM DBO.SPLIT(ISNULL(INC.BRANCH_ID,'0'),'#')) FOR XML PATH('')) ELSE 'ALL' END AS BRANCH_NAME
					, CASE WHEN INC.DESIG_ID IS NOT NULL THEN (SELECT DM1.DESIG_NAME + ', ' FROM T0040_DESIGNATION_MASTER DM1 WITH (NOLOCK) WHERE DESIG_ID IN (SELECT CAST(DATA AS NUMERIC(18,0)) FROM DBO.SPLIT(ISNULL(INC.DESIG_ID,'0'),'#')) FOR XML PATH('')) ELSE 'ALL' END AS DESIGNATION_NAME
					  FROM T0050_INCENTIVE_SCHEME INC WITH (NOLOCK) LEFT OUTER JOIN
					  T0030_BRANCH_MASTER WITH (NOLOCK) ON  
					  INC.CMP_ID = DBO.T0030_BRANCH_MASTER.CMP_ID
					  LEFT OUTER JOIN
					  T0040_DESIGNATION_MASTER WITH (NOLOCK) ON  
					  INC.CMP_ID = DBO.T0040_DESIGNATION_MASTER.CMP_ID
		              
				 ) TAB1 where CMP_ID=@CMP_ID
						ORDER BY BRANCH_NAME,DESIGNATION_NAME
						
			END
	
		 -- ADDED ON 30012018 FOR QUALIFYING CONDITION - DEDUCTION PART
		IF(@TRAN_TYPE='Q')
			BEGIN
			
			IF @SCHEME_ID = 0
				BEGIN
				
					SELECT IM.INC_TRAN_ID,IM.INCENTIVE_NAME,0 as SCHEME_ID,IM.CALC_ON,IM.CALC_TYPE,IM.SLAB_TYPE,'' AS CONSIDER_PARA,IM.INCENTIVE_FOR
					FROM T0040_INCENTIVE_MASTER  IM WITH (NOLOCK)
					INNER JOIN (SELECT CAST(DATA AS NUMERIC) AS INC_TRAN_ID FROM dbo.Split(@PARA_CONSTRAINT, '#') T WHERE DATA <> '') T ON IM.INC_TRAN_ID=T.INC_TRAN_ID
					
					SELECT	ID.ROW_ID,ID.INC_TRAN_ID,ID.INCENTIVE_NAME,ID.SLAB_TYPE,ID.CALC_TYPE,
					ID.CALC_ON,ID.FROM_SLAB,ID.TO_SLAB,ID.SLAB_VALUE,'' AS CONSIDER_PARA,ID.INCENTIVE_FOR
					FROM	T0045_INCENTIVE_DETAIL ID WITH (NOLOCK)
							INNER JOIN (SELECT CAST(DATA AS NUMERIC) AS INC_TRAN_ID FROM dbo.Split(@PARA_CONSTRAINT, '#') T WHERE DATA <> '') T ON ID.INC_TRAN_ID=T.INC_TRAN_ID
				
					
				END
			ELSE
				BEGIN
					
				
					-- Manager Multiple Id in One Cell
					SELECT @PARA_CONSTRAINT = COALESCE(@PARA_CONSTRAINT + '#', '') + CAST(INC_TRAN_ID AS VARCHAR)
					FROM   (SELECT DISTINCT INC_TRAN_ID FROM T0055_INCENTIVE_SCHEME_INC WITH (NOLOCK) WHERE SCHEME_ID=@SCHEME_ID) INC
					SET @PARA_CONSTRAINT=@PARA_CONSTRAINT
					
					
					SELECT	PD.ROW_ID,PD.INC_TRAN_ID,PD.INCENTIVE_NAME,PD.SLAB_TYPE,PD.CALC_TYPE,
					PD.CALC_ON,PD.FROM_SLAB,PD.TO_SLAB,PD.SLAB_VALUE,PD.CONSIDER_PARA,PD.INCENTIVE_FOR 
					INTO #INCENTIVE_MASTER_QUALIFYING
					FROM	T0055_INCENTIVE_SCHEME_INC PD WITH (NOLOCK)
					INNER JOIN (SELECT CAST(DATA AS NUMERIC) AS INC_TRAN_ID FROM dbo.Split(@PARA_CONSTRAINT, '#') T WHERE DATA <> '') T ON PD.INC_TRAN_ID=T.INC_TRAN_ID
							WHERE	PD.SCHEME_ID = @SCHEME_ID AND PD.INCENTIVE_FOR='Deduction'
						
					SELECT DISTINCT IC.INC_TRAN_ID,IC.INCENTIVE_NAME,IC.SCHEME_ID,IC.CALC_ON,IC.CALC_TYPE,IC.SLAB_TYPE,IC.CONSIDER_PARA,IC.INCENTIVE_FOR 
					FROM T0055_INCENTIVE_SCHEME_INC IC WITH (NOLOCK) -- REMOVE T0040_INCENTIVE_MASTER TAKE INCENTIVE NAME FROM T0055_INCENTIVE_SCHEME_INC
				   			WHERE EXISTS(SELECT 1 FROM #INCENTIVE_MASTER_QUALIFYING IND WHERE IC.INC_TRAN_ID=IND.INC_TRAN_ID) 
				   			AND IC.SCHEME_ID=@SCHEME_ID AND IC.INCENTIVE_FOR='Deduction'
					
					
				   	SELECT * FROM #INCENTIVE_MASTER_QUALIFYING ORDER BY FROM_SLAB,TO_SLAB
					DROP TABLE #INCENTIVE_MASTER_QUALIFYING
						
				END
				
			
		END		 	
		
		IF (@TRAN_TYPE='W') -- ADDED ON 08022018 FOR SCHEME EXPORT IN EXCEL/PDF FORMAT
			BEGIN
				
				--SELECT PARA_NAME,FROM_SLAB,TO_SLAB,SLAB_VALUE FROM DBO.T0055_INCENTIVE_SCHEME_PARA 
				--WHERE  SCHEME_ID=@SCHEME_ID
					
				SELECT	SCHEME_ID, INC_TRAN_ID,INCENTIVE_NAME,FROM_SLAB,TO_SLAB,SLAB_VALUE
				INTO #INCENTIVE_SCHEME_PARAMETER_INCENTIVE_TEMP
				FROM DBO.T0055_INCENTIVE_SCHEME_INC WITH (NOLOCK)
				WHERE SCHEME_ID=@SCHEME_ID
				
			
				SELECT	CASE WHEN ROW_ID = 1 THEN  SR_NO ELSE NULL END AS SR_NO,CASE WHEN ROW_ID=1 THEN T.INCENTIVE_NAME ELSE NULL END AS INCENTIVE_NAME,
				T.FROM_SLAB, T.TO_SLAB, T.SLAB_VALUE,'' AS WEIGHTAGE
				FROM	(
						SELECT TOP 100 ROW_NUMBER() OVER(PARTITION BY INC_TRAN_ID ORDER BY SCHEME_ID,INC_TRAN_ID) AS ROW_ID, INC1.ROW_NO AS SR_NO,INC.*
						FROM 	#INCENTIVE_SCHEME_PARAMETER_INCENTIVE_TEMP INC
								LEFT OUTER JOIN (SELECT	ROW_NUMBER() OVER(ORDER  BY INC1.INCENTIVE_NAME) ROW_NO, INC1.INCENTIVE_NAME
												 FROM	(SELECT DISTINCT INC1.INCENTIVE_NAME FROM #INCENTIVE_SCHEME_PARAMETER_INCENTIVE_TEMP INC1) INC1
												 ) INC1 ON INC.INCENTIVE_NAME=INC1.INCENTIVE_NAME
						) T
				
				ORDER BY T.SR_NO, T.FROM_SLAB 
				
				
			END
END




