
---25/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[P0095_GPF_OPENING_IMPORT]
  @Alpha_Emp_Code as varchar(50)
 ,@CMP_ID as numeric(18,0)
 ,@FOR_DATE  as datetime
 ,@OPENING AS NUMERIC(18,4)
 ,@Log_Status Int = 0 Output
 ,@Row_No int = 0
 ,@GUID Varchar(2000) = '' --Added by nilesh patel on 14062016
AS
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON

		DECLARE @EMP_ID NUMERIC(18,0);		
		DECLARE @TRAN_ID NUMERIC(18,0);
		DECLARE @MODULE VARCHAR(20);
		
		SET @MODULE = 'GPF OPENING';
		
		
		
		SET @EMP_ID = NULL;
		SELECT @EMP_ID=EMP_ID FROM T0080_EMP_MASTER WITH (NOLOCK) WHERE Alpha_Emp_Code=@Alpha_Emp_Code And Cmp_ID=@Cmp_Id
		
		If @OPENING Is Null
			Set @OPENING = 0	
		
		
		IF @FOR_DATE is null
		BEGIN			
			SET @Log_Status=1
			INSERT INTO dbo.T0080_Import_Log VALUES (@Row_No,@Cmp_Id,@FOR_DATE ,'Opening Date',GETDATE(),'GPF Opening Date cannot be blank.',GetDate(),@MODULE,@GUID)
			RETURN
		END
    
		IF ISNULL(@EMP_ID,0) =0
		BEGIN			
			SET @Log_Status=1
			INSERT INTO dbo.T0080_Import_Log VALUES (@Row_No,@Cmp_Id,@Alpha_Emp_Code ,'Employee Doesn''t exists',@Alpha_Emp_Code,'Enter proper Employee Code',GetDate(),@MODULE,@GUID)			
			RETURN
		END

		DECLARE @TRAN_TYPE VARCHAR(5)
		
		SET @TRAN_ID = NULL;
		SELECT @TRAN_ID=Tran_ID FROM dbo.T0095_GPF_OPENING WITH (NOLOCK) WHERE CMP_ID=@CMP_ID AND Emp_ID=@EMP_ID AND For_Date=@FOR_DATE
		
		IF ISNULL(@TRAN_ID,0) > 0
			SET @TRAN_TYPE = 'U'
		ELSE
			SET @TRAN_TYPE = 'I'
		
		
		IF @TRAN_TYPE = 'I'
			BEGIN			
				--FOR GPF_OPENING TABLE
				SELECT @TRAN_ID = ISNULL(MAX(TRAN_ID),0) + 1 FROM dbo.T0095_GPF_OPENING WITH (NOLOCK)
				
				INSERT INTO dbo.T0095_GPF_OPENING
						   (Cmp_ID, Tran_ID, Emp_ID, For_Date, GPF_Opening, SystemDate)
				VALUES     (@CMP_ID,@TRAN_ID,@EMP_ID,@FOR_DATE,@OPENING,GETDATE())	
												
			END
		ELSE IF @Tran_Type = 'U'
			BEGIN
				UPDATE	dbo.T0095_GPF_OPENING	
				SET		GPF_Opening = @OPENING,
						SystemDate  = GETDATE()
				WHERE	Tran_ID=@TRAN_ID AND Cmp_ID=@CMP_ID AND Emp_ID=@EMP_ID				
			END
		
		
		
		--FOR GPF_OPENING TABLE
		SELECT	TOP 1 @TRAN_ID = TRAN_ID 
		FROM	dbo.T0140_EMP_GPF_TRANSACTION  WITH (NOLOCK)
		WHERE	FOR_DATE < @FOR_DATE AND CMP_ID=@CMP_ID AND EMP_ID=@EMP_ID
		ORDER BY FOR_DATE DESC
		
		
		
		--POSTING GPF CLOSING AMOUNT
		UPDATE	dbo.T0140_EMP_GPF_TRANSACTION 
		SET		GPF_POSTING = CASE WHEN GPF_CLOSING <> 0 THEN GPF_CLOSING ELSE GPF_POSTING END,
				GPF_CLOSING = 0
		WHERE	CMP_ID=@CMP_ID AND EMP_ID=@EMP_ID AND TRAN_ID=@TRAN_ID
						
		--CREATING NEW OR UPDATING EXISTING OPENING RECORD
		SET		@TRAN_ID = NULL;
		
		SELECT	@TRAN_ID = TRAN_ID 
		FROM	T0140_EMP_GPF_TRANSACTION WITH (NOLOCK)
		WHERE	CMP_ID=@CMP_ID AND EMP_ID=@EMP_ID AND FOR_DATE=@FOR_DATE
		
		IF ISNULL(@TRAN_ID,0)  = 0
		BEGIN
			
			SELECT @TRAN_ID = ISNULL(MAX(TRAN_ID),0) + 1 FROM dbo.T0140_EMP_GPF_TRANSACTION WITH (NOLOCK)
			INSERT	INTO T0140_EMP_GPF_TRANSACTION 
				(CMP_ID,TRAN_ID,EMP_ID,SAL_TRAN_ID,FOR_DATE,GPF_OPENING,GPF_CREDIT,GPF_DEBIT,GPF_CLOSING,GPF_POSTING,SYSTEM_DATE)
			VALUES
				(@Cmp_ID,@TRAN_ID,@Emp_Id,NULL,@For_Date, @OPENING,0,0,0,0, GETDATE())			
		END
		ELSE
		BEGIN
			UPDATE	T0140_EMP_GPF_TRANSACTION
			SET		GPF_OPENING = @OPENING
			WHERE	CMP_ID=@CMP_ID AND EMP_ID=@EMP_ID AND TRAN_ID=@TRAN_ID
		END
		
		--Updating closing after this date
		Declare @Temp_For_Date DateTime
		SET @Temp_For_Date = DateAdd(d,1,@FOR_DATE);		
		EXEC P0140_UPDATE_GPF_CLOSING @Cmp_ID,@EMP_ID,@Temp_For_Date
		
		
	IF EXISTS(SELECT Im_Id FROM T0080_Import_Log WITH (NOLOCK) WHERE CONVERT(VARCHAR(50),For_Date,103) = CONVERT(VARCHAR(50),GETDATE(),103) and Import_type = @MODULE)
	BEGIN 
		SET @Log_Status = 1
	END
		
RETURN

