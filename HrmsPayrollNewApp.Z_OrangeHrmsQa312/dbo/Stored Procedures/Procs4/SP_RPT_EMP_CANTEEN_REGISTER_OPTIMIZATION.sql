
---28/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[SP_RPT_EMP_CANTEEN_REGISTER_OPTIMIZATION] 

 @CMP_ID   NUMERIC,      
 @FROM_DATE  DATETIME,      
 @TO_DATE  DATETIME ,      
 @BRANCH_ID  NUMERIC   ,      
 @CAT_ID   NUMERIC  ,      
 @GRD_ID   NUMERIC ,      
 @TYPE_ID  NUMERIC ,      
 @DEPT_ID  NUMERIC  ,      
 @DESIG_ID  NUMERIC ,      
 @EMP_ID   NUMERIC  ,      
 @CONSTRAINT  VARCHAR(MAX) = '',      
 @ORDER_BY	VARCHAR(30) = 'CODE',
 @SUMMARY VARCHAR(MAX)='',
 @CANTEEN_ID VARCHAR(MAX)=''

AS
BEGIN    
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON

    
	DECLARE @FLAGE AS INT
	SET @FLAGE = 0
	DECLARE @QRY NVARCHAR(MAX)
    SET @From_Date = CONVERT(DateTime,CONVERT(Char(10), @From_Date, 103), 103);
	SET @To_Date= CONVERT(DateTime,CONVERT(Char(10), @To_Date, 103) + ' 23:59:59', 103);
	   
   	 IF DATEDIFF(D,@FROM_DATE,@TO_DATE)>31 
		BEGIN
			SET @TO_DATE=DATEADD(D,-1,DATEADD(MM,1,@FROM_DATE))				
		END	
	
	CREATE TABLE #EMP_CONS 
	(      
		EMP_ID NUMERIC ,     
		BRANCH_ID NUMERIC,
		INCREMENT_ID NUMERIC    
	)
	CREATE TABLE #EMP_DATES
	(
		ROW_ID		NUMERIC,
		EMP_ID		NUMERIC,
		IP_ID		NVARCHAR(20),
		CANTEEN_ID	 NUMERIC
		
	)
	CREATE TABLE #CANTEEN_CONSOLIDATE
	(
		--SR_NO NUMERIC(18,0),
		EMP_ID NUMERIC(18,0),
		--IO_DATETIME DATETIME,
		EMP_CODE NVARCHAR(50),
		EMP_NAME VARCHAR(100),
		DEPT_ID NUMERIC(18,0),
		DEPARTMENT_NAME VARCHAR(50),
		BUSINESS_SEGMENT VARCHAR(50),
		DIET VARCHAR(100),
		IP NVARCHAR(20),
		CANTEEN_ID  INT -- ADDED ON 25022019
	)
	
	CREATE TABLE #CANTEEN_ATT_CONS
	(
		EMP_ID NUMERIC(18,0),
		FOR_DATE DATETIME,
		IP_ID NVARCHAR(20),
		CANTEEN_ID NUMERIC,
		[STATUS] VARCHAR(5)
	)
	CREATE TABLE #CANTEEN_SUBSIDY
	(
		EMP_ID NUMERIC(18,0),
		IP NVARCHAR(20),
		TOTAL NUMERIC(18,0),
		EMPLOYEE_CONTRIBUTION NUMERIC(18,2),
		AMOUNT_OF_EMPLOYEES_CONTRIBUTION NUMERIC(18,2),
		SUBSIDY_BORN_BY_COMPANY NUMERIC(18,2),
		AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY NUMERIC(18,2),
		QUANTITY NUMERIC(18,0), -- ADDED ON 22022019
		TOTAL_AMOUNT NUMERIC(18,2),
		CANTEEN_ID INT
	)
	CREATE TABLE #TOTAL_PRESENT_ROW_WISE
	(
		--DEPT_ID NUMERIC(18,0),
		EMP_ID NUMERIC(18,0),
		CANTEEN_ID NUMERIC(18,0),
		IP NVARCHAR(20),
		TOTAL_PRESENT NUMERIC(18,0)
	)
	CREATE TABLE #CANTEEN_CONSOLIDATE1
	(	
		EMP_ID NUMERIC(18,0),
		EMP_CODE NVARCHAR(50),
		EMP_FULL_NAME VARCHAR(100),
		DEPT_NAME VARCHAR(50),
		SEGMENT_NAME VARCHAR(50),
		CNT_NAME VARCHAR(100),
		IP_ID NUMERIC(18,0),
		CANTEEN_ID NUMERIC
	)
	CREATE TABLE #CANTEEN_MASTER
    (
		TRAN_ID  INT,
		CANTEEN_ID NUMERIC(18,0)
	)

	CREATE NONCLUSTERED INDEX IX_EMP_CONS_EMPID ON #EMP_CONS (EMP_ID);
	EXEC SP_RPT_FILL_EMP_CONS  @CMP_ID,@FROM_DATE,@TO_DATE,@BRANCH_ID,@CAT_ID,@GRD_ID,@TYPE_ID,@DEPT_ID,@DESIG_ID ,@EMP_ID ,@CONSTRAINT ,0 ,0 ,0,0,0,0,0,0,0,0,0,0
	
	------------------- ENROLL NO ADDED AND UPDATED ---------------
	ALTER TABLE  #EMP_CONS ADD ENROLL_NO NUMERIC(18,0);
	Alter Table  #Emp_Cons ADD grade Numeric(18,0);
	
	UPDATE	#EMP_CONS 
	SET		ENROLL_NO=CASE WHEN  isnull(e.old_ref_no,'') = '' THEN e.Enroll_No ELSE e.Old_Ref_No END,
			GRADE=I.GRD_ID
	FROM T0080_EMP_MASTER E 
	INNER JOIN  T0095_INCREMENT I  ON E.EMP_ID = I.EMP_ID
	INNER JOIN     
		(
			SELECT MAX(INCREMENT_ID) AS INCREMENT_ID , EMP_ID 
			FROM T0095_INCREMENT WITH (NOLOCK)   
			WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @CMP_ID GROUP BY EMP_ID
		) QRY ON    
		I.EMP_ID = QRY.EMP_ID AND I.INCREMENT_ID = QRY.INCREMENT_ID 
		WHERE #EMP_CONS.EMP_ID=E.EMP_ID AND E.CMP_ID=@CMP_ID AND E.EMP_LEFT='N'
		
	----------------------- END -----------------------------
	
	IF(ISNULL(@CANTEEN_ID,'') <> '')
	BEGIN  
	
			INSERT INTO #CANTEEN_MASTER(TRAN_ID,CANTEEN_ID)
			Select	ROW_NUMBER() OVER(ORDER BY ID) AS TRAN_ID,Cast(Data As Numeric) ID 
					FROM dbo.Split(@CANTEEN_ID, '#') T 
					Where IsNumeric(Data) > 0  
					
			SET @FLAGE = 1
			
	END
	ELSE 
		BEGIN
				INSERT INTO #CANTEEN_MASTER(TRAN_ID,CANTEEN_ID)
				Select	ROW_NUMBER() OVER(ORDER BY CNT_ID) AS TRAN_ID,CNT_ID
				FROM T0050_CANTEEN_MASTER WITH (NOLOCK)
				WHERE CMP_ID = @CMP_ID
		END
    
	SELECT	M.CMP_ID,GRD_ID,M.CNT_ID,IP_ID,
			Effective_Date,AMOUNT,D.TOTAL_AMOUNT,D.SUBSIDY_AMOUNT,CAST(From_Time As DateTime) As From_Time, Cast(To_Time As DateTime) As To_Time
	INTO	#CANTEEN
	FROM	DBO.T0050_CANTEEN_MASTER M WITH (NOLOCK) INNER JOIN T0050_CANTEEN_DETAIL D WITH (NOLOCK) ON  M.CNT_ID=D.CNT_ID	AND M.CMP_ID=D.CMP_ID 
	WHERE	D.EFFECTIVE_DATE <= @TO_DATE AND M.CMP_ID=@CMP_ID  
		
		
	---- TAKE FLAG FOR REGULAR CANTEEN / MOBILE CANTEEN FILTERATION 
	DECLARE @REGULAR_CANTEEN AS INT
	DECLARE @MOBILE_CANTEEN AS INT
	SET @REGULAR_CANTEEN = 1
	SET @MOBILE_CANTEEN = 1
	
	IF(@FLAGE = 1)
		BEGIN
		
			SET @REGULAR_CANTEEN = 0
			SET @MOBILE_CANTEEN = 0
			
			SELECT IS_CANTEEN,DEVICE_TYPE,DEVICE_MODEL
			INTO #CANTEEN_FLAG
			FROM #CANTEEN_MASTER TCM 
			INNER JOIN T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON TCM.CANTEEN_ID = CM.CNT_ID
			INNER JOIN T0040_IP_MASTER IP WITH (NOLOCK) ON CM.IP_ID = IP.IP_ID 
			WHERE CM.CMP_ID = @CMP_ID
			
			IF EXISTS(	SELECT 1 
						FROM #CANTEEN_FLAG
						WHERE IS_CANTEEN = 1 AND DEVICE_TYPE = 'Others' AND DEVICE_MODEL='OTHER')
						BEGIN
							SET @MOBILE_CANTEEN = 1
						END
			
			IF EXISTS(	SELECT 1 
						FROM #CANTEEN_FLAG
						WHERE IS_CANTEEN = 1 AND DEVICE_TYPE <> 'Others' AND DEVICE_MODEL <> 'OTHER')
						BEGIN
							SET @REGULAR_CANTEEN = 1
						END
		END
	
	--- GET EMPLOYEE INFORMATION
	SELECT EM.EMP_ID,EM.EMP_CODE,EM.EMP_FULL_NAME,DM.DEPT_NAME,BS.SEGMENT_NAME,CM.CNT_NAME  AS DIET,CM.IP_ID
	INTO #GET_CANTEEN_EMPLOYEE
	FROM T0080_EMP_MASTER EM WITH (NOLOCK) INNER JOIN #EMP_CONS EC ON  EM.EMP_ID = EC.EMP_ID
	INNER JOIN T0095_INCREMENT I WITH (NOLOCK) ON I.INCREMENT_ID = EC.INCREMENT_ID
	LEFT OUTER JOIN T0040_DEPARTMENT_MASTER DM WITH (NOLOCK) ON I.DEPT_ID = DM.DEPT_ID
	LEFT OUTER JOIN T0040_BUSINESS_SEGMENT BS WITH (NOLOCK) ON I.SEGMENT_ID = BS.SEGMENT_ID
	INNER JOIN T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON I.CMP_ID = CM.CMP_ID 
	WHERE  EM.EMP_LEFT='N' AND CM.CMP_ID = @CMP_ID
	GROUP BY EM.EMP_ID,EM.EMP_CODE,EM.EMP_FULL_NAME,DM.DEPT_NAME,BS.SEGMENT_NAME,CM.CNT_NAME,CM.IP_ID

	IF(@REGULAR_CANTEEN = 1)
		BEGIN
				--- GET DEVICE IN-OUT RECORDS FROM T9999_DEVICE_INOUT_DETAIL TABLE
				SELECT I.IO_DATETIME,I.IP_ADDRESS,IP.DEVICE_NO, IP.DEVICE_NAME,I.IO_TRAN_ID,I.ENROLL_NO
				INTO #T9999_DEVICE_INOUT_DETAIL
				FROM T9999_DEVICE_INOUT_DETAIL I WITH (NOLOCK)
				INNER JOIN T0040_IP_MASTER IP WITH (NOLOCK) ON I.IP_ADDRESS=IP.IP_ADDRESS 
				WHERE (I.In_Out_flag='10' OR I.IP_Address='Canteen' OR IP.Device_No >= 200) AND 
				IP.IS_CANTEEN = 1 AND IP.CMP_ID=@CMP_ID AND I.IO_DATETIME BETWEEN @FROM_DATE AND @TO_DATE 
				 
				
				SELECT	ROW_NUMBER() OVER(ORDER BY I.IO_TRAN_ID) AS ROWID,E.EMP_ID,T.*,I.IO_DATETIME,I.IP_ADDRESS,I.DEVICE_NO, I.DEVICE_NAME,I.IO_TRAN_ID
				INTO	#TEMP 
				FROM	#T9999_DEVICE_INOUT_DETAIL I  
						INNER JOIN #EMP_CONS E ON I.ENROLL_NO=E.ENROLL_NO 
						INNER JOIN #CANTEEN T ON E.GRADE = T.GRD_ID
	
				UPDATE	#TEMP
				SET		From_Time = ((Case When (DateDiff(n, Cast(Cast(IO_DateTime As Date) AS DateTime), IO_DateTime) < 720 AND From_Time > To_Time )  
								THEN DateAdd(d,-1,From_Time) 
							ELSE
								From_Time 
							END
						) + CONVERT(DATETIME,CONVERT(CHAR(10),IO_DateTime, 103), 103)),
						To_Time = ((Case When (DateDiff(n, Cast(Cast(IO_DateTime As Date) AS DateTime), IO_DateTime) > 720 AND From_Time > To_Time )  
								THEN DateAdd(d,1,To_Time) 
							ELSE
								To_Time
							END
						) + CONVERT(DATETIME,CONVERT(CHAR(10),IO_DateTime, 103), 103))

				--Removing GAP between two In-Out Detail which is less than 5 minutes
				exec dbo.P0050_CANTEEN_REMOVE_IO_GAP @Cmp_ID, @From_Date, @To_Date
	 END
	   
	IF(@MOBILE_CANTEEN = 1)
		BEGIN
			
				SELECT * 
				INTO #T0150_EMP_CANTEEN_PUNCH
				FROM T0150_EMP_CANTEEN_PUNCH CID WITH (NOLOCK)
				WHERE CID.CANTEEN_PUNCH_DATETIME BETWEEN @FROM_DATE AND @TO_DATE AND 
				(CID.flag in ('Mobile','Manually(Mobile)') OR CID.Reason in ('Mobile','Manually(Mobile)')) and 
				CID.CMP_ID=@CMP_ID
		
		END
	
	
	IF EXISTS( SELECT 1 FROM #CANTEEN_MASTER )
		BEGIN

			IF(@REGULAR_CANTEEN = 1)
				BEGIN
				
					-- CANTEEN PUNCH
					INSERT INTO #CANTEEN_CONSOLIDATE1(EMP_ID,EMP_CODE,EMP_FULL_NAME,DEPT_NAME,SEGMENT_NAME,CNT_NAME,IP_ID,CANTEEN_ID)
					SELECT EM.EMP_ID,EM.EMP_CODE,EM.EMP_FULL_NAME,CC.DEPT_NAME,CC.SEGMENT_NAME,CM.CNT_NAME,IP.IP_ID,CM.CNT_ID
					FROM #TEMP CID 
					INNER JOIN T0040_IP_MASTER IP WITH (NOLOCK) ON CID.IP_ADDRESS=IP.IP_ADDRESS 
					INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON (CASE WHEN  ISNULL(EM.OLD_REF_NO,'') = '' THEN CAST(EM.ENROLL_NO AS VARCHAR(15)) ELSE EM.OLD_REF_NO END) = CAST(CID.ENROLL_NO AS VARCHAR(15))
					INNER JOIN DBO.T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON CM.IP_ID = IP.IP_ID
					INNER JOIN #EMP_CONS EC ON EM.EMP_ID = EC.EMP_ID
					INNER JOIN #GET_CANTEEN_EMPLOYEE CC ON CC.EMP_ID = EC.EMP_ID
					INNER JOIN #CANTEEN_MASTER TCM ON CM.CNT_ID = TCM.CANTEEN_ID
					WHERE CONVERT(VARCHAR(5),CID.IO_DATETIME,108) BETWEEN CM.From_Time AND CM.To_Time AND  EM.EMP_LEFT='N'  
					GROUP BY EM.EMP_ID,CM.CNT_ID,IP.IP_ID,CC.DEPT_NAME,EM.EMP_FULL_NAME,CC.SEGMENT_NAME,CM.CNT_NAME,EM.EMP_CODE
					--CID.IO_DATETIME BETWEEN @FROM_DATE AND @TO_DATE AND 
					--AND (CID.In_Out_flag='10' OR CID.IP_Address='Canteen' OR IP.Device_No >= 200) and IP.Is_Canteen =1 AND IP.CMP_ID=@CMP_ID
					
					
					
					
				END
			
			IF(@MOBILE_CANTEEN = 1)
				BEGIN
					-- CANTEEN MOBILE - PUNCH 
					INSERT INTO #CANTEEN_CONSOLIDATE1(EMP_ID,EMP_CODE,EMP_FULL_NAME,DEPT_NAME,SEGMENT_NAME,CNT_NAME,IP_ID,CANTEEN_ID)
					SELECT EM.EMP_ID,EM.EMP_CODE,EM.EMP_FULL_NAME,CC.DEPT_NAME,CC.SEGMENT_NAME,CM.CNT_NAME,IP.IP_ID,CM.CNT_ID
					FROM #T0150_EMP_CANTEEN_PUNCH CID 
					INNER JOIN DBO.T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON CM.CNT_ID = CID.CANTEEN_ID
					INNER JOIN T0040_IP_MASTER IP WITH (NOLOCK) ON CM.IP_ID=IP.IP_ID 
					INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON EM.EMP_ID = CID.EMP_ID
					INNER JOIN #EMP_CONS EC ON EM.EMP_ID = EC.EMP_ID
					INNER JOIN #GET_CANTEEN_EMPLOYEE CC ON CC.EMP_ID = EC.EMP_ID
					INNER JOIN #CANTEEN_MASTER TCM ON CM.CNT_ID = TCM.CANTEEN_ID
					WHERE EM.EMP_LEFT='N'  
					GROUP BY EM.EMP_ID,CM.CNT_ID,IP.IP_ID,CC.DEPT_NAME,EM.EMP_FULL_NAME,CC.SEGMENT_NAME,CM.CNT_NAME,EM.EMP_CODE
					
					--CID.CANTEEN_PUNCH_DATETIME BETWEEN @FROM_DATE AND @TO_DATE
					--AND (CID.flag in ('Mobile','Manually(Mobile)') and CID.Reason in ('Mobile','Manually(Mobile)') OR IP.Device_No >= 200) and IP.Is_Canteen =1 AND IP.CMP_ID=@CMP_ID AND  
					
					
					
				END
	
		END
	ELSE
		BEGIN
		
			INSERT INTO #CANTEEN_CONSOLIDATE1(EMP_ID,EMP_CODE,EMP_FULL_NAME,DEPT_NAME,SEGMENT_NAME,CNT_NAME,IP_ID,CANTEEN_ID)
			SELECT EM.EMP_ID,EM.EMP_CODE,EM.EMP_FULL_NAME,CC.DEPT_NAME,CC.SEGMENT_NAME,CM.CNT_NAME,IP.IP_ID,CM.CNT_ID
			FROM #TEMP CID 
			--INNER JOIN T0040_IP_MASTER IP ON CID.IP_ADDRESS=IP.IP_ADDRESS 
			INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON (CASE WHEN  isnull(EM.old_ref_no,'') = '' THEN EM.ENROLL_NO ELSE EM.Old_Ref_No END) = CID.ENROLL_NO
			INNER JOIN DBO.T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON CM.IP_ID = IP.IP_ID
			INNER JOIN #EMP_CONS EC ON EM.EMP_ID = EC.EMP_ID
			INNER JOIN #GET_CANTEEN_EMPLOYEE CC ON CC.EMP_ID = EC.EMP_ID
			WHERE CONVERT(VARCHAR(5),CID.IO_DATETIME,108) BETWEEN CM.From_Time AND CM.To_Time
			AND EM.EMP_LEFT='N'  
			GROUP BY EM.EMP_ID,CM.CNT_ID,IP.IP_ID,CC.DEPT_NAME,EM.EMP_FULL_NAME,CC.SEGMENT_NAME,CM.CNT_NAME,EM.EMP_CODE
			--CID.IO_DATETIME BETWEEN @FROM_DATE AND @TO_DATE AND 
			--AND (CID.In_Out_flag='10' OR CID.IP_Address='Canteen' OR IP.Device_No >= 200) and IP.Is_Canteen =1 AND IP.CMP_ID=@CMP_ID
			
			
		
		END
	
	
	IF(@REGULAR_CANTEEN = 1)
	BEGIN
		-- EMPLOYEE CANTEEN RECORDS GET
		INSERT INTO #CANTEEN_ATT_CONS(EMP_ID,FOR_DATE,[STATUS],CANTEEN_ID,IP_ID)
		SELECT EM.EMP_ID,CID.IO_DATETIME,'1',CM.Cnt_Id,IP.IP_ID 
		FROM #TEMP CID
		INNER JOIN T0040_IP_MASTER IP WITH (NOLOCK) ON CID.IP_ADDRESS=IP.IP_ADDRESS 
		INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON (CASE WHEN  isnull(EM.old_ref_no,'') = '' THEN CAST(EM.ENROLL_NO AS VARCHAR(50)) ELSE EM.Old_Ref_No END) = CAST(CID.ENROLL_NO AS VARCHAR(50))
		INNER JOIN DBO.T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON CM.IP_ID = IP.IP_ID 
		INNER JOIN #EMP_CONS EC ON EM.EMP_ID = EC.EMP_ID 
		WHERE CONVERT(VARCHAR(5),CID.IO_DATETIME,108) BETWEEN CM.From_Time AND CM.To_Time
		AND EM.EMP_LEFT='N' 
		
	END
	
	IF(@MOBILE_CANTEEN = 1)
	BEGIN
		--- EMPLOYEE MOBILE RECORDS GET	
		INSERT INTO #CANTEEN_ATT_CONS(EMP_ID,FOR_DATE,[STATUS],CANTEEN_ID,IP_ID)
		SELECT EM.EMP_ID,cast(CID.CANTEEN_PUNCH_DATETIME as date) AS IO_DATETIME,SUM(CID.QUANTITY),CM.Cnt_Id,IP.IP_ID 
		FROM #T0150_EMP_CANTEEN_PUNCH CID
		INNER JOIN T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON CID.CANTEEN_ID=CM.CNT_ID 
		INNER JOIN T0040_IP_MASTER IP WITH (NOLOCK) ON CM.IP_ID=IP.IP_ID 
		INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON EM.EMP_ID = CID.EMP_ID
		INNER JOIN #EMP_CONS EC ON EM.EMP_ID = EC.EMP_ID 
		WHERE  EM.EMP_LEFT='N'
		--CID.CANTEEN_PUNCH_DATETIME BETWEEN @FROM_DATE AND @TO_DATE
		--AND (CID.flag in ('Mobile','Manually(Mobile)') OR CID.Reason in ('Mobile','Manually(Mobile)') OR IP.Device_No >= 200) and IP.Is_Canteen =1 AND IP.CMP_ID=@CMP_ID AND 
		GROUP BY cast(CID.CANTEEN_PUNCH_DATETIME as date),EM.EMP_ID,CM.Cnt_Id,IP.IP_ID
	END
	
	IF (@REGULAR_CANTEEN = 1)
	BEGIN
	
		SELECT	ROW_NUMBER() OVER(ORDER BY I.IO_TRAN_ID) AS ROWID,I.io_datetime,E.EMP_ID,T.CNT_ID,IP.IP_ID,
		T.AMOUNT AS EMPLOYEE_CONTRIBUTION,T.TOTAL_AMOUNT AS AMOUNT_OF_EMPLOYEES_CONTRIBUTION,T.SUBSIDY_AMOUNT AS AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,
		0 AS TOTAL_AMOUNT
		INTO	#TEMP_C 
		FROM	#TEMP I INNER JOIN #TEMP TM ON I.IO_Tran_ID = TM.IO_Tran_ID
				INNER JOIN	T0040_IP_MASTER IP WITH (NOLOCK) ON I.IP_ADDRESS=IP.IP_ADDRESS
				INNER JOIN	#EMP_CONS E ON I.ENROLL_NO=E.ENROLL_NO 
				inner JOIN	#CANTEEN T ON E.GRADE = T.GRD_ID  AND IP.IP_ID = T.IP_ID
				INNER JOIN	#CANTEEN_MASTER TCM ON T.CNT_ID = TCM.CANTEEN_ID
		WHERE	cast(I.IO_DateTime as time) >= cast(t.From_Time as time) and  cast(I.IO_DateTime as time) <= cast(t.To_Time as time)
				ORDER BY E.EMP_ID,I.IO_DATETIME 
				
				
		-- CANTEEN PUNCH
		INSERT INTO #CANTEEN_SUBSIDY(EMP_ID,IP,TOTAL,EMPLOYEE_CONTRIBUTION,AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUBSIDY_BORN_BY_COMPANY,AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,QUANTITY,TOTAL_AMOUNT,CANTEEN_ID)
		SELECT	T.EMP_ID,T.IP_ID,0,ISNULL(T.EMPLOYEE_CONTRIBUTION ,0),SUM(ISNULL(T.EMPLOYEE_CONTRIBUTION ,0)),
				ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0),SUM(ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0)),SUM(1),
				SUM( ISNULL(T.EMPLOYEE_CONTRIBUTION ,0) + ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0) )AS TOTAL_AMOUNT,T.Cnt_Id
				FROM #TEMP_C T GROUP BY T.EMP_ID,T.Cnt_Id,T.IP_ID,ISNULL(T.EMPLOYEE_CONTRIBUTION ,0),ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0)
	
	END
	
	IF(@MOBILE_CANTEEN = 1)
	BEGIN
	
		-- MOBILE CANTEEN
		SELECT	ROW_NUMBER() OVER(ORDER BY I.TRAN_ID) AS ROWID,I.CANTEEN_PUNCH_DATETIME AS IO_DATETIME,E.EMP_ID,T.CNT_ID,T.IP_ID,T.AMOUNT AS EMPLOYEE_CONTRIBUTION,(T.AMOUNT * ISNULL(I.QUANTITY,1)) AS AMOUNT_OF_EMPLOYEES_CONTRIBUTION,
				SUBSIDY_AMOUNT AS AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0 AS TOTAL_AMOUNT,I.QUANTITY,I.FLAG
		INTO	#MOBILE_CANTEEN
		FROM	#T0150_EMP_CANTEEN_PUNCH I  
				INNER JOIN	#EMP_CONS E ON I.EMP_ID=E.EMP_ID 
				INNER JOIN	#CANTEEN T ON E.GRADE = T.GRD_ID 
				INNER JOIN	#CANTEEN_MASTER TCM ON T.CNT_ID = TCM.CANTEEN_ID AND I.CANTEEN_ID = TCM.CANTEEN_ID
				--WHERE		I.FLAG in('Mobile','Manually(Mobile)') AND I.REASON in('Mobile','Manually(Mobile)') AND I.CMP_ID=@CMP_ID AND 	
							--I.CANTEEN_PUNCH_DATETIME BETWEEN @FROM_DATE AND @TO_DATE
				GROUP BY	I.CANTEEN_PUNCH_DATETIME,E.EMP_ID,T.CNT_ID,T.IP_ID,T.AMOUNT,
							T.TOTAL_AMOUNT,I.QUANTITY,SUBSIDY_AMOUNT,FLAG,I.TRAN_ID
	
	
		-- MOBILE PUNCH
		INSERT INTO #CANTEEN_SUBSIDY(EMP_ID,IP,TOTAL,EMPLOYEE_CONTRIBUTION,AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUBSIDY_BORN_BY_COMPANY,AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,QUANTITY,TOTAL_AMOUNT,CANTEEN_ID)
		SELECT	T.EMP_ID,T.IP_ID,0,ISNULL(T.EMPLOYEE_CONTRIBUTION ,0),SUM(ISNULL(T.AMOUNT_OF_EMPLOYEES_CONTRIBUTION ,0)), -- SUM(ISNULL(T.EMPLOYEE_CONTRIBUTION ,0)) COMMENTED ON 22022019
				ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0),SUM(ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0)),
				--SUM( ISNULL(T.EMPLOYEE_CONTRIBUTION ,0) + ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0) )AS TOTAL_AMOUNT 
				SUM(T.QUANTITY),
				SUM( ISNULL(T.AMOUNT_OF_EMPLOYEES_CONTRIBUTION ,0) + ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0) )AS TOTAL_AMOUNT,T.Cnt_Id
				FROM #MOBILE_CANTEEN T GROUP BY T.EMP_ID,T.Cnt_Id,T.IP_ID,ISNULL(T.EMPLOYEE_CONTRIBUTION ,0),ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0)
	
	END
	
	
	
	INSERT INTO #EMP_DATES (ROW_ID, EMP_ID,IP_ID,CANTEEN_ID)
	SELECT ROW_NUMBER() OVER(PARTITION BY EMP_ID ORDER BY EMP_ID) AS ROW_ID, EMP_ID,IP_ID,CANTEEN_ID
	FROM #CANTEEN_CONSOLIDATE1 GROUP BY EMP_ID,CANTEEN_ID,IP_ID

	

	DECLARE @EXISTS_COLS VARCHAR(MAX);
	set @EXISTS_COLS = ','
	DECLARE @TEMP_DATE DATETIME
	DECLARE @QUERY VARCHAR(MAX)	
	DECLARE @UPDATE_TEMPLATE NVARCHAR(1000)
	DECLARE @COL_NAME VARCHAR(32)
	DECLARE @STR_DATE VARCHAR(20)
	SET	@TEMP_DATE  = @FROM_DATE
	SET @QUERY = '';
	
	DECLARE @EMPLOYEE_PRESENT_COUNT AS NUMERIC(18,0)
		SET @EMPLOYEE_PRESENT_COUNT = 0
	
	DECLARE @COLCAPTION_NAME NVARCHAR(MAX)
		SET @COLCAPTION_NAME = ''
	
	DECLARE @ROW_WISETOTAL_COUNT NVARCHAR(MAX)
		SET @ROW_WISETOTAL_COUNT = ''
	
	

	
	WHILE (@TEMP_DATE  <= @TO_DATE)
		BEGIN
		
			SET @COL_NAME =  LEFT(DATENAME(WEEKDAY, @TEMP_DATE), 3) + '_' + CAST(DAY(@TEMP_DATE) AS VARCHAR(10))
			
			SET @TEMP_DATE = CONVERT(DateTime,CONVERT(Char(10), @TEMP_DATE, 103) + ' 23:59:59', 103);
			
			SET @UPDATE_TEMPLATE =	'UPDATE E SET [' + @COL_NAME + ']=A.STATUS
			    						FROM	#EMP_DATES E
												INNER JOIN #CANTEEN_ATT_CONS A ON E.EMP_ID=A.EMP_ID AND E.IP_ID=A.IP_ID AND E.CANTEEN_ID = A.CANTEEN_ID --AND E.SHIFT_ID=A.SHIFT_ID
										WHERE	CONVERT(DATETIME,CONVERT(CHAR(10), A.FOR_DATE, 103) + '' 23:59:59'', 103) = @TEMP_DATE'
										--WHERE	A.FOR_DATE =@TEMP_DATE
			
		
										
			IF CHARINDEX(',' + @COL_NAME + ',', @EXISTS_COLS) = 0
				BEGIN 
				
					SET @QUERY = 'ALTER TABLE  #EMP_DATES ADD [' + @COL_NAME + '] VARCHAR(10) NULL; '
					EXEC (@QUERY)
				END
			
			SET @EXISTS_COLS = @EXISTS_COLS +@COL_NAME  + ','
			
			SET @STR_DATE =  CAST(@TEMP_DATE AS VARCHAR(20))	
			
			EXEC sp_executesql @UPDATE_TEMPLATE, N'@TEMP_DATE DATETIME', @TEMP_DATE
			
			/*To Provide 0 instead of Null*/
			--Set @COLCAPTION_NAME = @COLCAPTION_NAME + 'SUM(isnull(cast(' + @COL_NAME + ' as numeric),0)) ' + @COL_NAME  + ',' --- FOR COLUMN WISE TOTAL
			Set @COLCAPTION_NAME = @COLCAPTION_NAME + 'SUM(cast(' + @COL_NAME + ' as numeric)) ' + @COL_NAME  + ',' --- FOR COLUMN WISE TOTAL
			
			/*To Provide Null instead of 0*/			
			Set @ROW_WISETOTAL_COUNT = @ROW_WISETOTAL_COUNT + 'SUM(isnull(cast(' + @COL_NAME + ' as numeric),0))  + ' --- FOR ROW WISE TOTAL
			
			
			SET @TEMP_DATE  = DATEADD(d, 1, @TEMP_DATE );
	
			
		END	
		
		IF (@REGULAR_CANTEEN = 1)
			BEGIN
				-- CANTEEN PUNCH
				INSERT INTO #CANTEEN_CONSOLIDATE(EMP_ID,EMP_CODE,EMP_NAME,DEPT_ID,DEPARTMENT_NAME,BUSINESS_SEGMENT,DIET,IP,CANTEEN_ID)	
				SELECT A.EMP_ID,A.EMP_CODE,A.EMP_FULL_NAME,I.DEPT_ID,A.DEPT_NAME,A.SEGMENT_NAME,CM.CNT_NAME,B.IP_ID,CM.Cnt_Id
				FROM #CANTEEN_CONSOLIDATE1 A
				INNER JOIN T0040_IP_MASTER B WITH (NOLOCK) ON A.IP_ID = B.IP_ID
				INNER JOIN T0050_CANTEEN_MASTER CM WITH (NOLOCK) on B.IP_ID = CM.IP_ID 
				INNER JOIN #TEMP_C TMP ON CM.CNT_ID = TMP.CNT_ID AND B.IP_ID = TMP.IP_ID AND A.EMP_ID = TMP.EMP_ID AND CONVERT(VARCHAR(5),TMP.IO_DATETIME,108) BETWEEN CM.From_Time AND CM.To_Time -- added on 05032019
				INNER JOIN #EMP_CONS ECC ON A.EMP_ID = ECC.EMP_ID
				INNER JOIN T0095_INCREMENT I WITH (NOLOCK) ON ECC.INCREMENT_ID = I.INCREMENT_ID
				WHERE  CM.CMP_ID=@CMP_ID
				GROUP BY A.EMP_ID,B.IP_ADDRESS,A.EMP_CODE,A.EMP_FULL_NAME,I.DEPT_ID,A.DEPT_NAME,A.SEGMENT_NAME,CM.CNT_NAME,B.IP_ID,cm.Cnt_Id
			END
			
		IF(@MOBILE_CANTEEN = 1)
			BEGIN
				----MOBILE PUNCH
				INSERT INTO #CANTEEN_CONSOLIDATE(EMP_ID,EMP_CODE,EMP_NAME,DEPT_ID,DEPARTMENT_NAME,BUSINESS_SEGMENT,DIET,IP,CANTEEN_ID)
				SELECT A.EMP_ID,A.EMP_CODE,A.EMP_FULL_NAME,I.DEPT_ID,A.DEPT_NAME,A.SEGMENT_NAME,CM.CNT_NAME,A.IP_ID,CM.Cnt_Id
				FROM #CANTEEN_CONSOLIDATE1 A
				INNER JOIN #EMP_CONS ECC ON A.EMP_ID = ECC.EMP_ID
				INNER JOIN #MOBILE_CANTEEN MC ON A.CANTEEN_ID = MC.CNT_ID AND A.IP_ID = MC.IP_ID AND MC.EMP_ID = ECC.EMP_ID
				INNER JOIN T0050_CANTEEN_MASTER CM WITH (NOLOCK) on A.IP_ID = CM.IP_ID AND A.CANTEEN_ID = CM.Cnt_Id 
				INNER JOIN T0095_INCREMENT I WITH (NOLOCK) ON ECC.INCREMENT_ID = I.Increment_ID
				WHERE CM.CMP_ID=@CMP_ID	
				GROUP BY A.EMP_ID,A.IP_ID,A.EMP_CODE,A.EMP_FULL_NAME,I.DEPT_ID,A.DEPT_NAME,A.SEGMENT_NAME,CM.CNT_NAME,cm.Cnt_Id
			END
			
		

		SELECT CC.EMP_CODE,CC.EMP_NAME,CC.DEPARTMENT_NAME,CC.BUSINESS_SEGMENT,CC.DIET AS DIET,CC.IP,ED.* 
		INTO #CANTEEN_FINAL_RECORDS
		FROM #EMP_DATES ED INNER JOIN #CANTEEN_CONSOLIDATE CC ON ED.EMP_ID=CC.EMP_ID AND ED.IP_ID=CC.IP AND ED.CANTEEN_ID = CC.CANTEEN_ID
		
		ALTER TABLE #CANTEEN_FINAL_RECORDS DROP COLUMN ROW_ID
	     
		-------- TOTAL PRESENT EMPLOYEE AND CANTEEN WISE (ROW TOTAL) WITH TOTAL HEAD COUNT - EMPLOYEE WISE ----------
		SET @QRY = 'SELECT EMP_ID,CANTEEN_ID,IP,(' + SUBSTRING(@ROW_WISETOTAL_COUNT,0,LEN(@ROW_WISETOTAL_COUNT)) + ') AS TOTAL_PRESENT FROM #CANTEEN_FINAL_RECORDS GROUP BY  EMP_ID,CANTEEN_ID,IP'
		INSERT INTO #TOTAL_PRESENT_ROW_WISE
		EXEC(@QRY)
		
		UPDATE	T	
		SET		T.TOTAL = B.TOTAL_PRESENT
		FROM	#CANTEEN_SUBSIDY T 
				INNER JOIN	(
								SELECT	B.EMP_ID,B.CANTEEN_ID,B.IP,B.TOTAL_PRESENT
								FROM	#TOTAL_PRESENT_ROW_WISE B
								
							) B ON T.EMP_ID=B.EMP_ID AND T.IP=B.IP and t.CANTEEN_ID  = b.CANTEEN_ID
							
	
		SET @QRY = 'SELECT EMP_ID,'''' AS IP,SUM(TOTAL) AS TOTAL,0 AS EMPLOYEE_CONTRIBUTION,SUM(AMOUNT_OF_EMPLOYEES_CONTRIBUTION) AS AMOUNT_OF_EMPLOYEES_CONTRIBUTION,0 AS SUBSIDY_BORN_BY_COMPANY,
		SUM(AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY) AS AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT,SUM(QUANTITY),CANTEEN_ID FROM #CANTEEN_SUBSIDY GROUP BY  EMP_ID,CANTEEN_ID'
		INSERT INTO #CANTEEN_SUBSIDY
		EXEC(@QRY)
	
		SET @QRY = 'SELECT 9999 as EMP_CODE,'''' AS EMP_NAME,DEPARTMENT_NAME,'''' AS BUSINESS_SEGMENT,''TOTAL'' AS DIET,'''' AS IP,0 as EMP_ID,'''' AS IP_ID,0 AS CANTEEN_ID,' + SUBSTRING(@COLCAPTION_NAME,0,LEN(@COLCAPTION_NAME)) + ' FROM #CANTEEN_FINAL_RECORDS GROUP BY  DEPARTMENT_NAME'
		INSERT INTO #CANTEEN_FINAL_RECORDS
		EXEC(@QRY)
		
		SELECT CFR.*,TOTAL,EMPLOYEE_CONTRIBUTION,
		AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUBSIDY_BORN_BY_COMPANY,AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,QUANTITY,TOTAL_AMOUNT,TBM.BRANCH_NAME
		INTO #CANTEEN_REGISTER
		FROM #CANTEEN_FINAL_RECORDS CFR 
		left JOIN #CANTEEN_SUBSIDY CS ON CFR.IP = CS.IP AND CFR.EMP_ID=CS.EMP_ID AND CFR.CANTEEN_ID = CS.CANTEEN_ID
		LEFT JOIN #EMP_CONS ECC ON CFR.EMP_ID = ECC.EMP_ID
		LEFT JOIN T0095_INCREMENT I WITH (NOLOCK) ON ECC.INCREMENT_ID = I.INCREMENT_ID
		LEFT JOIN T0030_BRANCH_MASTER TBM WITH (NOLOCK) ON TBM.BRANCH_ID = I.Branch_ID
		ORDER BY EMP_CODE,DIET,IP_ID
		
		INSERT INTO #CANTEEN_REGISTER(	DEPARTMENT_NAME,EMP_CODE,DIET,IP_ID,TOTAL,EMPLOYEE_CONTRIBUTION,
										AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUBSIDY_BORN_BY_COMPANY,AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,QUANTITY,
										TOTAL_AMOUNT)
		SELECT	'Z',99999999,'GRAND TOTAL',0,SUM(TOTAL),SUM(EMPLOYEE_CONTRIBUTION),
				SUM(AMOUNT_OF_EMPLOYEES_CONTRIBUTION),SUM(SUBSIDY_BORN_BY_COMPANY),SUM(AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY),SUM(QUANTITY),
				SUM(TOTAL_AMOUNT) 
				FROM #CANTEEN_SUBSIDY WHERE ISNULL(IP,0) <> 0 -- condition commented on 21022019 ISNULL(IP,0) = 0	
	  
	    ALTER TABLE #CANTEEN_REGISTER DROP COLUMN IP--,SRNO
		
		SELECT (CASE WHEN CR.EMP_CODE = '99999999' THEN '99999999' ELSE ROW_NUMBER() OVER(ORDER BY (SELECT 1)) END) AS SRNO,ROW_NUMBER() OVER (PARTITION BY CR.EMP_ID ORDER BY CR.EMP_CODE,CR.DIET,CR.IP_ID DESC ) AS SR_NO_TEMP,CR.* 
		INTO #CANTEEN_REGISTER_FINAL
		FROM #CANTEEN_REGISTER CR ORDER BY EMP_CODE,DIET,IP_ID desc
	    
	    ALTER TABLE #CANTEEN_REGISTER_FINAL DROP COLUMN SR_NO_TEMP,EMP_ID,IP_ID
	    
	    IF(ISNULL(@TYPE_ID,0) = 1)
			BEGIN
				
				SELECT	ROW_NUMBER() OVER(ORDER BY DEPARTMENT_NAME) AS SRNO,DEPARTMENT_NAME,BRANCH_NAME,DIET,SUM(ISNULL(QUANTITY,0)) AS QUANTITY,SUM(ISNULL(EMPLOYEE_CONTRIBUTION,0)) AS EMPLOYEE_CONTRIBUTION,
						SUM(ISNULL(AMOUNT_OF_EMPLOYEES_CONTRIBUTION,0)) AS AMOUNT_OF_EMPLOYEES_CONTRIBUTION,
						SUM(ISNULL(SUBSIDY_BORN_BY_COMPANY,0)) AS SUBSIDY_BORN_BY_COMPANY,
						SUM(ISNULL(AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0)) AS AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,SUM(ISNULL(TOTAL_AMOUNT,0)) AS TOTAL_AMOUNT
				INTO	#CANTEEN_SUMMARY
				FROM	#CANTEEN_REGISTER_FINAL
				WHERE	DIET <> 'TOTAL'
				GROUP BY DEPARTMENT_NAME,DIET,BRANCH_NAME
				ORDER BY DEPARTMENT_NAME--SRNO	
				
				UPDATE	T
				SET		T.DEPARTMENT_NAME = ''
				FROM	#CANTEEN_SUMMARY T 
				WHERE	T.DEPARTMENT_NAME = 'Z'
				
				--SELECT	* 
				--FROM	#CANTEEN_SUMMARY 
				
				
				IF NOT EXISTS(SELECT 1 FROM #CANTEEN_SUMMARY 
										WHERE ISNULL(TOTAL_AMOUNT,0) = 0)
					BEGIN
						SELECT * FROM #CANTEEN_SUMMARY
					END
				ELSE
					BEGIN
						SELECT * FROM #CANTEEN_SUMMARY WHERE DIET <> 'GRAND TOTAL'
					END
				
				
			END
		ELSE
			BEGIN
			
			
					SELECT	DEPARTMENT_NAME,SUM(EMPLOYEE_CONTRIBUTION) AS EMPLOYEE_CONTRIBUTION, 
							SUM(AMOUNT_OF_EMPLOYEES_CONTRIBUTION) AS AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUM(SUBSIDY_BORN_BY_COMPANY) AS SUBSIDY_BORN_BY_COMPANY,
							SUM(AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY) AS AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,SUM(TOTAL) AS TOTAL,SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT -- SUM(TOTAL) AS TOTAL ADDED ON 04032019
					INTO #DEPARTMENT_WISE_SUM
					FROM #CANTEEN_REGISTER_FINAL
					GROUP BY DEPARTMENT_NAME
					
				
					UPDATE CRF
					SET CRF.EMPLOYEE_CONTRIBUTION = DWS.EMPLOYEE_CONTRIBUTION,
						CRF.AMOUNT_OF_EMPLOYEES_CONTRIBUTION = DWS.AMOUNT_OF_EMPLOYEES_CONTRIBUTION,
						CRF.SUBSIDY_BORN_BY_COMPANY = DWS.SUBSIDY_BORN_BY_COMPANY,
						CRF.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY = DWS.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,
						CRF.TOTAL_AMOUNT = DWS.TOTAL_AMOUNT,
						CRF.TOTAL =DWS.TOTAL -- ADDED ON 04032019
					FROM #CANTEEN_REGISTER_FINAL CRF INNER JOIN #DEPARTMENT_WISE_SUM DWS ON CRF.DEPARTMENT_NAME = DWS.DEPARTMENT_NAME
					WHERE CRF.EMP_CODE = 9999
					
				
					
					
					DECLARE @QUERYF VARCHAR(MAX)	
					SET @QUERYF = 'SELECT SRNO,DEPARTMENT_NAME,BRANCH_NAME,EMP_CODE,EMP_NAME,BUSINESS_SEGMENT,DIET,' + SUBSTRING(@COLCAPTION_NAME,0,LEN(@COLCAPTION_NAME)) + ',
					TOTAL,EMPLOYEE_CONTRIBUTION,AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUBSIDY_BORN_BY_COMPANY,AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,TOTAL_AMOUNT
					INTO ##CANTEEN_DETAIL_TABLE
					FROM #CANTEEN_REGISTER_FINAL
					GROUP BY DEPARTMENT_NAME,EMP_CODE,EMP_NAME,BRANCH_NAME,BUSINESS_SEGMENT,DIET,TOTAL,
					EMPLOYEE_CONTRIBUTION,AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUBSIDY_BORN_BY_COMPANY,AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,TOTAL_AMOUNT,SRNO'
					
					EXEC(@QUERYF)
					
					IF NOT EXISTS(SELECT 1 FROM ##CANTEEN_DETAIL_TABLE 
										WHERE ISNULL(TOTAL,0) = 0 AND ISNULL(TOTAL_AMOUNT,0) = 0)
						BEGIN
							SELECT * FROM ##CANTEEN_DETAIL_TABLE
						END
					ELSE
						BEGIN
							SELECT * FROM ##CANTEEN_DETAIL_TABLE WHERE DIET <> 'GRAND TOTAL'
						END
						
					DROP TABLE ##CANTEEN_DETAIL_TABLE
					
			END
			
			
			--SELECT * FROM #CANTEEN_REGISTER_FINAL COMMENTED ON 20022019
			--ORDER BY SRNO	
			
			
	    
		
END

