

---23/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[SP_RPT_EMP_ATTENDANCE_SALARY_REGISTER_Format4]      
    @Cmp_ID			NUMERIC,      
	@From_Date		DATETIME,      
	@To_Date		DATETIME ,      
	@Branch_ID		NUMERIC   ,      
	@Cat_ID			NUMERIC  ,      
	@Grd_ID			NUMERIC ,      
	@Type_ID		NUMERIC ,      
	@Dept_ID		NUMERIC  ,      
	@Desig_ID		NUMERIC ,      
	@Emp_ID			NUMERIC  ,      
	@Constraint		VARCHAR(MAX) = '',      
	@Report_call	VARCHAR(20) = 'IN-OUT',      
	@Weekoff_Entry	VARCHAR(1) = 'Y',  
	@PBranch_ID		VARCHAR(200) = '0',
	@Order_By		VARCHAR(30) = 'Code'
    ,@REPORT_FOR	VARCHAR(50) = ''
	,@EXPORT_TYPE   VARCHAR(50) = 'EXCEL'
	,@TYPE			NUMERIC = 0  -- ADDED BY ALI 03032014
	,@IS_WHOSOFF	TINYINT = 0  --ADDED BY GADRIWALA 09042015  	
	--,@PAGE_NO		INT = 1
	--,@PAGE_SIZE		NUMERIC(15,2) = 0
	,@P_Branch		varchar(max) = ''	--(For privilege branch)jimit 18072016
	,@P_Vertical		varchar(max) = ''	--(For privilege Vertical)jimit 18072016
	,@P_Subvertical		varchar(max) = ''	--(For privilege Subvertical)jimit 18072016
	,@P_Department		varchar(max) = ''	--(For privilege Department)jimit 18072016
    
AS
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON
	 
	DECLARE	@COUNT NUMERIC(9,2);
	SET @COUNT = 0;
	--IF ISNULL(@PAGE_SIZE,0) > 0
	--	BEGIN
	--		IF (@PAGE_NO < 1)
	--			SET @PAGE_NO = 1;
			IF DATEDIFF(d,@From_Date,@To_Date)>31   --Mukti(16032017)
				BEGIN
					set @to_date=DATEADD(d,-1,DATEADD(MM,1,@from_date))				
				END	
				
			CREATE table #Emp_Cons 
			(      
				Emp_ID numeric ,     
				Branch_ID numeric,
				Increment_ID numeric
			)    
			--added jimit for whos off 19072016
			if @IS_WHOSOFF =1 
			BEGIN	
				if @DEPT_ID > 0
					Set @P_Department = cast(@DEPT_ID as Varchar(max))
										
				exec SP_RPT_FILL_EMP_CONS_MULTIDROPDOWN @Cmp_ID,@From_Date,@To_Date,@Branch_ID,@Cat_ID,@Grd_ID,@Type_ID,@P_Department,@Desig_ID,@Emp_ID,@constraint,0,0,'','','','',0,0,0,@P_Branch,0,0  
			END
			--ended
			else
			BEGIN
				EXEC SP_RPT_FILL_EMP_CONS  @Cmp_ID,@From_Date,@To_Date,@Branch_ID,@Cat_ID,@Grd_ID,@Type_ID,@Dept_ID,@Desig_ID ,@Emp_ID ,@constraint ,0 ,0 ,0,0,0,0,0,0,3,0,0,@Type
			end
			--SELECT @COUNT = COUNT(1) FROM #Emp_Cons
			
			SET @CONSTRAINT = NULL
			
			--DECLARE @TOTAL_ROW_COUNT INT;
			--SET @TOTAL_ROW_COUNT =(@PAGE_SIZE * @PAGE_NO)
			
			--SET ROWCOUNT @TOTAL_ROW_COUNT
			
			SELECT ROW_NO, EMP_ID INTO #TMP_CONS
			FROM (
					SELECT	ROW_NUMBER() OVER (Order By ALPHA_EMP_CODE) As ROW_NO,E.Emp_ID
					FROM	#Emp_Cons E INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON E.EMP_ID=EM.EMP_ID
				) T			
			ORDER BY  ROW_NO 
			
			--SET @TOTAL_ROW_COUNT = CAST(@PAGE_SIZE AS INT)
			--SET ROWCOUNT @TOTAL_ROW_COUNT
			
			--SET @COUNT = 0;
			SELECT	@CONSTRAINT = COALESCE(@CONSTRAINT + '#', '') + CAST(T.Emp_ID AS VARCHAR(10))--, @COUNT = @COUNT + 1
			FROM	#TMP_CONS T
			ORDER BY  ROW_NO DESC
			
			SET ROWCOUNT 0;	
			
			--IF CEILING(@COUNT / @PAGE_SIZE ) < @PAGE_NO AND @COUNT <> 1	--Ceiling added by Ankit 13052016
			--	SET @CONSTRAINT = '0';
			
			--WHERE PageNo = @PAGE_NO		
			
			IF @CONSTRAINT IS NULL
				SET @CONSTRAINT = '0';
			DROP TABLE #Emp_Cons	
		--END
		
	CREATE table #ATT_MUSTER_EXCEL 
	(	
		EMP_ID		NUMERIC , 
		CMP_ID		NUMERIC,
		FOR_DATE	DATETIME,
		STATUS		VARCHAR(10) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		LEAVE_COUNT	NUMERIC(5,2),
		WO_HO		VARCHAR(3) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		STATUS_2	VARCHAR(20) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		ROW_ID		NUMERIC ,
		WO_HO_DAY	NUMERIC(3,2) DEFAULT 0,
		P_DAYS		NUMERIC(5,2) DEFAULT 0,
		A_DAYS		NUMERIC(5,2) DEFAULT 0 ,
		JOIN_DATE	DATETIME DEFAULT NULL,
		LEFT_DATE	DATETIME DEFAULT NULL,
		GATE_PASS_DAYS NUMERIC(18,2) DEFAULT 0,  -- ADDED BY GADRIWALA MUSLIM 07042015
		LATE_DEDUCT_DAYS NUMERIC(18,2) DEFAULT 0, -- ADDED BY GADRIWALA MUSLIM 07042015
		EARLY_DEDUCT_DAYS NUMERIC(18,2) DEFAULT 0, -- ADDED BY GADRIWALA MUSLIM 07042015
		EMP_CODE    VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		EMP_FULL_NAME  VARCHAR(300) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		BRANCH_ADDRESS VARCHAR(300) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		COMP_NAME VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		BRANCH_NAME VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		DEPT_NAME  VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		GRD_NAME VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		DESIG_NAME VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		P_FROM_DATE  DATETIME,
		P_TO_DATE DATETIME,
		BRANCH_ID NUMERIC(18,0),
		DESIG_DIS_NO NUMERIC(18,2) DEFAULT 0,          ---ADDED JIMIT 31082015 
		SUBBRANCH_NAME VARCHAR(200) DEFAULT '' COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
	)
	  
	  
		  
	CREATE NONCLUSTERED INDEX IX_DATA ON DBO.#ATT_MUSTER_EXCEL
		(	EMP_ID,EMP_CODE,ROW_ID ) 
		
	-- Added by rohit on 01082016
	if (@EMP_ID <> 0 and (@CONSTRAINT = '0' or @CONSTRAINT='' ))
	begin
		set @CONSTRAINT  = @EMP_ID
	end	
		  --print @Report_For
	EXEC SP_RPT_EMP_ATTENDANCE_MUSTER_GET @CMP_ID,@FROM_DATE,@TO_DATE,@BRANCH_ID,
										  @CAT_ID,@GRD_ID,@TYPE_ID,@DEPT_ID,@DESIG_ID,
										  @EMP_ID,@CONSTRAINT,@REPORT_FOR,@EXPORT_TYPE				

	CREATE table #LEAVE_CODE
	(
		LEAVE_CODE VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
	)
							  
	INSERT INTO #LEAVE_CODE 									  
	SELECT STATUS FROM #ATT_MUSTER_EXCEL 
	WHERE STATUS_2 IS NOT NULL AND STATUS_2 <>'' AND STATUS_2 <>'LC' GROUP BY STATUS

	--SELECT * from #ATT_MUSTER_EXCEL
	UPDATE DBO.#ATT_MUSTER_EXCEL SET STATUS = STATUS  +  '-LC'  WHERE STATUS_2 = 'LC' 



	CREATE table #CROSSTAB        --ADDED BY GADRIWALA MUSLIM 24042015 
	(   
		EMPLOYEE_CODE VARCHAR(100) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,         
		EMPLOYEE_NAME   VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		--DESIGNATION VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		--GRADE VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		--DEPARTMENT VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		Branch_Name Varchar(256) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		--DATE_OF_JOIN VARCHAR(15) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
		ENROLL_NO NUMERIC    ,
		EMP_ID INT,     -------------- ADD BY JIGNESH 31-07-2014 -------
		LATE_WITH_LEAVE BIT, --ADDED BY NIMESH 15-JUL-2015 (TO ADJUST LATE COMMING IN LEAVE) 
		--Added By Mukti(start)01022017
		Opening_Leave NUMERIC(18,2),
		Leaves_Deducted NUMERIC(18,2),
		Closing_Leave NUMERIC(18,2),
		Present  NUMERIC(18,2),
		[Absent] NUMERIC(18,2),
		Leave NUMERIC(18,2),
		Late NUMERIC(18,2),		
		Holiday NUMERIC(18,2),
		WeekOff NUMERIC(18,2)	
		--Added By Mukti(end)01022017
	)    
	
	CREATE table #Leave_Details  --Mukti(01022016)  
	(
		Present  NUMERIC(18,2),
		[Absent] NUMERIC(18,2),
		Leave NUMERIC(18,2),
		Late NUMERIC(18,2),		
		WeekOff NUMERIC(18,2)
	)          
	--select LT.Leave_Opening,lt.Leave_Used,lt.Leave_Closing
	--From T0140_leave_Transaction LT inner join 
	--(select max(For_Date) For_Date , Emp_ID ,leave_ID from T0140_leave_Transaction
	--WHERE CAST(CAST(For_date AS VARCHAR(11))AS DATETIME) <= @To_Date and Cmp_ID = 119
	--and LEave_ID in (511)Group by Emp_ID ,LEave_ID) q on Lt.Emp_Id = Q.Emp_ID and lt.For_Date = Q.For_Date
	--and lt.Leave_ID = Q.LEave_ID and LT.Emp_ID=13962

	CREATE NONCLUSTERED INDEX IX_DATA1 ON DBO.#CROSSTAB
	(	EMPLOYEE_CODE ) 
	
	CREATE table #UNPAID_LEAVE
	( 
		EMP_ID NUMERIC,
		CODE VARCHAR(100) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,         
		UNPAID_LEAVE NUMERIC(18,2)
	)              

CREATE NONCLUSTERED INDEX IX_DATA2 ON  DBO.#UNPAID_LEAVE
	(	EMP_ID ) 

	SELECT	DISTINCT EMP_ID, BRANCH_ID 
	INTO	#EMP_CONS_TEMP
	FROM	#ATT_MUSTER_EXCEL
	

	SELECT	E.EMP_ID, G.*
	INTO	#EMP_GEN_SETTING
	FROM	T0040_GENERAL_SETTING G	WITH (NOLOCK)		
			INNER JOIN #EMP_CONS_TEMP E ON G.BRANCH_ID=E.BRANCH_ID
			INNER JOIN (SELECT	MAX(GEN_ID) AS GEN_ID
						FROM	T0040_GENERAL_SETTING G1 WITH (NOLOCK)
								INNER JOIN #EMP_CONS_TEMP E1 ON G1.BRANCH_ID=E1.BRANCH_ID
								INNER JOIN (SELECT	G2.BRANCH_ID, MAX(FOR_DATE) AS FOR_DATE
											FROM	T0040_GENERAL_SETTING G2 WITH (NOLOCK)
													INNER JOIN #EMP_CONS_TEMP E2 ON G2.BRANCH_ID=E2.BRANCH_ID
											WHERE	G2.For_Date <= @TO_DATE
											GROUP BY G2.BRANCH_ID) G2 ON G1.Branch_ID=G2.Branch_ID and G1.For_Date=G2.FOR_DATE
						) G1 ON G.Gen_ID=G1.GEN_ID

	
  DECLARE @MONTH_DAYS AS NUMERIC
  SET @MONTH_DAYS = DATEDIFF (DD,@FROM_DATE,@TO_DATE) + 1
	
      
  DECLARE @DESCRIPTION AS VARCHAR(5)
  DECLARE @DESCRIPTION_ORG AS VARCHAR(900)        
  DECLARE @TEST AS VARCHAR(4000)        
  DECLARE @TEST1 AS VARCHAR(4000)  
  
   
    SET @TEST ='ALTER TABLE  #CROSSTAB ADD [PAYABLE_PRESENT_DAYS] VARCHAR(10) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS DEFAULT '''''        
	EXEC(@TEST)         
	SET @TEST='' 

	SET @TEST ='ALTER TABLE  #CROSSTAB ADD [EARLY_DEDUCT_DAYS] NUMERIC(18,2) DEFAULT 0'        
	EXEC(@TEST)         
	SET @TEST=''

	SET @TEST ='ALTER TABLE  #CROSSTAB ADD [WO_HO_DAY] NUMERIC(18,2) DEFAULT 0'        
	EXEC(@TEST)         
	SET @TEST='' 
	 -- ADDED BY ROHIT ON 24092013
	SET @TEST ='ALTER TABLE  #CROSSTAB ADD [PAYABLE_DAYS] VARCHAR(10) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS DEFAULT '''''        
	EXEC(@TEST)         
	SET @TEST=''
  ------------------------     
  --print @MONTH_DAYS
 
	IF @MONTH_DAYS = 31
		BEGIN 
			DECLARE ATT_MUSTER CURSOR FOR   
			SELECT TOP 38			
					CASE ROW_ID  
						WHEN 32
							THEN 'P' 
						WHEN 33
							THEN 'A' 
						WHEN 34
							THEN 'L'
						WHEN 35
							THEN 'W'
						WHEN 36
							THEN 'H'
						WHEN 37
							THEN 'LC'
						WHEN 38
							THEN 'GP'	 -- CHANGED BY GADRIWALA MUSLIM 27042015
						ELSE
							CASE When @IS_WHOSOFF = 1 Then
								RIGHT(CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2)
							Else
								RIGHT('0' + CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2) +  '-' + RIGHT('0' + CAST(DATEPART(Month,FOR_DATE) AS VARCHAR(2)) , 2)
							END
					END AS	ROW_ID, FOR_DATE
			FROM #ATT_MUSTER_EXCEL  ORDER BY EMP_ID,FOR_DATE --ASC 
			 
		END
ELSE IF @MONTH_DAYS = 30
		BEGIN 
			DECLARE ATT_MUSTER CURSOR FOR   
			SELECT TOP 38
			CASE ROW_ID  
				WHEN 31
					THEN '0' 
				WHEN 32
					THEN 'P' 
				WHEN 33
					THEN 'A' 
				WHEN 34
					THEN 'L'
				WHEN 35
					THEN 'W'
				WHEN 36
					THEN 'H'
				WHEN 37
					THEN 'LC'
				WHEN 38
					THEN 'GP'	 -- CHANGED BY GADRIWALA MUSLIM 27042015
				ELSE
					--CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2))
					CASE When @IS_WHOSOFF = 1 Then
						RIGHT(CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2)
					Else
						RIGHT('0' + CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2) +  '-' + RIGHT('0' + CAST(DATEPART(Month,FOR_DATE) AS VARCHAR(2)) , 2)
					END

			END AS ROW_ID, FOR_DATE
			FROM #ATT_MUSTER_EXCEL  ORDER BY EMP_ID,FOR_DATE --ASC  
		END
ELSE IF @MONTH_DAYS = 28
		BEGIN 
			DECLARE ATT_MUSTER CURSOR FOR   
			SELECT TOP 38
			CASE ROW_ID  
				WHEN 29
					THEN 'AA'
				WHEN 30
					THEN 'BB'				
				WHEN 31
					THEN 'CC' 
				WHEN 32
					THEN 'P' 
				WHEN 33
					THEN 'A' 
				WHEN 34
					THEN 'L'
				WHEN 35
					THEN 'W'
				WHEN 36
					THEN 'H'
				WHEN 37
					THEN 'LC'
				WHEN 38
					THEN 'GP'	 -- CHANGED BY GADRIWALA MUSLIM 27042015
				ELSE
					CASE When @IS_WHOSOFF = 1 Then
						RIGHT(CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2)
					Else
						RIGHT('0' + CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2) +  '-' + RIGHT('0' + CAST(DATEPART(Month,FOR_DATE) AS VARCHAR(2)) , 2)
					END
			END AS ROW_ID, FOR_DATE
			FROM #ATT_MUSTER_EXCEL  ORDER BY EMP_ID,FOR_DATE --ASC  
		END
ELSE IF @MONTH_DAYS = 29
		BEGIN 
			DECLARE ATT_MUSTER CURSOR FOR   
			SELECT TOP 38
			CASE ROW_ID  
				WHEN 30
					THEN 'AA'
				WHEN 31
					THEN 'BB'				
				WHEN 32
					THEN 'P' 
				WHEN 33
					THEN 'A' 
				WHEN 34
					THEN 'L'
				WHEN 35
					THEN 'W'
				WHEN 36
					THEN 'H'
				WHEN 37
					THEN 'LC'
				WHEN 38
					THEN 'GP'	 -- CHANGED BY GADRIWALA MUSLIM 27042015
				ELSE
					--CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2))
					CASE When @IS_WHOSOFF = 1 Then
						RIGHT(CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2)
					Else
						RIGHT('0' + CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2) +  '-' + RIGHT('0' + CAST(DATEPART(Month,FOR_DATE) AS VARCHAR(2)) , 2)
					END
			END AS ROW_ID,FOR_DATE
			FROM #ATT_MUSTER_EXCEL  ORDER BY EMP_ID,FOR_DATE --ASC  
		END
		  
  --) AS A  ORDER BY ROW_ID ASC   
  
  DECLARE @INSERT_WEEKDAY VARCHAR(MAX);
  DECLARE @VALUE_WEEKDAY VARCHAR(MAX);
  DECLARE @WEEKDAY VARCHAR(2);	--ANKIT 29102015
  DECLARE @FOR_DATE DATETIME;
 
 

  SET @INSERT_WEEKDAY = '';
  SET @VALUE_WEEKDAY = ''
  OPEN ATT_MUSTER        
   FETCH NEXT FROM ATT_MUSTER INTO @DESCRIPTION, @FOR_DATE
   WHILE @@FETCH_STATUS = 0        
    BEGIN 
        IF ISNUMERIC(REPLACE(@DESCRIPTION, '-','')) = 1
        BEGIN
			
			IF CAST(REPLACE(@DESCRIPTION, '-','') AS NUMERIC) > 0
			BEGIN
				
				SET @WEEKDAY = DATENAME(DW, @FOR_DATE);
				SET @INSERT_WEEKDAY = @INSERT_WEEKDAY + '[' + @DESCRIPTION + '],'
				SET @VALUE_WEEKDAY = @VALUE_WEEKDAY + '''' + @WEEKDAY + ''','
				
			END
        END
       -- print @DESCRIPTION
		SET @DESCRIPTION_ORG=@DESCRIPTION        
		SET @DESCRIPTION=REPLACE(@DESCRIPTION,' ','_')        
		SET @DESCRIPTION=REPLACE (@DESCRIPTION,'.','_')        

			IF @DESCRIPTION <> 'AA' AND @DESCRIPTION <>'BB' AND @DESCRIPTION <> 'CC' AND @DESCRIPTION <> '0'
			BEGIN
				IF ISNUMERIC(REPLACE(@DESCRIPTION, '-','')) = 0
					SET @TEST ='ALTER TABLE  #CROSSTAB ADD ['+ @DESCRIPTION +']  VARCHAR(10) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS DEFAULT 0'
				ELSE
					SET @TEST ='ALTER TABLE  #CROSSTAB ADD ['+ @DESCRIPTION +']  VARCHAR(10) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS DEFAULT '''''
					
				EXEC(@TEST)         				
				SET @TEST=''        				
			END             
    FETCH NEXT FROM ATT_MUSTER INTO @DESCRIPTION, @FOR_DATE        
    END        
  CLOSE ATT_MUSTER         
  DEALLOCATE ATT_MUSTER        

	IF @IS_WHOSOFF <> 1
		BEGIN
			SET @INSERT_WEEKDAY = 'INSERT INTO #CROSSTAB(' + @INSERT_WEEKDAY + 'EMPLOYEE_CODE,Emp_ID)VALUES(' + @VALUE_WEEKDAY + '0,0)';
			EXEC (@INSERT_WEEKDAY);
		END	 

--select * from ATT_MUSTER

 -- ENDED BY ROHIT ON 24092013
 --ADDED BY GADRIWALA MUSLIM 24042015 - START
 INSERT INTO #CROSSTAB(EMPLOYEE_CODE,EMPLOYEE_NAME,Branch_Name,ENROLL_NO,EMP_ID)   
 SELECT DISTINCT  AM.EMP_CODE,AM.EMP_FULL_NAME,AM.BRANCH_NAME,ENROLL_NO,EM.EMP_ID
 FROM #ATT_MUSTER_EXCEL AM LEFT OUTER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON AM.EMP_ID = EM.EMP_ID

      
DECLARE @CODE AS VARCHAR(50)        
DECLARE @EMPNAME AS VARCHAR(200) 
DECLARE @STATUS AS VARCHAR(50)  
DECLARE @STATUS_2 AS VARCHAR(50)  
DECLARE @EXTRA_AB_DEDUCTION AS NUMERIC(18,2)
DECLARE @PRESENT_DAYS AS NUMERIC(18,2)
DECLARE @A_DAYS AS NUMERIC(18,2)
DECLARE @P_DAYS AS NUMERIC(18,2)
DECLARE @UNPAID_LEAVE_DAYS AS NUMERIC(18,2)
DECLARE @PRE_EMP_CODE AS VARCHAR(50)
DECLARE @ABSENT_DAYS AS NUMERIC(18,2)
DECLARE @LEAVE_COUNT AS NUMERIC(18,2)
DECLARE @GATE_PASS_DAYS AS NUMERIC(18,2) -- GADRIWALA MUSLIM 27032015
DECLARE @LATE_DEDUCT_DAYS AS NUMERIC(18,2) -- GADRIWALA MUSLIM 27032015
DECLARE @EARLY_DEDUCT_DAYS AS NUMERIC(18,2)-- GADRIWALA MUSLIM 27032015
DECLARE @WO_HO_DAYS AS NUMERIC(18,2) -- GADRIWALA MUSLIM 27032015   
DECLARE @CUR_BRANCH_ID AS NUMERIC(18,0) -- GADRIWALA MUSLIM 24-12-2015              
DECLARE @PREV_BRANCH_ID AS NUMERIC(18,0) -- GADRIWALA MUSLIM 24-12-2015
SET @DESCRIPTION = ''        
SET @EXTRA_AB_DEDUCTION = 0
SET @PRESENT_DAYS = 0
SET @A_DAYS = 0
SET @P_DAYS = 0
SET @UNPAID_LEAVE_DAYS = 0
SET @LEAVE_COUNT = 0
SET @GATE_PASS_DAYS = 0 -- GADRIWALA MUSLIM 27032015
SET @LATE_DEDUCT_DAYS = 0 -- GADRIWALA MUSLIM 27032015
SET @EARLY_DEDUCT_DAYS = 0 -- GADRIWALA MUSLIM 27032015
SET @WO_HO_DAYS = 0 -- GADRIWALA MUSLIM 27032015
SET @CUR_BRANCH_ID = 0 	-- GADRIWALA MUSLIM 24-12-2015 
SET @PREV_BRANCH_ID = 0 -- GADRIWALA MUSLIM 24-12-2015

DECLARE @WO_INC AS TINYINT
DECLARE @HO_INC AS TINYINT
DECLARE @PAYABLE_PRESENT_DAYS NUMERIC(18,2)						
DECLARE @WEEKOFF_DAYS NUMERIC(18,2)
DECLARE @HOLIDAY_DAYS NUMERIC(18,2)
DECLARE @LC_DAYS NUMERIC(18,2)
DECLARE @GP_DAYS NUMERIC(18,2)
DECLARE @PAID_LEAVE NUMERIC(18,2)

DECLARE @EARLY_COUNT_DAYS NUMERIC(18,2) -- Added By nilesh Patel on 09062016
DECLARE @Opening_Leave NUMERIC(18,2)
DECLARE @Leaves_Deducted NUMERIC(18,2)
DECLARE @Closing_Leave NUMERIC(18,2)
		 	
SET @WO_INC = 0
SET @HO_INC = 0
SET @PAYABLE_PRESENT_DAYS = 0

--PRINT 'ATT_MUSTERVALUE- START' +  CONVERT(VARCHAR(20),GETDATE(),114)
	DECLARE ATT_MUSTERVALUE CURSOR FOR        
	SELECT A.EMP_CODE,A.EMP_FULL_NAME,STATUS,ISNULL(STATUS_2,'') AS  STATUS_2, P_DAYS,A_DAYS,WO_HO_DAY,
	CASE ROW_ID  
		WHEN 32
			THEN 'P' 
		WHEN 33
			THEN 'A' 
		WHEN 34
			THEN 'L'
		WHEN 35
			THEN 'W'
		WHEN 36
			THEN 'H'
		WHEN 37
			THEN 'LC'
		WHEN 38
			THEN 'GP'	 -- CHANGED BY GADRIWALA MUSLIM 27042015
		ELSE
			--CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) 
			CASE When @IS_WHOSOFF = 1 Then
				RIGHT(CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2)
			Else
				RIGHT('0' + CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2) +  '-' + RIGHT('0' + CAST(DATEPART(Month,FOR_DATE) AS VARCHAR(2)) , 2)
			END
	END AS ROW_ID,ISNULL(EXTRA_AB_DEDUCTION,0), LEAVE_COUNT,EARLY_DEDUCT_DAYS,A.BRANCH_ID, A.EMP_ID
	FROM #ATT_MUSTER_EXCEL A INNER JOIN T0080_EMP_MASTER E WITH (NOLOCK) ON A.EMP_ID = E.EMP_ID
	ORDER BY A.EMP_ID,FOR_DATE      

	OPEN ATT_MUSTERVALUE        
	FETCH NEXT FROM ATT_MUSTERVALUE INTO @CODE,@EMPNAME,@STATUS,@STATUS_2,@P_DAYS,@A_DAYS,@WO_HO_DAYS,@DESCRIPTION,@EXTRA_AB_DEDUCTION,@LEAVE_COUNT,@EARLY_DEDUCT_DAYS,@CUR_BRANCH_ID,@EMP_ID
	WHILE @@FETCH_STATUS = 0        
		BEGIN      		      
			IF @PRE_EMP_CODE <> @CODE
				SET @UNPAID_LEAVE_DAYS = 0

			SET @DESCRIPTION_ORG=@DESCRIPTION        
			SET @DESCRIPTION=REPLACE(REPLACE(@DESCRIPTION,' ','_'),'.','_')				
			SET @TEST1 ='UPDATE #CROSSTAB SET [' + cast(@DESCRIPTION AS varchar(5)) + '] = ''' +  cast(@STATUS as varchar(50))  + '''  WHERE  Emp_ID = '''+ CAST(@EMP_ID as VARCHAR(10)) + ''''        

			EXEC(@TEST1)          
			SET @TEST='' 

			IF ISNULL(@EARLY_DEDUCT_DAYS,0) = 0
				SET @EARLY_DEDUCT_DAYS = 0
			IF ISNULL(@WO_HO_DAYS,0) = 0
				SET @WO_HO_DAYS = 0		
			IF ISNULL(@P_DAYS,0) = 0
				SET @P_DAYS = 0
		
			--ADDED BY GADRIWALA MUSLIM 27032015 - START
			--UPDATE #CROSSTAB  SET EARLY_DEDUCT_DAYS = EARLY_DEDUCT_DAYS + ISNULL(@EARLY_DEDUCT_DAYS,0) WHERE CODE =@CODE		     
			IF (@P_DAYS = 1)  -- FOR PRESENT DAY IN WEEK OFF OR HOLIDAY DAY
				BEGIN
					UPDATE	#CROSSTAB  
					SET		EARLY_DEDUCT_DAYS = EARLY_DEDUCT_DAYS + @EARLY_DEDUCT_DAYS
							--,WO_HO_DAY =  ISNULL(WO_HO_DAY,0) + @WO_HO_DAYS 
							/* Comment by Ankit/Hardikbhai 01012016 
								--Total Days set wrong --It Calculate Both Present & weekly off already then not need to Deduct days 
								(Client Wonder :Mail - 01012016) */
					WHERE	Emp_ID =@Emp_ID
				END	
			ELSE IF (@P_DAYS < @WO_HO_DAYS AND @P_DAYS > 0)  -- WORK HALF DAY ON WEEK OFF OR HOLIDAY
				BEGIN
					UPDATE	#CROSSTAB  
					SET		EARLY_DEDUCT_DAYS = EARLY_DEDUCT_DAYS + @EARLY_DEDUCT_DAYS
							--,WO_HO_DAY =  ISNULL(WO_HO_DAY,0) + (@WO_HO_DAYS - @P_DAYS) 
							/* Comment by Ankit/Hardikbhai 01012016 
								--Total Days set wrong --It Calculate Both Present & weekly off already then not need to Deduct days 
								(Client Wonder :Mail - 01012016) */
					WHERE	Emp_ID =@Emp_ID
				END	
			ELSE
				BEGIN
					UPDATE	#CROSSTAB  
					SET		EARLY_DEDUCT_DAYS = EARLY_DEDUCT_DAYS + @EARLY_DEDUCT_DAYS
					WHERE	Emp_ID =@Emp_ID
				END
		
			--ADDED BY GADRIWALA MUSLIM 27032015 - END
			IF (@A_DAYS = 1 OR @A_DAYS = 0.5) AND NOT @STATUS_2 IS NULL AND ISNUMERIC(@STATUS_2) = 1 --@STATUS_2 <> ''  commented and change jimit 20052016
			 AND @STATUS_2 <> 'LC' AND @STATUS_2 <> 'EC' and @Status_2 <> 'EG' and @Status_2 <> 'P'  --AND @LEAVE_COUNT IS NULL	 --COMMENTED BY HARDIK 02/12/2015 AS UNPAID LEAVE AND PAID LEAVE ON SAME DATE, ABSENT DAY COUNT SHOWING WRONG							
				SET @UNPAID_LEAVE_DAYS = @UNPAID_LEAVE_DAYS + (@STATUS_2 - ISNULL(@LEAVE_COUNT,0))
				
			--PRINT '@DESCRIPTION = ''A'' START' + convert(varchar(20),getdate(),114)	
			IF @DESCRIPTION = 'A'
				BEGIN
					IF @UNPAID_LEAVE_DAYS > 0
						INSERT INTO #UNPAID_LEAVE
						SELECT @EMP_ID,@CODE,@UNPAID_LEAVE_DAYS
					
					IF @UNPAID_LEAVE_DAYS > 0 AND @STATUS >= @UNPAID_LEAVE_DAYS AND @LEAVE_COUNT IS NULL
						SET @STATUS = @STATUS - @UNPAID_LEAVE_DAYS
									
					--SET @ABSENT_DAYS = ISNULL(@STATUS,0)  + (ISNULL(@STATUS,0)  * @EXTRA_AB_DEDUCTION)
					SET @ABSENT_DAYS = CASE WHEN (ISNULL(@STATUS,0)  * @EXTRA_AB_DEDUCTION) % 0.50 = 0 THEN (ISNULL(@STATUS,0)  * @EXTRA_AB_DEDUCTION) ELSE (ISNULL(@STATUS,0)  * @EXTRA_AB_DEDUCTION)+0.25 END
					
					SELECT @PRESENT_DAYS = P FROM #CROSSTAB WHERE Emp_ID =@Emp_ID AND ISNUMERIC(ISNULL(P, '')) =1 AND ISNULL(P, '') <> ''
					
					IF @EXTRA_AB_DEDUCTION > 0
						BEGIN 
							IF @PRESENT_DAYS >= @ABSENT_DAYS
								BEGIN
									SET @TEST1 ='UPDATE #CROSSTAB SET PAYABLE_PRESENT_DAYS =  ' +  CAST(@PRESENT_DAYS - ISNULL(@ABSENT_DAYS,0) AS VARCHAR(50))   + ' WHERE  EMP_ID = '''+ CAST(@EMP_ID AS VARCHAR(10)) + ''''        
									EXEC(@TEST1)        
									SET @TEST=''    							 
								END
							ELSE
								UPDATE #CROSSTAB SET PAYABLE_PRESENT_DAYS = 0 WHERE Emp_ID =@Emp_ID
						END
					ELSE
						UPDATE #CROSSTAB SET PAYABLE_PRESENT_DAYS=@PRESENT_DAYS WHERE Emp_ID =@Emp_ID			
				END
		
			IF @DESCRIPTION = 'GP' AND @IS_WHOSOFF = 1 -- ADDED BY GADRIWALA MUSLIM 17062015 - START
				BEGIN
					IF ISNULL(@EXTRA_AB_DEDUCTION,0) = 0
						BEGIN
							IF @PREV_BRANCH_ID <> @CUR_BRANCH_ID 
								BEGIN
									SELECT @HO_INC =  INC_HOLIDAY,@WO_INC = INC_WEEKOFF FROM T0040_GENERAL_SETTING GS WITH (NOLOCK) INNER JOIN
										(
											SELECT MAX(FOR_DATE) AS FOR_DATE,GEN_ID FROM DBO.T0040_GENERAL_SETTING WITH (NOLOCK)
											WHERE FOR_DATE < = @TO_DATE AND BRANCH_ID = @CUR_BRANCH_ID 
											AND CMP_ID = @CMP_ID GROUP BY GEN_ID 
										) QRY ON QRY.GEN_ID = GS.GEN_ID
									WHERE BRANCH_ID = @CUR_BRANCH_ID	
									
									SET @PREV_BRANCH_ID = @CUR_BRANCH_ID	--Ankit 01062016
								END
						
							SET @WEEKOFF_DAYS = 0
							SET @HOLIDAY_DAYS = 0
							SET @LC_DAYS = 0
							SET @GP_DAYS = 0
							SET @PAID_LEAVE = 0
							SET @EARLY_COUNT_DAYS = 0 --Added by nilesh patel on 09062016
						
							SELECT @WEEKOFF_DAYS = CASE WHEN W = '' THEN 0 ELSE CAST(W AS NUMERIC(18,2)) END,
								   @HOLIDAY_DAYS = CASE WHEN H = '' THEN 0 ELSE CAST(H AS NUMERIC(18,2)) END, 
								   @LC_DAYS = CASE WHEN LC = '' THEN 0 ELSE CAST(LC AS NUMERIC(18,2)) END,
								   @GP_DAYS = CASE WHEN GP = '' THEN 0 ELSE CAST(GP AS NUMERIC(18,2)) END,
								   @PAID_LEAVE = CASE WHEN L = '' THEN 0 ELSE CAST(L AS NUMERIC(18,2))END,
								   @EARLY_COUNT_DAYS = Case When EARLY_DEDUCT_DAYS > 0 Then Isnull(EARLY_DEDUCT_DAYS,0) Else 0 END -- Added by Nilesh 
							FROM #CROSSTAB WHERE Emp_ID =@Emp_ID
												
						
							SET @PAYABLE_PRESENT_DAYS = ISNULL(@PRESENT_DAYS,0) 
										
							IF ISNULL(@HO_INC,0) = 1
								SET @PAYABLE_PRESENT_DAYS = @PAYABLE_PRESENT_DAYS +  ISNULL(@HOLIDAY_DAYS,0)
							
							IF ISNULL(@WO_INC,0) = 1
								SET @PAYABLE_PRESENT_DAYS = @PAYABLE_PRESENT_DAYS +  ISNULL(@WEEKOFF_DAYS,0)	
							
							SET	@PAYABLE_PRESENT_DAYS = (@PAYABLE_PRESENT_DAYS + ISNULL(@PAID_LEAVE,0)) - ( ISNULL(@LC_DAYS,0) + ISNULL(@GP_DAYS,0) + ISNULL(@EARLY_COUNT_DAYS,0))
						
							IF @PAYABLE_PRESENT_DAYS < 0 
								SET @PAYABLE_PRESENT_DAYS	= 0
						 
							UPDATE #CROSSTAB SET PAYABLE_PRESENT_DAYS= @PAYABLE_PRESENT_DAYS WHERE Emp_ID =@Emp_ID
						END
				END
			
			-- ADDED BY GADRIWALA MUSLIM 17062015 - END	
			SET @PRE_EMP_CODE = @CODE            
            --Added By Mukti(start)01022017
            set @Opening_Leave=0
            set @Leaves_Deducted=0
            set @Closing_Leave=0
            
            select @Opening_Leave=LT.Leave_Closing
			From T0140_leave_Transaction LT WITH (NOLOCK)
			inner join (select MAX(For_Date) For_Date , Emp_ID ,leave_ID from T0140_leave_Transaction WITH (NOLOCK)
			WHERE CAST(CAST(For_date AS VARCHAR(11))AS DATETIME) <= @From_Date and Cmp_ID = @cmp_id
			and LEave_ID in (select Leave_ID from T0040_LEAVE_MASTER WITH (NOLOCK) where Leave_Sorting_No=1 and Cmp_ID=@cmp_id)
			Group by Emp_ID ,LEave_ID) q on Lt.Emp_Id = Q.Emp_ID and lt.For_Date = Q.For_Date
			and lt.Leave_ID = Q.LEave_ID and LT.Emp_ID=@Emp_ID

			select @Leaves_Deducted=Q.Leave_Used + Q.Half_Payment_Days + Q.Backdated_Leave
			From T0140_leave_Transaction LT WITH (NOLOCK)
			inner join (select Sum(Leave_Used) as Leave_Used, Sum(Half_Payment_Days) as Half_Payment_Days,
			ISNULL(SUM(BACK_DATED_LEAVE),0) AS BACKDATED_LEAVE , Emp_ID ,leave_ID from T0140_leave_Transaction WITH (NOLOCK)
			WHERE For_Date >=@From_date and For_Date <=@To_Date and Cmp_ID = @cmp_id
			and LEave_ID in (select Leave_ID from T0040_LEAVE_MASTER WITH (NOLOCK) where Leave_Sorting_No=1 and Cmp_ID=@cmp_id)
			Group by Emp_ID ,LEave_ID) q on Lt.Emp_Id = Q.Emp_ID 
			and lt.Leave_ID = Q.LEave_ID and LT.Emp_ID=@Emp_ID
			
            select @Closing_Leave=lt.Leave_Closing
			From T0140_leave_Transaction LT WITH (NOLOCK)
			inner join (select max(For_Date) For_Date , Emp_ID ,leave_ID from T0140_leave_Transaction WITH (NOLOCK)
			WHERE CAST(CAST(For_date AS VARCHAR(11))AS DATETIME) <= @To_Date and Cmp_ID = @cmp_id
			and LEave_ID in (select Leave_ID from T0040_LEAVE_MASTER WITH (NOLOCK) where Leave_Sorting_No=1 and Cmp_ID=@cmp_id)
			Group by Emp_ID ,LEave_ID) q on Lt.Emp_Id = Q.Emp_ID and lt.For_Date = Q.For_Date
			and lt.Leave_ID = Q.LEave_ID and LT.Emp_ID=@Emp_ID

            update #CROSSTAB
            SET Opening_Leave=@Opening_Leave,Leaves_Deducted=@Leaves_Deducted,Closing_Leave=@Closing_Leave
            where Emp_ID =@Emp_ID
            
            update #CROSSTAB set Present=P,[Absent]=A,Leave=L,Late=LC,WeekOff=W,Holiday=H
            where Emp_ID =@Emp_ID
            --Added By Mukti(end)01022017
			FETCH NEXT FROM ATT_MUSTERVALUE INTO @CODE,@EMPNAME,@STATUS,@STATUS_2,@P_DAYS,@A_DAYS,@WO_HO_DAYS,@DESCRIPTION,@EXTRA_AB_DEDUCTION,@LEAVE_COUNT,@EARLY_DEDUCT_DAYS,@CUR_BRANCH_ID, @EMP_ID
		END        
	CLOSE ATT_MUSTERVALUE         
	DEALLOCATE ATT_MUSTERVALUE                  

	--SELECT 1321
	---- ADD BY JIGNESH 05-08-2014---------------
	UPDATE	#CROSSTAB 
	SET		A = ISNULL(A,0)-ISNULL(UL.UNPAID_LEAVE,0)
	FROM	#CROSSTAB T INNER JOIN T0080_EMP_MASTER EM ON T.EMP_ID= EM.Emp_ID -- COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS AND CMP_ID = @CMP_ID
			LEFT OUTER JOIN (SELECT EMP_ID,CODE,ISNULL(SUM(UNPAID_LEAVE),0) AS UNPAID_LEAVE FROM #UNPAID_LEAVE GROUP BY EMP_ID,CODE ) AS UL ON T.EMP_ID=UL.EMP_ID
	------------------ END ---------------------------

	---ADDED BY NIMESH 15-JUL-2015 (TO GET SETTING FROM GENERAL SETTINGS FOR ADJUST LATE COMMING IN LEAVE)
	UPDATE	#CROSSTAB SET LATE_WITH_LEAVE=T.LATE_WITH_LEAVE
	FROM	#CROSSTAB C INNER JOIN
			(SELECT T.CMP_ID, T.EMP_ID, T.BRANCH_ID, T.FOR_DATE,G.LATE_WITH_LEAVE
			FROM	(
					SELECT G.CMP_ID, INC.EMP_ID, INC.BRANCH_ID, MAX(FOR_DATE) AS FOR_DATE
					FROM T0040_GENERAL_SETTING G WITH (NOLOCK) INNER JOIN 
						(SELECT	CMP_ID,INC1.EMP_ID,BRANCH_ID 
						FROM	T0095_INCREMENT INC1 WITH (NOLOCK) INNER JOIN #CROSSTAB T ON INC1.Emp_ID=T.EMP_ID
								INNER JOIN (
									SELECT	MAX(INCREMENT_ID) AS INCREMENT_ID
									FROM	T0095_INCREMENT INC2 WITH (NOLOCK)
											INNER JOIN (
												SELECT	MAX(INCREMENT_EFFECTIVE_DATE) AS INCREMENT_EFFECTIVE_DATE, INC3.EMP_ID
												FROM	T0095_INCREMENT INC3 WITH (NOLOCK) INNER JOIN #CROSSTAB T ON INC3.Emp_ID=T.EMP_ID
												WHERE	INC3.CMP_ID=@CMP_ID 
														AND INC3.INCREMENT_EFFECTIVE_DATE <=@TO_DATE
												GROUP BY INC3.EMP_ID
												) INC3 ON INC2.Emp_ID=INC3.Emp_ID AND INC2.Increment_Effective_Date=INC3.Increment_Effective_Date
									WHERE INC2.CMP_ID=@CMP_ID 
								) INC2 ON INC1.INCREMENT_ID=INC2.INCREMENT_ID
						) INC ON G.CMP_ID=INC.CMP_ID AND G.BRANCH_ID=INC.BRANCH_ID				
					GROUP BY G.CMP_ID, INC.EMP_ID, INC.BRANCH_ID		
					) T INNER JOIN T0040_GENERAL_SETTING G WITH (NOLOCK) ON T.BRANCH_ID=G.BRANCH_ID AND T.CMP_ID=G.CMP_ID AND T.FOR_DATE=G.FOR_DATE						
			) T ON C.EMP_ID=T.EMP_ID 
	WHERE	T.CMP_ID=@CMP_ID



 ---- ADDED BY ROHIT ON 24092013
UPDATE  #CROSSTAB SET PAYABLE_DAYS = 
CASE WHEN 
(
--ISNULL(CAST((CASE WHEN P = '' THEN '0.0' ELSE ISNULL(P,0) END) AS NUMERIC(18,2)),0) + 
ISNULL(CAST((CASE WHEN PAYABLE_PRESENT_DAYS = '' THEN '0.0' ELSE ISNULL(PAYABLE_PRESENT_DAYS,0) END) AS NUMERIC(18,2)),0) + 
ISNULL(CAST((CASE WHEN H = '' OR G.Inc_Holiday= 0 THEN '0.0' ELSE ISNULL(H,0) END) AS NUMERIC(18,2)),0) + 
ISNULL(CAST((CASE WHEN W = '' OR G.Inc_Weekoff= 0 THEN '0.0' ELSE ISNULL(W,0) END) AS NUMERIC(18,2)),0) +  
ISNULL(CAST((CASE WHEN L = '' THEN '0.0' ELSE ISNULL(L,0) END) AS NUMERIC(18,2)),0) -
ISNULL(CAST((CASE WHEN GP = '' THEN '0.0' ELSE ISNULL(GP,0) END) AS NUMERIC(18,2)),0) -
(CASE WHEN (isnull(T.LATE_WITH_LEAVE,0) = 0) THEN ISNULL(CAST((CASE WHEN LC = '' THEN '0.0' ELSE ISNULL(LC,0) END) AS NUMERIC(18,2)),0) ELSE 0 END) - 
ISNULL(EARLY_DEDUCT_DAYS,0) 
 -- - ISNULL(WO_HO_DAY,0)--+ Comment by nilesh on 26022016 due to When Work on HO or WO is not cosider in present day 
--ISNULL(CAST(ISNULL(UL.UNPAID_LEAVE,0) AS NUMERIC(18,2)),0) - 
--CAST(
--ISNULL((CASE WHEN A = '' THEN '0.0' ELSE CASE 
--WHEN (ISNULL(A,0)*(EXTRA_AB_DEDUCTION))%0.50 =0 THEN (ISNULL(A,0)*(EXTRA_AB_DEDUCTION)) 
--ELSE (ISNULL(A,0)*(EXTRA_AB_DEDUCTION))+0.25 END END) ,0)
--AS NUMERIC(18,2))
) < 0
THEN 0
ELSE
(
--ISNULL(CAST((CASE WHEN P = '' THEN '0.0' ELSE ISNULL(P,0) END) AS NUMERIC(18,2)),0) + 
ISNULL(CAST((CASE WHEN PAYABLE_PRESENT_DAYS = '' THEN '0.0' ELSE ISNULL(PAYABLE_PRESENT_DAYS,0) END) AS NUMERIC(18,2)),0) + 
ISNULL(CAST((CASE WHEN H = '' OR G.Inc_Holiday= 0 THEN '0.0' ELSE ISNULL(H,0) END) AS NUMERIC(18,2)),0) + 
ISNULL(CAST((CASE WHEN W = '' OR G.Inc_Weekoff= 0 THEN '0.0' ELSE ISNULL(W,0) END) AS NUMERIC(18,2)),0) +  
ISNULL(CAST((CASE WHEN L = '' THEN '0.0' ELSE ISNULL(L,0) END) AS NUMERIC(18,2)),0) -
ISNULL(CAST((CASE WHEN GP = '' THEN '0.0' ELSE ISNULL(GP,0) END) AS NUMERIC(18,2)),0) -
(CASE WHEN isnull(T.LATE_WITH_LEAVE,0) = 0 THEN ISNULL(CAST((CASE WHEN LC = '' THEN '0.0' ELSE ISNULL(LC,0) END) AS NUMERIC(18,2)),0) ELSE 0 END) -
ISNULL(EARLY_DEDUCT_DAYS,0) 
 -- - ISNULL(WO_HO_DAY,0) Comment by nilesh on 26022016 due to When Work on HO or WO is not cosider in present day 
--+ 
--ISNULL(CAST(ISNULL(UL.UNPAID_LEAVE,0) AS NUMERIC(18,2)),0) -
--CAST(
--ISNULL((CASE WHEN A = '' THEN '0.0' ELSE CASE WHEN (ISNULL(A,0)*(EXTRA_AB_DEDUCTION))%0.50 =0 
--THEN (ISNULL(A,0)*(EXTRA_AB_DEDUCTION)) ELSE (ISNULL(A,0)*(EXTRA_AB_DEDUCTION))+0.25 END END),0)
--AS NUMERIC(18,2))
) 
END
FROM #CROSSTAB T INNER JOIN T0080_EMP_MASTER EM ON T.EMP_ID=EM.EMP_ID  --COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS AND CMP_ID = @CMP_ID
	LEFT OUTER JOIN #UNPAID_LEAVE UL ON T.EMP_ID = UL.EMP_ID
	INNER JOIN #EMP_GEN_SETTING G ON G.EMP_ID=T.EMP_ID



-- ENDED BY ROHIT ON 24092013


-------------- MODIFY JIGNESH 31-07-2014--------------------

--SELECT ROW_NUMBER() OVER(ORDER BY CODE ASC) AS ROW,* FROM #CROSSTAB C ORDER BY CODE
--DROP TABLE #CROSSTAB
--DROP TABLE #ATT_MUSTER_EXCEL

--Added by nilesh patel on 19102016 Start 
Update C
	Set C.PAYABLE_PRESENT_DAYS = 
								Case When T.LATE_WITH_LEAVE = 0 THEN 
										(iSNUll(Cast(C.PAYABLE_PRESENT_DAYS AS NUMERIC(18,2)),0) - isnull(C.LC,0) - ISNULL(C.EARLY_DEDUCT_DAYS,0))
								ELSE
									iSNUll(Cast(C.PAYABLE_PRESENT_DAYS AS NUMERIC(18,2)),0)
								End
FROM #CROSSTAB C INNER JOIN T0080_EMP_MASTER EM ON C.EMP_ID=EM.EMP_ID
INNER JOIN (SELECT T.CMP_ID, T.EMP_ID, T.BRANCH_ID, T.FOR_DATE,G.LATE_WITH_LEAVE
			FROM	(
					SELECT G.CMP_ID, INC.EMP_ID, INC.BRANCH_ID, MAX(FOR_DATE) AS FOR_DATE
					FROM T0040_GENERAL_SETTING G WITH (NOLOCK) INNER JOIN 
						(SELECT	CMP_ID,INC1.EMP_ID,BRANCH_ID 
						FROM	T0095_INCREMENT INC1 WITH (NOLOCK) INNER JOIN #CROSSTAB T ON INC1.Emp_ID=T.EMP_ID
								INNER JOIN (
									SELECT	MAX(INCREMENT_ID) AS INCREMENT_ID
									FROM	T0095_INCREMENT INC2 WITH (NOLOCK)
											INNER JOIN (
												SELECT	MAX(INCREMENT_EFFECTIVE_DATE) AS INCREMENT_EFFECTIVE_DATE, INC3.EMP_ID
												FROM	T0095_INCREMENT INC3 WITH (NOLOCK) INNER JOIN #CROSSTAB T ON INC3.Emp_ID=T.EMP_ID
												WHERE	INC3.CMP_ID=@CMP_ID 
														AND INC3.INCREMENT_EFFECTIVE_DATE <=@TO_DATE
												GROUP BY INC3.EMP_ID
												) INC3 ON INC2.Emp_ID=INC3.Emp_ID AND INC2.Increment_Effective_Date=INC3.Increment_Effective_Date
									WHERE INC2.CMP_ID=@CMP_ID 
								) INC2 ON INC1.INCREMENT_ID=INC2.INCREMENT_ID
						) INC ON G.CMP_ID=INC.CMP_ID AND G.BRANCH_ID=INC.BRANCH_ID				
					GROUP BY G.CMP_ID, INC.EMP_ID, INC.BRANCH_ID		
					) T INNER JOIN T0040_GENERAL_SETTING G WITH (NOLOCK) ON T.BRANCH_ID=G.BRANCH_ID AND T.CMP_ID=G.CMP_ID AND T.FOR_DATE=G.FOR_DATE						
			) T ON C.EMP_ID=T.EMP_ID 
--Added by nilesh patel on 19102016 End

----------- ADD BY JIGNESH 31-07-2014 LEAVE NAME ---------------
		DECLARE @QRY AS NVARCHAR(MAX)

		CREATE table #EMPLAVEDETAIL
		(
		ID_NUM INT IDENTITY(1,1),
		IEMP_ID INT
		)

		CREATE table #EMPDATA
		(
			EMP_ID		NUMERIC,
			ICODE		VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
			PAYABLE_PRESENT_DAYS	 VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
			PAYABLE_DAYS VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
			EARLY_DEDUCT_DAYS NUMERIC(18,2) DEFAULT 0  -- ADDED BY GADRIWALA 27032015	
		)


-------------------END -------------------------------


----------------- GET EMP WISE LEAVE DETAIL	---------------------------
			DECLARE @OD_COMOFF_SETTING INT
			--OD--COMP
			SELECT @OD_COMOFF_SETTING =ISNULL(SETTING_VALUE,0)
			FROM DBO.T0040_SETTING WITH (NOLOCK) WHERE CMP_ID=@CMP_ID AND SETTING_NAME  = 'OD AND COMPOFF LEAVE CONSIDER AS PRESENT'
			
			
			IF ISNULL(@OD_COMOFF_SETTING,0) = 0
				BEGIN					
					SELECT     EMP_ID, LEAVE_CODE, ISNULL(SUM(CASE WHEN LM.LEAVE_CODE = 'COMP' THEN LT.COMPOFF_USED ELSE LT.LEAVE_USED END),0) AS LEAVEDAYS
					INTO #EMP_LEAVE1
					FROM       T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK)
								ON LT.LEAVE_ID = LM.LEAVE_ID

					WHERE     (FOR_DATE BETWEEN @FROM_DATE AND @TO_DATE) AND LT.CMP_ID = @CMP_ID 
								AND (LT.LEAVE_USED <> 0 OR LT.COMPOFF_USED <> 0)
								--AND LM.LEAVE_PAID_UNPAID = 'P'
								AND EMP_ID IN (SELECT DISTINCT EMP_ID FROM #ATT_MUSTER_EXCEL)
					GROUP BY EMP_ID, LEAVE_CODE
					ORDER BY EMP_ID, LEAVE_CODE										
					
					
						
					--ADDED BY NIMESH 10-JUL-2015 (OD LEAVE SHOULD NOT BE DISPLAYED IN NORMAL LEAVE COLUMN)
					IF @IS_WHOSOFF = 0	--OD LEAVE DISPLAY IN NORMAL LEAVE COLUMN FOR HOME PAGE WHOSEOFF	--ANKIT 22082015
						BEGIN						
						UPDATE  #CROSSTAB SET L = CAST(CAST(L AS NUMERIC(18,2))- CAST(LU.LEAVE_USED AS NUMERIC(18,2)) AS VARCHAR)
							FROM #CROSSTAB C INNER JOIN 
											(
												SELECT	ISNULL(SUM(CASE WHEN LM.LEAVE_CODE = 'COMP' THEN LT.COMPOFF_USED ELSE LT.LEAVE_USED END),0) AS LEAVE_USED, EMP_ID
												FROM	T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK)
														ON LT.LEAVE_ID=LM.LEAVE_ID AND LT.CMP_ID=LM.CMP_ID
												WHERE	(LT.FOR_DATE BETWEEN @FROM_DATE AND @TO_DATE) AND LT.CMP_ID=@CMP_ID
														AND (LT.LEAVE_USED <> 0 OR LT.COMPOFF_USED <> 0) AND (LM.LEAVE_TYPE = 'COMPANY PURPOSE') -- OR LM.DEFAULT_SHORT_NAME='COMP')
												GROUP BY EMP_ID
											) LU ON C.EMP_ID=LU.EMP_ID And C.EMPLOYEE_CODE > '0' --Condition added by hardik for Code > 0 as it is giving error 04/01/2016	
							where  L <> ''
						END
				END
			ELSE
				BEGIN							
					SELECT     EMP_ID, LEAVE_CODE,isnull(SUM(Leave_Used),0) AS LeaveDays --case when LM.Apply_Hourly =1 then COUNT(LT.Leave_ID) --Added Condition by Sumit on 15092016
												  -- Else isnull(SUM(Leave_Used),0) End AS LeaveDays --ISNULL(SUM(LEAVE_USED),0) AS LEAVEDAYS
					INTO #EMP_LEAVE2
					
					FROM       T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK)
								ON LT.LEAVE_ID = LM.LEAVE_ID

					WHERE     (FOR_DATE BETWEEN @FROM_DATE AND @TO_DATE) AND LT.CMP_ID = @CMP_ID 
								AND LT.LEAVE_USED <> 0
								--AND LM.LEAVE_PAID_UNPAID = 'P'
								AND EXISTS (SELECT DISTINCT EMP_ID FROM #ATT_MUSTER_EXCEL EXL WHERE EXL.EMP_ID=LT.Emp_ID)
								AND LM.LEAVE_CODE NOT IN ('OD','COMP') 
					GROUP BY EMP_ID, LEAVE_CODE--,Apply_Hourly
					ORDER BY EMP_ID, LEAVE_CODE					
				END
			
			
				
		--------------------------- END -------------------------------
			
				DECLARE @STRUPDATE VARCHAR(8000)
				DECLARE @LEVNAME VARCHAR(8000)
				DECLARE @FIELDNAM VARCHAR(MAX)
				
	
				DECLARE @LEAVENAME VARCHAR(100)
				DECLARE @STRVAL NVARCHAR(500)
				
				--DECLARE ALTER_TABLE_CURSOR CURSOR FOR 
				
				IF ISNULL(@OD_COMOFF_SETTING,0) = 0
					BEGIN
					DECLARE ALTER_TABLE_CURSOR CURSOR FOR 
						SELECT  LV.LEAVE_CODE FROM DBO.T0040_LEAVE_MASTER  AS LV WITH (NOLOCK)
						INNER JOIN ( SELECT LEAVE_CODE  FROM #EMP_LEAVE1 GROUP BY LEAVE_CODE 
						  HAVING SUM (LEAVEDAYS) >0
						) AS TL
						ON LV.LEAVE_CODE = TL.LEAVE_CODE
						WHERE CMP_ID = @CMP_ID
						ORDER BY LV.LEAVE_SORTING_NO --LV.LEAVE_CODE
					END
				ELSE
						BEGIN
						DECLARE ALTER_TABLE_CURSOR CURSOR FOR 
						SELECT  LV.LEAVE_CODE FROM DBO.T0040_LEAVE_MASTER  AS LV WITH (NOLOCK)
						INNER JOIN ( SELECT LEAVE_CODE  FROM #EMP_LEAVE2 GROUP BY LEAVE_CODE 
						  HAVING SUM (LEAVEDAYS) >0
						) AS TL
						ON LV.LEAVE_CODE = TL.LEAVE_CODE
						WHERE CMP_ID = @CMP_ID
						AND LV.LEAVE_CODE NOT IN ('OD','COMP') 
						ORDER BY LV.LEAVE_SORTING_NO --LV.LEAVE_CODE
					END
					

				OPEN ALTER_TABLE_CURSOR

				FETCH NEXT FROM ALTER_TABLE_CURSOR INTO @LEAVENAME

				WHILE @@FETCH_STATUS = 0
				BEGIN
				
				SET @STRVAL = 'ALTER TABLE  #EMPLAVEDETAIL ADD ['+ @LEAVENAME +'] NUMERIC(22,2) DEFAULT 0 NOT NULL'
				EXEC (@STRVAL)	
								
				SET @LEVNAME = ISNULL(@LEVNAME,'') + '['+ @LEAVENAME +']' +','
				SET @FIELDNAM = ISNULL(@FIELDNAM,'') + 'ISNULL(['+ @LEAVENAME +'],0) AS '+ @LEAVENAME + ','
							
				FETCH NEXT FROM ALTER_TABLE_CURSOR INTO  @LEAVENAME
			END 
			CLOSE ALTER_TABLE_CURSOR;
			DEALLOCATE ALTER_TABLE_CURSOR;

			
			SET @LEVNAME = LEFT(@LEVNAME,LEN(@LEVNAME)-1)
			SET @FIELDNAM = LEFT(@FIELDNAM,LEN(@FIELDNAM)-1)
			
			IF ISNULL(@OD_COMOFF_SETTING,0) = 0
					BEGIN			
						SET @QRY = ' INSERT INTO #EMPLAVEDETAIL SELECT EMP_ID '
						+ CASE WHEN ISNULL(@FIELDNAM,'') <> '' THEN ',' ELSE '' END 
						+ ISNULL(@FIELDNAM,'') +
						' FROM #EMP_LEAVE1
						PIVOT (SUM (LEAVEDAYS) FOR LEAVE_CODE IN ('+@LEVNAME+')) AS EMPDATA 
						ORDER BY EMP_ID '
					END
			ELSE
					BEGIN
						
						SET @QRY = ' INSERT INTO #EMPLAVEDETAIL SELECT EMP_ID '
						+ CASE WHEN ISNULL(@FIELDNAM,'') <> '' THEN ',' ELSE '' END 
						+ ISNULL(@FIELDNAM,'') +
						' FROM #EMP_LEAVE2
						PIVOT (SUM (LEAVEDAYS) FOR LEAVE_CODE IN ('+@LEVNAME+')) AS EMPDATA 
						ORDER BY EMP_ID '
					END
		
			EXEC (@QRY)		
		
							
			INSERT INTO #EMPDATA (EMP_ID,ICODE,PAYABLE_PRESENT_DAYS,PAYABLE_DAYS,EARLY_DEDUCT_DAYS)
			SELECT EMP_ID,EMPLOYEE_CODE,PAYABLE_PRESENT_DAYS,PAYABLE_DAYS,EARLY_DEDUCT_DAYS  FROM #CROSSTAB
			
			--INSERT INTO #Leave_Details(Emp_ID,Present,[Absent],Leave,Late,[Half_Day],WeekOff)
			--SELECT EMP_ID,P,A,L,LC,H,W  FROM #CROSSTAB
			--update #CROSSTAB set Present=P,[Absent]=A,Leave=L
			--where 			
			--select * from #EMPDATA
			ALTER TABLE  #CROSSTAB DROP COLUMN LATE_WITH_LEAVE
						
			/*	START */			
			ALTER TABLE  #EMPLAVEDETAIL ADD DESIGNAME VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS;
			ALTER TABLE  #EMPDATA ADD DESIGNAME VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS;
			ALTER TABLE  #EMPLAVEDETAIL ADD EMPNAME VARCHAR(100) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS;
			ALTER TABLE  #EMPDATA ADD EMPNAME VARCHAR(100) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS;
			----added jimit 18072016  for whose off---------------
			ALTER TABLE  #EMPDATA ADD Branch_Id NUMERIC(18,0) 
			ALTER TABLE  #EMPDATA ADD Dept_Id NUMERIC(18,0) 
			
			UPDATE #EMPLAVEDETAIL 
			SET DESIGNAME =  (
								CASE WHEN D.DESIG_DIS_NO = 0 
									THEN DESIG_NAME 
								ELSE
									RIGHT(REPLICATE('0',21) + CAST(D.DESIG_DIS_NO AS VARCHAR), 21) 
								END
								),EMPNAME = EM.EMP_FIRST_NAME
			FROM	#EMPLAVEDETAIL T 
			INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON T.IEMP_ID = EM.EMP_ID	
			INNER JOIN (SELECT EMP_ID, INCREMENT_ID, I1.DESIG_ID
								FROM	T0095_INCREMENT I1 WITH (NOLOCK)
								WHERE	I1.INCREMENT_ID=(SELECT TOP 1 I2.INCREMENT_ID
															FROM	T0095_INCREMENT I2 WITH (NOLOCK)
															WHERE	I1.EMP_ID=I2.EMP_ID AND I1.CMP_ID=I2.CMP_ID
																	AND I2.INCREMENT_EFFECTIVE_DATE <= @TO_DATE
															ORDER BY I2.INCREMENT_EFFECTIVE_DATE DESC, I2.INCREMENT_ID DESC
														)
										AND I1.CMP_ID=@CMP_ID
								) I  ON T.IEMP_ID=I.EMP_ID
					INNER JOIN T0040_DESIGNATION_MASTER D WITH (NOLOCK) ON D.DESIG_ID=I.DESIG_ID
					
			UPDATE #EMPDATA 
			SET DESIGNAME =  (
								CASE WHEN D.DESIG_DIS_NO = 0 
									THEN DESIG_NAME 
								ELSE
									RIGHT(REPLICATE('0',21) + CAST(D.DESIG_DIS_NO AS VARCHAR), 21) 
								END
								),EMPNAME = EM.EMP_FIRST_NAME,Branch_ID = I.Branch_ID,Dept_ID = I.Dept_ID
			FROM	#EMPDATA T 
			INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON T.EMP_ID=EM.EMP_ID -- T.ICODE = EM.ALPHA_EMP_CODE COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS																
			 INNER JOIN (SELECT I1.EMP_ID,I1.INCREMENT_ID, I1.DESIG_ID,I1.Branch_ID,I1.Dept_ID
								FROM	T0095_INCREMENT I1 WITH (NOLOCK)
								WHERE	I1.INCREMENT_ID=(SELECT TOP 1 I2.INCREMENT_ID 
															FROM	T0095_INCREMENT I2 WITH (NOLOCK)
															WHERE	I1.EMP_ID=I2.EMP_ID AND I1.CMP_ID=I2.CMP_ID
																	AND I2.INCREMENT_EFFECTIVE_DATE <= @TO_DATE
															ORDER BY I2.INCREMENT_EFFECTIVE_DATE DESC, I2.INCREMENT_ID DESC
														)
										AND I1.CMP_ID=@CMP_ID
								) I  ON EM.EMP_ID=I.EMP_ID
					INNER JOIN T0040_DESIGNATION_MASTER D WITH (NOLOCK) ON D.DESIG_ID=I.DESIG_ID		
										 
			
			
			/*	END   */			
			
			--ADDED BY NIMESH 10-JUL-2015 (TO SORT BY CODE/NAME/ENROLL NO)
			IF @ORDER_BY = ''  OR @ORDER_BY = 'CODE'
				SET @ORDER_BY = '(CASE	WHEN ISNUMERIC(CODE) = 1 
											THEN RIGHT(REPLICATE(''0'',21) + CODE, 20)										
										ELSE 
											CODE
								 END) '
			ELSE IF @ORDER_BY = 'EMPLOYEE_NAME'
				SET @ORDER_BY = 'EMPNAME ' + ', (CASE	WHEN ISNUMERIC(CODE) = 1 
											THEN RIGHT(REPLICATE(''0'',21) + CODE, 20)										
										ELSE 
											CODE
								 END)'
			ELSE
				SET @ORDER_BY = @ORDER_BY + ', (CASE	WHEN ISNUMERIC(CODE) = 1 
											THEN RIGHT(REPLICATE(''0'',21) + CODE, 20)										
										ELSE 
											CODE
								 END) '
			
			--IF @COUNT = 0 
			--	SELECT @COUNT = COUNT(1) FROM #CROSSTAB
			
			DECLARE @ABSENT_LWP_QUERY AS VARCHAR(MAX);
			IF CHARINDEX('LWP', @FIELDNAM) > 0
				SET @ABSENT_LWP_QUERY = 'UPDATE #CROSSTABDATA SET A=ISNULL(A,0) + ISNULL(LWP,0)'
			ELSE
				SET @ABSENT_LWP_QUERY = '';
			
			--select * from #CROSSTAB			
			SET @QRY = 'SELECT C.*
			--'+ CASE WHEN ISNULL(@FIELDNAM,'') <> '' THEN ',' ELSE '' END + ISNULL(@FIELDNAM,'') +'
			INTO #CROSSTABDATA FROM #CROSSTAB AS C 
			LEFT OUTER JOIN 
			#EMPLAVEDETAIL AS EL ON C.EMP_ID = EL.IEMP_ID
			--ORDER BY ' + @ORDER_BY + '
					
			ALTER TABLE   #CROSSTABDATA DROP COLUMN EMP_ID
			--ALTER TABLE   #CROSSTABDATA DROP COLUMN IEMP_ID
			--ALTER TABLE   #CROSSTABDATA DROP COLUMN ID_NUM
			--ALTER TABLE   #CROSSTABDATA DROP COLUMN L
			--ALTER TABLE   #CROSSTABDATA DROP COLUMN LC

			ALTER TABLE   #CROSSTABDATA DROP COLUMN PAYABLE_PRESENT_DAYS
			--ALTER TABLE   #CROSSTABDATA DROP COLUMN TOTAL_DAYS
			ALTER TABLE   #CROSSTABDATA DROP COLUMN P
			ALTER TABLE   #CROSSTABDATA DROP COLUMN A
			ALTER TABLE   #CROSSTABDATA DROP COLUMN W
			ALTER TABLE   #CROSSTABDATA DROP COLUMN L
			ALTER TABLE   #CROSSTABDATA DROP COLUMN H
			ALTER TABLE   #CROSSTABDATA DROP COLUMN LC
			ALTER TABLE   #CROSSTABDATA DROP COLUMN GP			
			ALTER TABLE   #CROSSTABDATA DROP COLUMN Enroll_No
			
			ALTER TABLE   #CROSSTABDATA DROP COLUMN EARLY_DEDUCT_DAYS
			ALTER TABLE   #CROSSTABDATA DROP COLUMN WO_HO_DAY
			
			--SELECT  STATUS_2  AS DAY(FOR_DATE)  FROM #CROSSTABDATA CT INNER JOIN 
			--#DAY_STATUS DS ON DS.EMP_CODE = CT.EMPLOYEE_CODE
			--WHERE STATUS_2 = ''LC''			
			
			SELECT C.*, 
			--,ED.PAYABLE_PRESENT_DAYS,ED.EARLY_DEDUCT_DAYS,ED.TOTAL_DAYS,
			 --CASE WHEN SR_NO1 = 1 THEN NULL ELSE (' + CAST((DATEDIFF(DD, @FROM_DATE, @TO_DATE) + 1) AS VARCHAR) + ') END AS MONTH_DAYS,
			Ed.Branch_Id,Ed.dept_Id
			INTO #TEMP
			FROM #CROSSTABDATA AS C LEFT OUTER JOIN #EMPDATA AS ED ON C.EMPLOYEE_CODE = ED.ICODE
			--inner join #Leave_Details LD on ld.emp_id=c.emp_id 
			--ORDER BY SR_NO

			--ALTER TABLE  #TEMP DROP COLUMN SR_NO1	
			
			IF ' + CAST(@IS_WHOSOFF as VARCHAR) + ' <> 1
				Begin 
					ALTER TABLE  #TEMP DROP COLUMN Branch_Id
					ALTER TABLE  #TEMP DROP COLUMN dept_Id
				End
			
			SELECT * FROM #TEMP
			
			DROP TABLE #TEMP
			DROP TABLE #CROSSTAB
			DROP TABLE #ATT_MUSTER_EXCEL'
			--' + @ORDER_BY + '
			--print @QRY
			EXEC (@QRY)				
			
			IF @IS_WHOSOFF = 1 
				BEGIN
					DECLARE @LEAVE_FOOTER VARCHAR(5000)
					SET @LEAVE_FOOTER = ''
						
					SELECT  @LEAVE_FOOTER = STUFF((SELECT ' ' + S.LEAVE_NAME COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS + CASE WHEN APPLY_HOURLY=1 THEN ' (HOURLY) ' ELSE '' END  FROM  ---APPLY HOURLY ADDED BY SID 18/06/2014
					(	SELECT ('  ' + '<B>' + UPPER(LM.LEAVE_CODE COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS) +  '</B>' + ' : '  + LOWER(LM.LEAVE_NAME COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS) + ' ' ) AS LEAVE_NAME,CMP_ID,APPLY_HOURLY FROM T0040_LEAVE_MASTER LM WITH (NOLOCK) INNER JOIN
						#LEAVE_CODE LC ON UPPER(LM.LEAVE_CODE COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS) =   UPPER(LC.LEAVE_CODE)
					)
					S WHERE S.CMP_ID = T.CMP_ID FOR XML PATH('')),1,1,'')  FROM T0040_LEAVE_MASTER AS T WITH (NOLOCK)
					 WHERE T.CMP_ID=@CMP_ID GROUP BY T.CMP_ID
					
					SELECT  @LEAVE_FOOTER AS LEAVE_FOOTER	
				
			
					--IF (@PAGE_SIZE > 0)
					--	SELECT CAST(@COUNT AS INT) AS RECORD_COUNT, CEILING(@COUNT / @PAGE_SIZE) As Page_Count
					--ELSE	
					--	SELECT CAST(@COUNT AS INT) AS RECORD_COUNT, 1 As Page_Count
			   END	
			   
-------------------------------- END ----------------------------------


