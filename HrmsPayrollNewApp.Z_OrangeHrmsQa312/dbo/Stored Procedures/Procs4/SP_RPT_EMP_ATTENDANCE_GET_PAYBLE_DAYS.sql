
CREATE PROCEDURE [dbo].[SP_RPT_EMP_ATTENDANCE_GET_PAYBLE_DAYS]    
  @CMP_ID   NUMERIC    
 ,@FROM_DATE  DATETIME    
 ,@TO_DATE   DATETIME    
 ,@BRANCH_ID  NUMERIC    
 ,@CAT_ID   NUMERIC     
 ,@GRD_ID   NUMERIC    
 ,@TYPE_ID   NUMERIC    
 ,@DEPT_ID   NUMERIC    
 ,@DESIG_ID   NUMERIC    
 ,@EMP_ID   NUMERIC    
 ,@CONSTRAINT  VARCHAR(MAX)    
 ,@REPORT_FOR VARCHAR(50) = ''    
 ,@EXPORT_TYPE   VARCHAR(50) = 'EXCEL'    
 ,@TYPE   NUMERIC = 0    
 ,@IS_WHOSOFF TINYINT = 0        
 ,@ORDER_BY  VARCHAR(500) = 'CODE' 
 ,@PAGE_NO  INT = 1    
 ,@PAGE_SIZE  NUMERIC(15,2) = 0    
 ,@P_Branch  varchar(max) = ''
 ,@P_Vertical  varchar(max) = ''   
 ,@P_Subvertical  varchar(max) = '' 
 ,@P_Department  varchar(max) = ''
AS    
    
SET NOCOUNT ON     
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED    
SET ARITHABORT ON    
    
 CREATE table #Emp_Cons     
 (          
  Emp_ID numeric ,         
  Branch_ID numeric,    
  Increment_ID numeric    
 )        
     
 DECLARE @COUNT NUMERIC(9,2);    
 SET @COUNT = 0;    
 IF ISNULL(@PAGE_SIZE,0) > 0    
  BEGIN    
   IF (@PAGE_NO < 1)    
    SET @PAGE_NO = 1;    
       
   if @IS_WHOSOFF =1     
   BEGIN     
    if @DEPT_ID > 0    
     Set @P_Department = cast(@DEPT_ID as Varchar(max))    
    
     If @EMP_ID > 0    
      SET @constraint = ''    
    
    exec SP_RPT_FILL_EMP_CONS_MULTIDROPDOWN @Cmp_ID=@Cmp_ID,@From_Date=@From_Date,@To_Date=@To_Date,@Branch_ID=@Branch_ID,@Cat_ID=@Cat_ID,@Grd_ID=@Grd_ID,    
       @Type_ID=@Type_ID,@Dept_ID=@P_Department,@Desig_ID=@Desig_ID,@Emp_ID=@Emp_ID,@constraint=@constraint,    
       @PBranch_ID=@P_Branch,@Vertical_Id=@P_Vertical, @SubVertical_Id=@P_Subvertical    
    
   END    
   else    
   BEGIN    
    EXEC SP_RPT_FILL_EMP_CONS  @Cmp_ID,@From_Date,@To_Date,@Branch_ID,@Cat_ID,@Grd_ID,@Type_ID,@Dept_ID,@Desig_ID ,@Emp_ID ,@constraint ,0 ,0 ,0,0,0,0,0,0,3,0,0,@Type    
   end    
       
       
    
   SELECT @COUNT = COUNT(1) FROM #Emp_Cons    
       
   SET @CONSTRAINT = NULL    
       
   DECLARE @TOTAL_ROW_COUNT INT;    
   SET @TOTAL_ROW_COUNT =(@PAGE_SIZE * @PAGE_NO)    
       
   SET ROWCOUNT @TOTAL_ROW_COUNT    
       
   SELECT ROW_NO, EMP_ID INTO #TMP_CONS    
   FROM (    
     SELECT ROW_NUMBER() OVER (Order By ALPHA_EMP_CODE) As ROW_NO,E.Emp_ID    
     FROM #Emp_Cons E INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON E.EMP_ID=EM.EMP_ID    
    ) T       
   ORDER BY  ROW_NO     
    
    
   SELECT  @CONSTRAINT = COALESCE(@CONSTRAINT + '#', '') + CAST(Emp_ID AS VARCHAR(10))    
   FROM    #TMP_CONS    
   WHERE   ROW_NO  BETWEEN ((@PAGE_NO - 1) * @PAGE_SIZE + 1)    
     AND (@PAGE_NO * @PAGE_SIZE)    
                  
       
       
   SET ROWCOUNT 0;    
           
   IF CEILING(@COUNT / @PAGE_SIZE ) < @PAGE_NO AND @COUNT <> 1   
    SET @CONSTRAINT = '0';    
       
       
   IF @CONSTRAINT IS NULL    
    SET @CONSTRAINT = '0';    
   
  END    
 ELSE    
  EXEC SP_RPT_FILL_EMP_CONS  @Cmp_ID,@From_Date,@To_Date,@Branch_ID,@Cat_ID,@Grd_ID,@Type_ID,@Dept_ID,@Desig_ID ,@Emp_ID ,@constraint ,0 ,0 ,0,0,0,0,0,0,3,0,0,@Type    
     
     
 CREATE table #ATT_MUSTER_EXCEL     
 (     
  EMP_ID  NUMERIC ,     
  CMP_ID  NUMERIC,    
  FOR_DATE DATETIME,    
  STATUS  VARCHAR(10) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  LEAVE_COUNT NUMERIC(5,2),    
  WO_HO  VARCHAR(3) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  STATUS_2 VARCHAR(20) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  ROW_ID  NUMERIC ,    
  WO_HO_DAY NUMERIC(3,2) DEFAULT 0,    
  P_DAYS  NUMERIC(5,2) DEFAULT 0,    
  A_DAYS  NUMERIC(5,2) DEFAULT 0 ,    
  JOIN_DATE DATETIME DEFAULT NULL,    
  LEFT_DATE DATETIME DEFAULT NULL,    
  GATE_PASS_DAYS NUMERIC(18,2) DEFAULT 0,  
  LATE_DEDUCT_DAYS NUMERIC(18,2) DEFAULT 0,
  EARLY_DEDUCT_DAYS NUMERIC(18,2) DEFAULT 0, 
  EMP_CODE    VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  EMP_FULL_NAME  VARCHAR(300) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  BRANCH_ADDRESS VARCHAR(300) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  COMP_NAME VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  BRANCH_NAME VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  DEPT_NAME  VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  GRD_NAME VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  DESIG_NAME VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  P_FROM_DATE  DATETIME,    
  P_TO_DATE DATETIME,    
  BRANCH_ID NUMERIC(18,0),    
  DESIG_DIS_NO NUMERIC(18,2) DEFAULT 0,        
  SUBBRANCH_NAME VARCHAR(200) DEFAULT '' COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS    
 )    
       
       
        
 CREATE NONCLUSTERED INDEX IX_DATA ON DBO.#ATT_MUSTER_EXCEL    
  ( EMP_ID,EMP_CODE,ROW_ID )     
   
 if (@EMP_ID <> 0 and (@CONSTRAINT = '0' or @CONSTRAINT='' ))    
 begin    
  set @CONSTRAINT  = @EMP_ID    
 end     
     

 EXEC SP_RPT_EMP_ATTENDANCE_MUSTER_GET @CMP_ID,@FROM_DATE,@TO_DATE,@BRANCH_ID,    
            @CAT_ID,@GRD_ID,@TYPE_ID,@DEPT_ID,@DESIG_ID,    
            @EMP_ID,@CONSTRAINT,@REPORT_FOR,@EXPORT_TYPE    
  
 CREATE table #LEAVE_CODE    
 (    
  LEAVE_CODE VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS    
 )    
    
    
 INSERT INTO #LEAVE_CODE                
 SELECT STATUS FROM #ATT_MUSTER_EXCEL     
 WHERE STATUS_2 IS NOT NULL AND STATUS_2 <>'' AND STATUS_2 <>'LC' GROUP BY STATUS    
      
 UPDATE DBO.#ATT_MUSTER_EXCEL SET STATUS = STATUS  +  '-LC'  WHERE STATUS_2 = 'LC'     
 AND STATUS NOT LIKE '%LC%' ---Add By Jignesh 19-01-2021-----    
    
    
    
   --added by mansi start  
   UPDATE #ATT_MUSTER_EXCEL SET STATUS = REPLACE(STATUS,'-LC','') WHERE LEAVE_COUNT>0.00 and STATUS_2='LC'     
      
  --added by mansi end   
  
  
 CREATE table #CROSSTAB        --ADDED BY GADRIWALA MUSLIM 24042015     
 (       
  CODE VARCHAR(100) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,             
  EMPLOYEENAME   VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  DESIGNATION VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  GRADE VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  DEPARTMENT VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  Branch_Name Varchar(256) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  SubBranch_Name Varchar(256) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  DATE_OF_JOIN VARCHAR(15) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  DATE_OF_LEFT VARCHAR(15) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  ENROLL_NO NUMERIC    ,    
  EMP_ID INT,     -------------- ADD BY JIGNESH 31-07-2014 -------    
  LATE_WITH_LEAVE BIT 
 )                  
    
 CREATE NONCLUSTERED INDEX IX_DATA1 ON DBO.#CROSSTAB    
 ( CODE )     
     
 CREATE table #UNPAID_LEAVE    
 (     
  EMP_ID NUMERIC,    
  CODE VARCHAR(100) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,             
  UNPAID_LEAVE NUMERIC(18,2)    
 )                  
  
CREATE NONCLUSTERED INDEX IX_DATA2 ON  DBO.#UNPAID_LEAVE    
 ( EMP_ID )     
    
  DECLARE @MONTH_DAYS AS NUMERIC    
  SET @MONTH_DAYS = DATEDIFF (DD,@FROM_DATE,@TO_DATE) + 1    
     
          
  DECLARE @DESCRIPTION AS VARCHAR(5)    
  DECLARE @DESCRIPTION_ORG AS VARCHAR(900)            
  DECLARE @ALTER_COLS AS VARCHAR(4000)            
  DECLARE @TEST1 AS VARCHAR(4000)      
           

    
 DECLARE @INSERT_WEEKDAY VARCHAR(MAX);    
 DECLARE @VALUE_WEEKDAY VARCHAR(MAX);    
 DECLARE @WEEKDAY VARCHAR(2); 
 DECLARE @FOR_DATE DATETIME;    
    
 SET @INSERT_WEEKDAY = '';    
 SET @VALUE_WEEKDAY = ''    
    
    
 DECLARE @MONTH_INDENT INT    
 SET @MONTH_INDENT = @MONTH_DAYS  + (31 - @MONTH_DAYS)    
     
 DECLARE ATT_MUSTER CURSOR FOR       
 SELECT TOP 38    
   CASE ROW_ID         
   WHEN (1 + @MONTH_INDENT) 
    THEN 'P'     
   WHEN (2 + @MONTH_INDENT) --33    
    THEN 'A'     
   WHEN (3 + @MONTH_INDENT) --34    
    THEN 'L'    
   WHEN (4 + @MONTH_INDENT) --35    
    THEN 'W'    
   WHEN (5 + @MONTH_INDENT) --36    
    THEN 'H'    
   WHEN (6 + @MONTH_INDENT) --37    
    THEN 'LC'    
   WHEN (7 + @MONTH_INDENT) --38    
    THEN 'GP'  -- CHANGED BY GADRIWALA MUSLIM 27042015    
   ELSE    
    CASE WHEN ROW_ID BETWEEN (@MONTH_DAYS+1) AND  31 Then    
     '0'    
    WHEN @IS_WHOSOFF = 1 Then    
     RIGHT(CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2)    
    ELSE    
     RIGHT('0' + CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2) +  '-' + RIGHT('0' + CAST(DATEPART(Month,FOR_DATE) AS VARCHAR(2)) , 2)    
    END    
  END AS ROW_ID, FOR_DATE    
 FROM #ATT_MUSTER_EXCEL  ORDER BY EMP_ID,FOR_DATE --ASC     
    
 OPEN ATT_MUSTER            
 FETCH NEXT FROM ATT_MUSTER INTO @DESCRIPTION, @FOR_DATE    
 WHILE @@FETCH_STATUS = 0            
  BEGIN            
   IF ISNUMERIC(REPLACE(@DESCRIPTION, '-','')) = 1    
    BEGIN    
     IF CAST(REPLACE(@DESCRIPTION, '-','') AS NUMERIC) > 0    
      BEGIN        
       SET @WEEKDAY = DATENAME(DW, @FOR_DATE);    
       SET @INSERT_WEEKDAY = @INSERT_WEEKDAY + '[' + @DESCRIPTION + '],'    
       SET @VALUE_WEEKDAY = @VALUE_WEEKDAY + '''' + @WEEKDAY + ''','        
      END    
    END    
             
   SET @DESCRIPTION_ORG=@DESCRIPTION            
   SET @DESCRIPTION=REPLACE(@DESCRIPTION,' ','_')            
   SET @DESCRIPTION=REPLACE (@DESCRIPTION,'.','_')            
    
   IF @DESCRIPTION <> 'AA' AND @DESCRIPTION <>'BB' AND @DESCRIPTION <> 'CC' AND @DESCRIPTION <> '0'    
    BEGIN    
     IF ISNUMERIC(REPLACE(@DESCRIPTION, '-','')) = 0    
      SET @ALTER_COLS ='ALTER TABLE  #CROSSTAB ADD ['+ @DESCRIPTION +']  VARCHAR(60) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS DEFAULT 0'    
     ELSE    
      SET @ALTER_COLS ='ALTER TABLE  #CROSSTAB ADD ['+ @DESCRIPTION +']  VARCHAR(60) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS DEFAULT '''''    
          
     EXEC(@ALTER_COLS)                 
     SET @ALTER_COLS=''                
    END                 
   FETCH NEXT FROM ATT_MUSTER INTO @DESCRIPTION, @FOR_DATE            
  END            
 CLOSE ATT_MUSTER             
 DEALLOCATE ATT_MUSTER     
    
 CREATE TABLE #REQUIRED_COLUMNS (ID INT, ColName varchar(10))    
 INSERT INTO #REQUIRED_COLUMNS VALUES(1, 'P')    
 INSERT INTO #REQUIRED_COLUMNS VALUES(2, 'A')    
 INSERT INTO #REQUIRED_COLUMNS VALUES(3, 'W')    
 INSERT INTO #REQUIRED_COLUMNS VALUES(4, 'H')    
 INSERT INTO #REQUIRED_COLUMNS VALUES(5, 'LC')    
 INSERT INTO #REQUIRED_COLUMNS VALUES(6, 'GP')    
 INSERT INTO #REQUIRED_COLUMNS VALUES(7, 'L')    
    
 SET @ALTER_COLS = NULL;    
 SELECT @ALTER_COLS = COALESCE(@ALTER_COLS + ';','') + 'ALTER TABLE  #CROSSTAB ADD ' + ColName  + ' VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS DEFAULT 0'    
 FROM #REQUIRED_COLUMNS  t    
 WHERE NOT EXISTS(SELECT 1 FROM tempdb.sys.columns c where object_id=OBJECT_ID('tempdb..#CROSSTAB') AND c.name=t.ColName)    
     
 if ISNULL(@ALTER_COLS, '') IS NOT NULL    
  EXEC(@ALTER_COLS)    
    
       
 IF @IS_WHOSOFF <> 1    
  BEGIN    
   SET @INSERT_WEEKDAY = 'INSERT INTO #CROSSTAB(' + @INSERT_WEEKDAY + 'CODE,Emp_ID)VALUES(' + @VALUE_WEEKDAY + '0,0)';    
   EXEC (@INSERT_WEEKDAY);    
  END    
      
       
 ALTER TABLE  #CROSSTAB ADD [HO_WORK] NUMERIC(18,2) DEFAULT 0    
 ALTER TABLE  #CROSSTAB ADD [WO_WORK] NUMERIC(18,2) DEFAULT 0    
 ALTER TABLE  #CROSSTAB ADD [EMP_OT] BIT NULL    
    
 --end-----------------------    
       
 SET @ALTER_COLS ='ALTER TABLE  #CROSSTAB ADD [PAYABLE_PRESENT_DAYS] NUMERIC(9,3) DEFAULT 0'            
 EXEC(@ALTER_COLS)             
 SET @ALTER_COLS=''     
    
 SET @ALTER_COLS ='ALTER TABLE  #CROSSTAB ADD [EARLY_DEDUCT_DAYS] NUMERIC(18,2) DEFAULT 0'            
 EXEC(@ALTER_COLS)             
 SET @ALTER_COLS=''    
    
 SET @ALTER_COLS ='ALTER TABLE  #CROSSTAB ADD [WO_HO_DAY] NUMERIC(18,2) DEFAULT 0'            
 EXEC(@ALTER_COLS)             
 SET @ALTER_COLS=''     
  -- ADDED BY ROHIT ON 24092013    
 SET @ALTER_COLS ='ALTER TABLE  #CROSSTAB ADD [PAYABLE_DAYS] Numeric(18,2) DEFAULT 0'      
 EXEC(@ALTER_COLS)             
 SET @ALTER_COLS=''     
 
 SET @ALTER_COLS ='ALTER TABLE  #CROSSTAB ADD [TOTAL_DAYS] Numeric(18,2) DEFAULT 0'      
 EXEC(@ALTER_COLS)             
 SET @ALTER_COLS=''    
    
 
  --ADDED BY GADRIWALA MUSLIM 24042015 - START    
  INSERT INTO #CROSSTAB( CODE,EMPLOYEENAME,DESIGNATION,GRADE,DEPARTMENT,Branch_Name,SUBBRANCH_NAME ,DATE_OF_JOIN,DATE_OF_LEFT ,ENROLL_NO,EMP_ID, EMP_OT, PAYABLE_PRESENT_DAYS)       
  SELECT DISTINCT  AM.EMP_CODE,AM.EMP_FULL_NAME,AM.DESIG_NAME,AM.GRD_NAME,    
   AM.DEPT_NAME,AM.BRANCH_NAME,AM.SUBBRANCH_NAME,CONVERT(VARCHAR,DATE_OF_JOIN ,103),CONVERT(VARCHAR,LEFT_DATE,103),ENROLL_NO,EM.EMP_ID,0,0    
  FROM #ATT_MUSTER_EXCEL AM      
   INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON AM.EMP_ID = EM.EMP_ID    
      
 IF OBJECT_ID('tempdb..#Emp_Cons') IS NOT NULL    
  BEGIN        
   UPDATE C    
   SET  Emp_OT = 1    
   FROM #CROSSTAB C     
     INNER JOIN #ATT_MUSTER_EXCEL AM   ON C.EMP_ID=AM.EMP_ID    
     INNER JOIN T0080_EMP_MASTER EM ON AM.EMP_ID = EM.EMP_ID    
     INNER JOIN #EMP_CONS EC ON EM.Emp_ID=EC.Emp_ID    
     INNER JOIN T0095_INCREMENT I ON EC.Increment_ID=I.Increment_ID    
     INNER JOIN T0040_GENERAL_SETTING G ON I.Branch_ID=G.Branch_ID    
     INNER JOIN (SELECT G1.BRANCH_ID, MAX(GEN_ID) AS GEN_ID    
        FROM T0040_GENERAL_SETTING G1 WITH (NOLOCK)    
          INNER JOIN (SELECT G2.BRANCH_ID, MAX(FOR_DATE) AS FOR_DATE    
             FROM T0040_GENERAL_SETTING G2 WITH (NOLOCK)    
             WHERE G2.For_Date <= @TO_DATE    
             GROUP BY G2.Branch_ID) G2 ON G1.Branch_ID=G2.Branch_ID AND G1.For_Date=G2.FOR_DATE    
        GROUP BY G1.Branch_ID) G1 ON G.Gen_ID=G1.GEN_ID    
   WHERE I.Emp_OT =1 AND G.Is_OT=1    
  END    
    
    
      
 UPDATE #ATT_MUSTER_EXCEL SET     
 --STATUS= STATUS +'-'+ISNULL(STATUS_2,'')     
 STATUS= CASE WHEN STATUS_2 IN('CO-W','CO-HO') THEN STATUS_2 ELSE  STATUS +'-'+ISNULL(STATUS_2,'')  END    
 WHERE ISNULL(WO_HO_DAY,0)>0     
 --AND ISNULL(STATUS_2,'')='P'    
 AND (ISNULL(STATUS_2,'')='P' OR STATUS_2 IN('CO-W','CO-HO'))    
 AND (WO_HO ='HO' OR WO_HO ='OHO' OR WO_HO = 'W')    
       
 UPDATE C    
 SET  HO_WORK = isnull(HO.Holiday_Days,0), WO_WORK = isnull(WO.WO_Days,0)    
 FROM #CROSSTAB C    
   LEFT OUTER JOIN (SELECT SUM(ISNULL(WO_HO_Day,0)) As Holiday_Days,Emp_ID    
       FROM #Att_Muster_Excel    
       WHERE (WO_HO ='HO' OR WO_HO ='OHO')    
       --And Isnull(STATUS_2,'') = 'P'    
       AND (ISNULL(STATUS_2,'')='P' OR STATUS_2 IN('CO-W','CO-HO'))    
       GROUP BY Emp_ID) AS HO ON C.Emp_ID = HO.Emp_ID     
   LEFT OUTER JOIN (SELECT SUM(ISNULL(WO_HO_Day,0)) As WO_Days,Emp_ID    
       FROM #Att_Muster_Excel    
       WHERE WO_HO = 'W'    
       --And Isnull(STATUS_2,'') = 'P'    
       AND (ISNULL(STATUS_2,'')='P' OR STATUS_2 IN('CO-W','CO-HO'))    
       GROUP BY Emp_ID) AS WO ON C.Emp_ID = WO.Emp_ID     
     
 --CO-W,CO-HO    
  ------------- End 12-Mar-2020----------------     
    
 ALTER TABLE #CROSSTAB    
  DROP COLUMN Emp_OT    
 --end    
         
       
 DECLARE @CODE AS VARCHAR(50)            
 DECLARE @EMPNAME AS VARCHAR(200)     
 DECLARE @STATUS AS VARCHAR(50)      
 DECLARE @STATUS_2 AS VARCHAR(50)      
 DECLARE @EXTRA_AB_DEDUCTION AS NUMERIC(18,2)    
 DECLARE @PRESENT_DAYS AS NUMERIC(18,2)    
 DECLARE @A_DAYS AS NUMERIC(18,2)    
 DECLARE @P_DAYS AS NUMERIC(18,2)    
 DECLARE @UNPAID_LEAVE_DAYS AS NUMERIC(18,2)    
 DECLARE @PRE_EMP_CODE AS VARCHAR(50)    
 DECLARE @ABSENT_DAYS AS NUMERIC(18,2)    
 DECLARE @LEAVE_COUNT AS NUMERIC(18,2)    
 DECLARE @GATE_PASS_DAYS AS NUMERIC(18,2)   
 DECLARE @LATE_DEDUCT_DAYS AS NUMERIC(18,2)   
 DECLARE @EARLY_DEDUCT_DAYS AS NUMERIC(18,2)  
 DECLARE @WO_HO_DAYS AS NUMERIC(18,2)      
 DECLARE @CUR_BRANCH_ID AS NUMERIC(18,0) -- GADRIWALA MUSLIM 24-12-2015                  
 DECLARE @PREV_BRANCH_ID AS NUMERIC(18,0) -- GADRIWALA MUSLIM 24-12-2015    
 SET @DESCRIPTION = ''            
 SET @EXTRA_AB_DEDUCTION = 0    
 SET @PRESENT_DAYS = 0    
 SET @A_DAYS = 0    
 SET @P_DAYS = 0    
 SET @UNPAID_LEAVE_DAYS = 0    
 SET @LEAVE_COUNT = 0    
 SET @GATE_PASS_DAYS = 0   
 SET @LATE_DEDUCT_DAYS = 0   
 SET @EARLY_DEDUCT_DAYS = 0   
 SET @WO_HO_DAYS = 0   
 SET @CUR_BRANCH_ID = 0  -- GADRIWALA MUSLIM 24-12-2015     
 SET @PREV_BRANCH_ID = 0 -- GADRIWALA MUSLIM 24-12-2015    
    
 DECLARE @WO_INC AS TINYINT    
 DECLARE @HO_INC AS TINYINT    
 DECLARE @PAYABLE_PRESENT_DAYS NUMERIC(18,2)          
 DECLARE @WEEKOFF_DAYS NUMERIC(18,2)    
 DECLARE @HOLIDAY_DAYS NUMERIC(18,2)    
 DECLARE @LC_DAYS NUMERIC(18,2)    
 DECLARE @GP_DAYS NUMERIC(18,2)    
 DECLARE @PAID_LEAVE NUMERIC(18,2)    
    
 DECLARE @EARLY_COUNT_DAYS NUMERIC(18,2) -- Added By nilesh Patel on 09062016    
           
 SET @WO_INC = 0    
 SET @HO_INC = 0    
 SET @PAYABLE_PRESENT_DAYS = 0    
    
 --PRINT 'ATT_MUSTERVALUE- START' +  CONVERT(VARCHAR(20),GETDATE(),114)    
    
    
     
            
 SELECT A.EMP_CODE,A.EMP_FULL_NAME,CASE WHEN ISNULL(STATUS_2,'') = '*' THEN STATUS + STATUS_2 ELSE A.STATUS END AS STATUS,ISNULL(STATUS_2,'') AS  STATUS_2, P_DAYS,A_DAYS,WO_HO_DAY,  --Change by Jaina 15-12-2017 in Status (Hightlight latemark)    
   CASE ROW_ID      
    WHEN 32    
     THEN 'P'     
    WHEN 33    
     THEN 'A'     
    WHEN 34    
     THEN 'L'    
    WHEN 35    
     THEN 'W'    
    WHEN 36    
     THEN 'H'    
    WHEN 37    
     THEN 'LC'    
    WHEN 38    
     THEN 'GP'  -- CHANGED BY GADRIWALA MUSLIM 27042015    
    ELSE    
     --CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2))     
     CASE When @IS_WHOSOFF = 1 Then    
      RIGHT(CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2)    
     Else    
      RIGHT('0' + CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2) +  '-' + RIGHT('0' + CAST(DATEPART(Month,FOR_DATE) AS VARCHAR(2)) , 2)    
     END    
   END AS ROW_ID,ISNULL(EXTRA_AB_DEDUCTION,0) AS EXTRA_AB_DEDUCTION, LEAVE_COUNT,EARLY_DEDUCT_DAYS,A.BRANCH_ID, A.EMP_ID, A.FOR_DATE    
 INTO #ATT_MUSTER_EXCEL_TEMP    
 FROM #ATT_MUSTER_EXCEL A INNER JOIN T0080_EMP_MASTER E WITH (NOLOCK) ON A.EMP_ID = E.EMP_ID    
 ORDER BY A.EMP_ID,FOR_DATE      
 



     
 DECLARE @COLS VARCHAR(MAX)    
 DECLARE @UPDATE_COLS VARCHAR(MAX)    
     
 DELETE FROM #ATT_MUSTER_EXCEL_TEMP WHERE FOR_DATE NOT BETWEEN @FROM_DATE AND @TO_DATE AND CHARINDEX('-', ROW_ID) > 0    
     
 SELECT @COLS = ISNULL(@COLS + ',', '') + QUOTENAME(ROW_ID),    
   @UPDATE_COLS = ISNULL(@UPDATE_COLS + ',', '') + QUOTENAME(ROW_ID) + ' = T.' + QUOTENAME(ROW_ID)    
 FROM (SELECT DISTINCT REPLACE(REPLACE(ROW_ID, ' ', '_'), '.', '_') AS ROW_ID FROM #ATT_MUSTER_EXCEL_TEMP ) T    
     
     
 /*Following Code is modified and with Pivot Table Feature to Optimze The Performance*/    
 --SET @TEST1 ='UPDATE #CROSSTAB SET [' + cast(@DESCRIPTION AS varchar(5)) + '] = ''' +  cast(@STATUS as varchar(50))  + '''  WHERE  Emp_ID = '''+ CAST(@EMP_ID as VARCHAR(10)) + ''''            
 DECLARE @SQL_QUERY VARCHAR(MAX)    
 SET @SQL_QUERY = '    
     UPDATE C    
     SET  ' + @UPDATE_COLS + '           
     FROM (    
        SELECT  EMP_ID, ROW_ID,[STATUS]    
        FROM #ATT_MUSTER_EXCEL_TEMP            
       ) PVT    
       PIVOT (    
        MAX([STATUS]) FOR ROW_ID IN (' + @COLS + ')    
       ) T    
       INNER JOIN #CROSSTAB C ON T.EMP_ID=C.EMP_ID'    
-- PRINT @SQL_QUERY    
 EXEC(@SQL_QUERY)    
 UPDATE C    
 SET  EARLY_DEDUCT_DAYS = IsNull(T.EARLY_DEDUCT_DAYS,0)    
 FROM #CROSSTAB C     
   INNER JOIN (SELECT EMP_ID, SUM(EARLY_DEDUCT_DAYS) AS EARLY_DEDUCT_DAYS    
      FROM #ATT_MUSTER_EXCEL_TEMP T    
      GROUP BY EMP_ID) T ON C.EMP_ID=T.EMP_ID    
          
     
 INSERT INTO #UNPAID_LEAVE    
 SELECT EMP_ID,EMP_CODE,SUM(CAST(STATUS_2 AS NUMERIC(18,2))) - SUM(ISNULL(LEAVE_COUNT,0))    
 FROM #ATT_MUSTER_EXCEL_TEMP T    
 WHERE A_DAYS IN (1,0.5) AND IsNumeric(IsNull(STATUS_2,'NULL')) = 1    
   AND STATUS_2 NOT IN ('LC', 'EC', 'EG', 'P')     
 GROUP BY EMP_ID,EMP_CODE    
       
 /*For EXTRA_AB_DEDUCTION*/    
     
 CREATE TABLE #EMP_ATTENDANCE    
 (    
  EMP_ID   NUMERIC,    
  Present_Days NUMERIC(9,2),    
  Absent_Days  NUMERIC(9,2),    
  Leave_Days  NUMERIC(9,2),    
  ULeave_Days  NUMERIC(9,2),    
  Extra_AB_Deduction NUMERIC(9,2)    
 )    
     
 INSERT INTO #EMP_ATTENDANCE(EMP_ID,ULeave_Days)    
 SELECT C.EMP_ID , IsNull(UNPAID_LEAVE,0)    
 FROM #CROSSTAB C    
   LEFT OUTER JOIN #UNPAID_LEAVE U ON C.EMP_ID=U.EMP_ID    
     
     
 UPDATE EA    
 SET  Present_Days = IsNull(P,0)    
 FROM #EMP_ATTENDANCE EA    
   LEFT OUTER JOIN #CROSSTAB C ON EA.EMP_ID=C.EMP_ID AND IsNumeric(IsNull(P, '')) =1        
     
 UPDATE EA    
 SET  Absent_Days = CASE WHEN ULeave_Days < Absent_Days THEN Absent_Days - ULeave_Days ELSE Absent_Days END    
 FROM #EMP_ATTENDANCE EA    
     
 UPDATE EA    
 SET  Absent_Days = Isnull(EA.Absent_Days,0) + Isnull((Isnull(EA.Absent_Days,0) * Isnull(Ex.EXTRA_AB_DEDUCTION,0)),0)    
 FROM #EMP_ATTENDANCE EA    
   INNER JOIN (SELECT EMP_ID, Max(EXTRA_AB_DEDUCTION) AS EXTRA_AB_DEDUCTION    
      FROM #ATT_MUSTER_EXCEL_TEMP EX     
      GROUP BY EMP_ID) EX ON EA.EMP_ID=EX.EMP_ID    
     
     
 UPDATE C     
 SET  PAYABLE_PRESENT_DAYS = Case When Isnull(EA.Present_Days,0) > Isnull(EA.Absent_Days,0) THEN Isnull(EA.Present_Days,0) - Isnull(EA.Absent_Days,0) ELSE 0 END    
 FROM #CROSSTAB C       
   INNER JOIN #EMP_ATTENDANCE EA ON C.EMP_ID=EA.EMP_ID    
      
       
 UPDATE #CROSSTAB SET LATE_WITH_LEAVE=T.LATE_WITH_LEAVE    
 FROM #CROSSTAB C INNER JOIN    
   (SELECT T.CMP_ID, T.EMP_ID, T.BRANCH_ID, T.FOR_DATE,G.LATE_WITH_LEAVE    
   FROM (    
     SELECT G.CMP_ID, INC.EMP_ID, INC.BRANCH_ID, MAX(FOR_DATE) AS FOR_DATE    
     FROM T0040_GENERAL_SETTING G WITH (NOLOCK) INNER JOIN     
      (SELECT CMP_ID,INC1.EMP_ID,BRANCH_ID     
      FROM T0095_INCREMENT INC1 WITH (NOLOCK) INNER JOIN #CROSSTAB T ON INC1.Emp_ID=T.EMP_ID    
        INNER JOIN (    
         SELECT MAX(INCREMENT_ID) AS INCREMENT_ID    
         FROM T0095_INCREMENT INC2 WITH (NOLOCK)    
           INNER JOIN (    
            SELECT MAX(INCREMENT_EFFECTIVE_DATE) AS INCREMENT_EFFECTIVE_DATE, INC3.EMP_ID    
            FROM T0095_INCREMENT INC3 WITH (NOLOCK) INNER JOIN #CROSSTAB T ON INC3.Emp_ID=T.EMP_ID    
            WHERE INC3.CMP_ID=@CMP_ID     
              AND INC3.INCREMENT_EFFECTIVE_DATE <=@TO_DATE    
            GROUP BY INC3.EMP_ID    
            ) INC3 ON INC2.Emp_ID=INC3.Emp_ID AND INC2.Increment_Effective_Date=INC3.Increment_Effective_Date    
         WHERE INC2.CMP_ID=@CMP_ID     
        ) INC2 ON INC1.INCREMENT_ID=INC2.INCREMENT_ID    
      ) INC ON G.CMP_ID=INC.CMP_ID AND G.BRANCH_ID=INC.BRANCH_ID        
     GROUP BY G.CMP_ID, INC.EMP_ID, INC.BRANCH_ID      
     ) T INNER JOIN T0040_GENERAL_SETTING G WITH (NOLOCK) ON T.BRANCH_ID=G.BRANCH_ID AND T.CMP_ID=G.CMP_ID AND T.FOR_DATE=G.FOR_DATE          
   ) T ON C.EMP_ID=T.EMP_ID     
 WHERE T.CMP_ID=@CMP_ID    
      
      
    
 SELECT GS.Branch_ID,INC_HOLIDAY,INC_WEEKOFF    
 INTO #GENERAL_SETTING    
 FROM T0040_GENERAL_SETTING GS WITH (NOLOCK)    
   INNER JOIN(    
       SELECT MAX(FOR_DATE) AS FOR_DATE,GS1.Branch_ID    
       FROM DBO.T0040_GENERAL_SETTING GS1 WITH (NOLOCK)    
         INNER JOIN #Emp_Cons EC ON GS1.Branch_ID=EC.Branch_ID    
       WHERE FOR_DATE < = @TO_DATE AND CMP_ID = @CMP_ID     
       GROUP BY GS1.Branch_ID     
      ) GS1 ON GS1.Branch_ID = GS.Branch_ID AND GS.FOR_DATE = GS1.FOR_DATE    
    
 IF @IS_WHOSOFF = 1    
  BEGIN    
       
   UPDATE C    
   SET  PAYABLE_PRESENT_DAYS= (EA.Present_Days     
           + Case When INC_HOLIDAY = 1 Then HOLIDAY_DAYS Else 0 End    
           + Case When INC_WEEKOFF = 1 Then WEEKOFF_DAYS Else 0 End    
           + PAID_LEAVE)    
           - (LC_DAYS + GP_DAYS + EARLY_COUNT_DAYS)    
   FROM #CROSSTAB C    
     INNER JOIN (SELECT Emp_ID,    
          WEEKOFF_DAYS = IsNull(CASE WHEN W = '' THEN 0 ELSE CAST(W AS NUMERIC(18,2)) END,0),    
          HOLIDAY_DAYS = IsNull(CASE WHEN H = '' THEN 0 ELSE CAST(H AS NUMERIC(18,2)) END, 0),    
   LC_DAYS = IsNull(CASE WHEN LC = '' OR LATE_WITH_LEAVE=1 THEN 0 ELSE CAST(LC AS NUMERIC(18,2)) END,0),    
          GP_DAYS = IsNull(CASE WHEN GP = '' THEN 0 ELSE CAST(GP AS NUMERIC(18,2)) END,0),    
          PAID_LEAVE = IsNull(CASE WHEN L = '' THEN 0 ELSE CAST(L AS NUMERIC(18,2))END,0),    
          EARLY_COUNT_DAYS = IsNull(Case When EARLY_DEDUCT_DAYS = 0 OR LATE_WITH_LEAVE = 1 Then  0 Else Isnull(EARLY_DEDUCT_DAYS,0) END,0)    
        FROM #CROSSTAB ) C1 ON C.EMP_ID=C1.EMP_ID    

     LEFT OUTER JOIN #EMP_CONS EC ON C.EMP_ID=EC.EMP_ID    
     LEFT OUTER JOIN #GENERAL_SETTING GS ON GS.Branch_ID=EC.Branch_ID    
     LEFT OUTER JOIN #EMP_ATTENDANCE EA ON C.EMP_ID=EA.EMP_ID    
         
   UPDATE C    
   SET  PAYABLE_PRESENT_DAYS= 0.00    
   FROM #CROSSTAB C    
   WHERE PAYABLE_PRESENT_DAYS < 0.00    
  END    
      

 IF @IS_WHOSOFF = 0 --- Added by Hardik 18/01/2021 for Bugs assinged by Sandip Redmine Number 16426    
  UPDATE #CROSSTAB     
  SET  A = ISNULL(A,0)-ISNULL(UL.UNPAID_LEAVE,0)    
  FROM #CROSSTAB T INNER JOIN T0080_EMP_MASTER EM ON T.EMP_ID= EM.Emp_ID -- COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS AND CMP_ID = @CMP_ID    
    LEFT OUTER JOIN (SELECT EMP_ID,CODE,ISNULL(SUM(UNPAID_LEAVE),0) AS UNPAID_LEAVE FROM #UNPAID_LEAVE GROUP BY EMP_ID,CODE ) AS UL ON T.EMP_ID=UL.EMP_ID    
 ------------------ END ---------------------------    

    --select * from #CROSSTAB
     ---- ADDED BY ROHIT ON 24092013    
 --UPDATE  T     
 --SET  PAYABLE_DAYS = (    
 --      ISNULL(CAST((CASE WHEN P = '' THEN '0.0' ELSE ISNULL(P,0) END) AS NUMERIC(18,2)),0) +     
 --      CASE WHEN Inc_Holiday=0 THEN '0.0' ELSE ISNULL(CAST((CASE WHEN H = '' THEN '0.0' ELSE ISNULL(H,0) END) AS NUMERIC(18,2)),0) END +     
 --      CASE WHEN Inc_Weekoff=0 THEN '0.0' ELSE ISNULL(CAST((CASE WHEN W = '' THEN '0.0' ELSE ISNULL(W,0) END) AS NUMERIC(18,2)),0) END +      
 --      ISNULL(CAST((CASE WHEN L = '' THEN '0.0' ELSE ISNULL(L,0) END) AS NUMERIC(18,2)),0) -    
 --      ISNULL(CAST((CASE WHEN GP = '' THEN '0.0' ELSE ISNULL(GP,0) END) AS NUMERIC(18,2)),0) -    
 --      (CASE WHEN isnull(LATE_WITH_LEAVE,0) = 0 THEN ISNULL(CAST((CASE WHEN LC = '' THEN '0.0' ELSE ISNULL(LC,0) END) AS NUMERIC(18,2)),0) ELSE 0 END) -    
 --      ISNULL(EARLY_DEDUCT_DAYS,0)     
 --     ) 
	--  , TOTAL_DAYS 
	--  = (    
 --      ISNULL(CAST((CASE WHEN P = '' THEN '0.0' ELSE ISNULL(P,0) END) AS NUMERIC(18,2)),0) +     
 --      CASE WHEN 1=0 THEN '0.0' ELSE ISNULL(CAST((CASE WHEN H = '' THEN '0.0' ELSE ISNULL(H,0) END) AS NUMERIC(18,2)),0) END +     
 --      CASE WHEN 1=0 THEN '0.0' ELSE ISNULL(CAST((CASE WHEN W = '' THEN '0.0' ELSE ISNULL(W,0) END) AS NUMERIC(18,2)),0) END +      
 --      ISNULL(CAST((CASE WHEN L = '' THEN '0.0' ELSE ISNULL(L,0) END) AS NUMERIC(18,2)),0) -    
 --      ISNULL(CAST((CASE WHEN GP = '' THEN '0.0' ELSE ISNULL(GP,0) END) AS NUMERIC(18,2)),0) -    
 --      (CASE WHEN isnull(LATE_WITH_LEAVE,0) = 0 THEN ISNULL(CAST((CASE WHEN LC = '' THEN '0.0' ELSE ISNULL(LC,0) END) AS NUMERIC(18,2)),0) ELSE 0 END) -    
 --      ISNULL(EARLY_DEDUCT_DAYS,0)     
 --     ) 
 --  FROM #CROSSTAB T     
 --  INNER JOIN T0080_EMP_MASTER EM ON T.EMP_ID=EM.EMP_ID  --COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS AND CMP_ID = @CMP_ID    
 --  LEFT OUTER JOIN #UNPAID_LEAVE UL ON T.EMP_ID = UL.EMP_ID    
 --  INNER JOIN #EMP_CONS EC ON T.EMP_ID=EC.EMP_ID    
 --  INNER JOIN #GENERAL_SETTING GS ON GS.Branch_ID=EC.Branch_ID where T.EMP_ID=EM.EMP_ID 




 --  select  --from #CROSSTAB T inner join #UNPAID_LEAVE UL on T.EMP_ID = UL.EMP_ID
 -- ISNULL(CAST((CASE WHEN P = '' THEN '0.0' ELSE ISNULL(P,0) END) AS NUMERIC(18,2)),0),
 -- --+     
 --      CASE WHEN Inc_Holiday=0 THEN '0.0' ELSE ISNULL(CAST((CASE WHEN H = '' THEN '0.0' ELSE ISNULL(H,0) END) AS NUMERIC(18,2)),0) END,
	--   --+     
 --      CASE WHEN Inc_Weekoff=0 THEN '0.0' ELSE ISNULL(CAST((CASE WHEN W = '' THEN '0.0' ELSE ISNULL(W,0) END) AS NUMERIC(18,2)),0) END ,
	--   --+      
 --      ISNULL(CAST((CASE WHEN L = '' THEN '0.0' ELSE ISNULL(L,0) END) AS NUMERIC(18,2)),0) ,---    
 --      ISNULL(CAST((CASE WHEN GP = '' THEN '0.0' ELSE ISNULL(GP,0) END) AS NUMERIC(18,2)),0) ,---    
 --      (CASE WHEN isnull(LATE_WITH_LEAVE,0) = 0 THEN ISNULL(CAST((CASE WHEN LC = '' THEN '0.0' ELSE ISNULL(LC,0) END) AS NUMERIC(18,2)),0) ELSE 0 END) ,---    
 --      ISNULL(EARLY_DEDUCT_DAYS,0) ,Inc_Weekoff,EM.Emp_ID,Alpha_Emp_Code   ,ISNULL(W,0)
 --FROM #CROSSTAB T     
 --  INNER JOIN T0080_EMP_MASTER EM ON T.EMP_ID=EM.EMP_ID  --COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS AND CMP_ID = @CMP_ID    
 --  LEFT OUTER JOIN #UNPAID_LEAVE UL ON T.EMP_ID = UL.EMP_ID    
 --  INNER JOIN #EMP_CONS EC ON T.EMP_ID=EC.EMP_ID    
 --  INNER JOIN #GENERAL_SETTING GS ON GS.Branch_ID=EC.Branch_ID where T.EMP_ID=EM.EMP_ID 
   
   
 --  return

 UPDATE  #CROSSTAB     
 SET  PAYABLE_DAYS = 0      
 WHERE PAYABLE_DAYS < 0    
    
 -- ENDED BY ROHIT ON 24092013    
     
    
 -------------- MODIFY JIGNESH 31-07-2014--------------------    
    
 --SELECT ROW_NUMBER() OVER(ORDER BY CODE ASC) AS ROW,* FROM #CROSSTAB C ORDER BY CODE    
 --DROP TABLE #CROSSTAB    
 --DROP TABLE #ATT_MUSTER_EXCEL    
    
 ----------- ADD BY JIGNESH 31-07-2014 LEAVE NAME ---------------    
 DECLARE @QRY AS NVARCHAR(MAX)    
    
 CREATE table #EMPLAVEDETAIL    
 (    
  ID_NUM INT IDENTITY(1,1),    
  IEMP_ID INT    
 )    
    
 CREATE table #EMPDATA    
 (    
  EMP_ID  NUMERIC,    
  ICODE  VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  PAYABLE_PRESENT_DAYS  VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    

  TOTAL_DAYS VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    

  PAYABLE_DAYS VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,    
  EARLY_DEDUCT_DAYS NUMERIC(18,2) DEFAULT 0  -- ADDED BY GADRIWALA 27032015     
 )    
    
    
 -------------------END -------------------------------    
    
    
 ----------------- GET EMP WISE LEAVE DETAIL ---------------------------    
 DECLARE @OD_COMOFF_SETTING INT    
 --OD--COMP    
 SELECT @OD_COMOFF_SETTING =ISNULL(SETTING_VALUE,0)    
 FROM DBO.T0040_SETTING WITH (NOLOCK) WHERE CMP_ID=@CMP_ID AND SETTING_NAME  = 'OD AND COMPOFF LEAVE CONSIDER AS PRESENT'    
    
     
 IF ISNULL(@OD_COMOFF_SETTING,0) = 0    
  BEGIN         
   SELECT     EMP_ID, CAST(LEAVE_CODE AS VARCHAR(50)) AS LEAVE_CODE, ISNULL(SUM(CASE WHEN LM.LEAVE_CODE = 'COMP' THEN LT.COMPOFF_USED ELSE LT.LEAVE_USED END),0) AS LEAVEDAYS    
   INTO #EMP_LEAVE1    
   FROM       T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK)    
      ON LT.LEAVE_ID = LM.LEAVE_ID    
    
   WHERE     (FOR_DATE BETWEEN @FROM_DATE AND @TO_DATE) AND LT.CMP_ID = @CMP_ID     
      AND (LT.LEAVE_USED <> 0 OR LT.COMPOFF_USED <> 0)    
      --AND LM.LEAVE_PAID_UNPAID = 'P'    
      AND EMP_ID IN (SELECT DISTINCT EMP_ID FROM #ATT_MUSTER_EXCEL)    
   GROUP BY EMP_ID, LEAVE_CODE    
   ORDER BY EMP_ID, LEAVE_CODE              
       
   INSERT INTO #EMP_LEAVE1           
   SELECT     LT.EMP_ID, LM.LEAVE_CODE + '_OPENING' AS LEAVE_CODE, ISNULL(SUM(CASE WHEN LM.LEAVE_CODE = 'COMP' THEN LT.CompOff_Credit ELSE LT.LEAVE_CLOSING END),0) AS LEAVEDAYS    
   FROM       T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN     
      T0040_LEAVE_MASTER LM WITH (NOLOCK) ON LT.LEAVE_ID = LM.LEAVE_ID INNER JOIN    
      (SELECT L.EMP_ID,MAX(L.FOR_DATE) AS FOR_DATE1, L.Leave_ID     
       FROM T0140_LEAVE_TRANSACTION L WITH (NOLOCK) INNER JOIN #ATT_MUSTER_EXCEL A ON L.Emp_ID = A.EMP_ID     
       WHERE L.FOR_DATE <= @FROM_DATE    
       GROUP BY  L.EMP_ID,L.Leave_ID) QRY ON LT.Emp_ID=QRY.Emp_ID AND LT.For_Date=QRY.FOR_DATE1 AND LT.Leave_ID=QRY.Leave_ID    
   WHERE    LT.CMP_ID = @CMP_ID     
      AND LT.EMP_ID IN (SELECT DISTINCT EMP_ID FROM #ATT_MUSTER_EXCEL)    
      AND LM.LEAVE_CODE IN (SELECT DISTINCT LEAVE_CODE FROM #EMP_LEAVE1)    
   GROUP BY LT.EMP_ID, LM.LEAVE_CODE    
   ORDER BY LT.EMP_ID, LEAVE_CODE    
    
   INSERT INTO #EMP_LEAVE1           
   SELECT     LT.EMP_ID, LM.LEAVE_CODE + '_CLOSING' AS LEAVE_CODE, ISNULL(SUM(CASE WHEN LM.LEAVE_CODE = 'COMP' THEN LT.CompOff_Balance ELSE LT.LEAVE_CLOSING END),0) AS LEAVEDAYS    
   FROM       T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN     
      T0040_LEAVE_MASTER LM WITH (NOLOCK) ON LT.LEAVE_ID = LM.LEAVE_ID INNER JOIN    
      (SELECT L.EMP_ID,MAX(L.FOR_DATE) AS FOR_DATE1, L.Leave_ID     
       FROM T0140_LEAVE_TRANSACTION L WITH (NOLOCK) INNER JOIN #ATT_MUSTER_EXCEL A ON L.Emp_ID = A.EMP_ID     
       WHERE L.FOR_DATE <= @TO_DATE    
       GROUP BY  L.EMP_ID,L.Leave_ID) QRY ON LT.Emp_ID=QRY.Emp_ID AND LT.For_Date=QRY.FOR_DATE1 AND LT.Leave_ID=QRY.Leave_ID    
   WHERE    LT.CMP_ID = @CMP_ID     
      AND LT.EMP_ID IN (SELECT DISTINCT EMP_ID FROM #ATT_MUSTER_EXCEL)    
      AND LM.LEAVE_CODE IN (SELECT DISTINCT LEAVE_CODE FROM #EMP_LEAVE1)    
   GROUP BY LT.EMP_ID, LM.LEAVE_CODE    
   ORDER BY LT.EMP_ID, LEAVE_CODE    
       
   --ADDED BY NIMESH 10-JUL-2015 (OD LEAVE SHOULD NOT BE DISPLAYED IN NORMAL LEAVE COLUMN)    
   IF @IS_WHOSOFF = 0 --OD LEAVE DISPLAY IN NORMAL LEAVE COLUMN FOR HOME PAGE WHOSEOFF --ANKIT 22082015    
    BEGIN    
       
     UPDATE  C     
     SET  L = CAST(CAST(L AS NUMERIC(18,2))- CAST(LU.LEAVE_USED AS NUMERIC(18,2)) AS VARCHAR)    
     FROM #CROSSTAB C     
       INNER JOIN (    
           SELECT ISNULL(SUM(CASE WHEN LM.LEAVE_CODE = 'COMP' THEN LT.COMPOFF_USED ELSE LT.LEAVE_USED END),0) AS LEAVE_USED, EMP_ID    
           FROM T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK)    
             ON LT.LEAVE_ID=LM.LEAVE_ID AND LT.CMP_ID=LM.CMP_ID    
           WHERE (LT.FOR_DATE BETWEEN @FROM_DATE AND @TO_DATE) AND LT.CMP_ID=@CMP_ID    
             AND (LT.LEAVE_USED <> 0 OR LT.COMPOFF_USED <> 0) AND (LM.LEAVE_TYPE = 'COMPANY PURPOSE') -- OR LM.DEFAULT_SHORT_NAME='COMP')    
           GROUP BY EMP_ID    
          ) LU ON C.EMP_ID=LU.EMP_ID And C.CODE > '0' --Condition added by hardik for Code > 0 as it is giving error 04/01/2016     
     WHERE L <> ''    
    END    
  END    
 ELSE    
  BEGIN    
       
   SELECT EMP_ID, LEAVE_CODE,isnull(SUM(Leave_Used),0) AS LeaveDays --case when LM.Apply_Hourly =1 then COUNT(LT.Leave_ID) --Added Condition by Sumit on 15092016    
            -- Else isnull(SUM(Leave_Used),0) End AS LeaveDays --ISNULL(SUM(LEAVE_USED),0) AS LEAVEDAYS    
   INTO #EMP_LEAVE2       
   FROM    T0140_LEAVE_TRANSACTION LT WITH (NOLOCK)    
     INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK) ON LT.LEAVE_ID = LM.LEAVE_ID    
   WHERE   (FOR_DATE BETWEEN @FROM_DATE AND @TO_DATE) AND LT.CMP_ID = @CMP_ID     
     AND LT.LEAVE_USED <> 0    
     AND EXISTS (SELECT DISTINCT EMP_ID FROM #ATT_MUSTER_EXCEL EXL WHERE EXL.EMP_ID=LT.Emp_ID)    
     AND LM.LEAVE_CODE NOT IN ('OD','COMP')     
   GROUP BY EMP_ID, LEAVE_CODE--,Apply_Hourly    
   ORDER BY EMP_ID, LEAVE_CODE    
  END    
     
       
        
  --------------------------- END -------------------------------    
     
  DECLARE @STRUPDATE VARCHAR(8000)    
  DECLARE @LEVNAME VARCHAR(8000)    
  DECLARE @LEVNAME_OP VARCHAR(8000)    
  DECLARE @LEVNAME_CL VARCHAR(8000)    
  DECLARE @FIELDNAM VARCHAR(MAX)    
  DECLARE @FIELDNAM_OP VARCHAR(MAX)    
  DECLARE @FIELDNAM_CL VARCHAR(MAX)    
  DECLARE @FIELDNAM_COM VARCHAR(MAX)    
      
    
  DECLARE @LEAVENAME VARCHAR(100)    
  DECLARE @STRVAL NVARCHAR(500)    
      
  --DECLARE ALTER_TABLE_CURSOR CURSOR FOR     
  DECLARE @Leave_Type as VARCHAR(30)    
   
  IF ISNULL(@OD_COMOFF_SETTING,0) = 0    
   BEGIN   
  
    DECLARE ALTER_TABLE_CURSOR CURSOR FOR     
    SELECT  LV.LEAVE_CODE,LV.Leave_Type FROM DBO.T0040_LEAVE_MASTER  AS LV WITH (NOLOCK)    
    INNER JOIN ( SELECT LEAVE_CODE  FROM #EMP_LEAVE1 GROUP BY LEAVE_CODE     
      HAVING SUM (LEAVEDAYS) >0    
    ) AS TL    
    ON LV.LEAVE_CODE = TL.LEAVE_CODE    
    WHERE CMP_ID = @CMP_ID    
    ORDER BY LV.LEAVE_SORTING_NO --LV.LEAVE_CODE    
   END    
  ELSE    
   BEGIN    
    DECLARE ALTER_TABLE_CURSOR CURSOR FOR     
    SELECT  LV.LEAVE_CODE,LV.Leave_Type FROM DBO.T0040_LEAVE_MASTER  AS LV WITH (NOLOCK)    
    INNER JOIN ( SELECT LEAVE_CODE  FROM #EMP_LEAVE2 GROUP BY LEAVE_CODE     
      HAVING SUM (LEAVEDAYS) >0    
    ) AS TL    
    ON LV.LEAVE_CODE = TL.LEAVE_CODE    
    WHERE CMP_ID = @CMP_ID    
    AND LV.LEAVE_CODE NOT IN ('OD','COMP')     
    ORDER BY LV.LEAVE_SORTING_NO --LV.LEAVE_CODE    
   END    
         
    
  OPEN ALTER_TABLE_CURSOR    
    
  FETCH NEXT FROM ALTER_TABLE_CURSOR INTO @LEAVENAME,@Leave_Type    
    
  WHILE @@FETCH_STATUS = 0    
   BEGIN    
    IF NOT(ISNULL(@OD_COMOFF_SETTING,0) = 1 and @Leave_Type='Company Purpose') --Mukti(27032017)    
     BEGIN    
      SET @STRVAL = 'ALTER TABLE  #EMPLAVEDETAIL ADD ['+ @LEAVENAME +'_OPENING] NUMERIC(22,2) DEFAULT 0 NOT NULL'    
      EXEC (@STRVAL)    
      SET @STRVAL = 'ALTER TABLE  #EMPLAVEDETAIL ADD ['+ @LEAVENAME +'] NUMERIC(22,2) DEFAULT 0 NOT NULL'    
      EXEC (@STRVAL)     
      SET @STRVAL = 'ALTER TABLE  #EMPLAVEDETAIL ADD ['+ @LEAVENAME +'_CLOSING] NUMERIC(22,2) DEFAULT 0 NOT NULL'    
      EXEC (@STRVAL)    
            
      SET @LEVNAME = ISNULL(@LEVNAME,'') + '['+ @LEAVENAME +']' +','    
      SET @LEVNAME_OP = ISNULL(@LEVNAME_OP,'') + '['+ @LEAVENAME +'_OPENING]' +','    
      SET @LEVNAME_CL = ISNULL(@LEVNAME_CL,'') + '['+ @LEAVENAME +'_CLOSING]' +','    
      SET @FIELDNAM = ISNULL(@FIELDNAM,'') + 'ISNULL(['+ @LEAVENAME +'],0) AS '+ @LEAVENAME + ','    
      SET @FIELDNAM_OP = ISNULL(@FIELDNAM_OP,'') + 'ISNULL(['+ @LEAVENAME +'_OPENING],0) AS '+ @LEAVENAME + '_OPENING,'    
      SET @FIELDNAM_CL = ISNULL(@FIELDNAM_CL,'') + 'ISNULL(['+ @LEAVENAME +'_CLOSING],0) AS '+ @LEAVENAME + '_CLOSING,'    
      SET @FIELDNAM_COM = ISNULL(@FIELDNAM_COM,'') + 'ISNULL(['+ @LEAVENAME +'_OPENING],0) AS '+ @LEAVENAME + '_OPENING,'    
           + 'ISNULL(['+ @LEAVENAME +'],0) AS '+ @LEAVENAME + ','    
           + 'ISNULL(['+ @LEAVENAME +'_CLOSING],0) AS '+ @LEAVENAME + '_CLOSING,'    
    
     END       
    FETCH NEXT FROM ALTER_TABLE_CURSOR INTO  @LEAVENAME,@Leave_Type    
   END     
  CLOSE ALTER_TABLE_CURSOR;    
  DEALLOCATE ALTER_TABLE_CURSOR;    
      
  SET @LEVNAME = LEFT(@LEVNAME,LEN(@LEVNAME)-1)    
  SET @LEVNAME_OP = LEFT(@LEVNAME_OP,LEN(@LEVNAME_OP)-1)    
  SET @LEVNAME_CL = LEFT(@LEVNAME_CL,LEN(@LEVNAME_CL)-1)    
  SET @FIELDNAM = LEFT(@FIELDNAM,LEN(@FIELDNAM)-1)    
  SET @FIELDNAM_OP = LEFT(@FIELDNAM_OP,LEN(@FIELDNAM_OP)-1)    
  SET @FIELDNAM_CL = LEFT(@FIELDNAM_CL,LEN(@FIELDNAM_CL)-1)    
  SET @FIELDNAM_COM = LEFT(@FIELDNAM_COM,LEN(@FIELDNAM_COM)-1)    
      
      
  IF ISNULL(@OD_COMOFF_SETTING,0) = 0    
   BEGIN     
     --print 10001  
    SET @QRY = ' INSERT INTO #EMPLAVEDETAIL    
       (IEmp_ID, ' +@LEVNAME_OP  + ','  +@LEVNAME + ',' +@LEVNAME_CL  + ')    
       SELECT EMP_ID '    
       + CASE WHEN ISNULL(@FIELDNAM_OP,'') <> '' THEN ',' ELSE '' END     
       + ''+ISNULL(@FIELDNAM_OP,'') +    
       + CASE WHEN ISNULL(@FIELDNAM,'') <> '' THEN ',' ELSE '' END     
       + ISNULL(@FIELDNAM,'') +    
       + CASE WHEN ISNULL(@FIELDNAM_CL,'') <> '' THEN ',' ELSE '' END     
       + ''+ISNULL(@FIELDNAM_CL,'') +    
       ' FROM #EMP_LEAVE1    
       PIVOT (SUM (LEAVEDAYS) FOR LEAVE_CODE IN ('+@LEVNAME+ ',' +@LEVNAME_OP  + ',' +@LEVNAME_CL  + ')) AS EMPDATA    
       ORDER BY EMP_ID '    
   END    
  ELSE    
   BEGIN    
    SET @QRY = ' INSERT INTO #EMPLAVEDETAIL SELECT EMP_ID,0 '    
       + CASE WHEN ISNULL(@FIELDNAM,'') <> '' THEN ',' ELSE '' END     
       + ISNULL(@FIELDNAM,'') +    
       ',0 FROM #EMP_LEAVE2    
       PIVOT (SUM (LEAVEDAYS) FOR LEAVE_CODE IN ('+@LEVNAME+')) AS EMPDATA     
       ORDER BY EMP_ID '    
   END    
     
  EXEC (@QRY)      
     
  --IF OBJECT_ID('tempdb..#EMPLAVEDETAIL') IS NOT NULL    
  -- BEGIN    
  --  DECLARE @COUNT1 INT    
  --  DECLARE @COUNT2 INT    
  --  SET @COUNT2 = 1    
  --  SELECT @COUNT1 = COUNT(1) FROM #EMP_LEAVE1 WHERE LEAVE_CODE LIKE '%_OPENING%' GROUP BY LEAVE_CODE    
        
  --  SELECT  LEAVE_CODE FROM #EMP_LEAVE1 WHERE LEAVE_CODE LIKE '%_OPENING%' GROUP BY LEAVE_CODE    
        
  --  WHILE @COUNT2 <= @COUNT1     
  --   BEGIN    
  --    SELECT 111    
  --    SET @COUNT2 = @COUNT2 + 1    
  --   END    
  -- END   
    
	   UPDATE  T     
	SET  PAYABLE_DAYS = (    
       ISNULL(CAST((CASE WHEN P = '' THEN '0.0' ELSE ISNULL(P,0) END) AS NUMERIC(18,2)),0) +     
       CASE WHEN Inc_Holiday=0 THEN '0.0' ELSE ISNULL(CAST((CASE WHEN H = '' THEN '0.0' ELSE ISNULL(H,0) END) AS NUMERIC(18,2)),0) END +     
       CASE WHEN Inc_Weekoff=0 THEN '0.0' ELSE ISNULL(CAST((CASE WHEN W = '' THEN '0.0' ELSE ISNULL(W,0) END) AS NUMERIC(18,2)),0) END +      
       ISNULL(CAST((CASE WHEN L = '' THEN '0.0' ELSE ISNULL(L,0) END) AS NUMERIC(18,2)),0) -    
       ISNULL(CAST((CASE WHEN GP = '' THEN '0.0' ELSE ISNULL(GP,0) END) AS NUMERIC(18,2)),0) -    
       (CASE WHEN isnull(LATE_WITH_LEAVE,0) = 0 THEN ISNULL(CAST((CASE WHEN LC = '' THEN '0.0' ELSE ISNULL(LC,0) END) AS NUMERIC(18,2)),0) ELSE 0 END) -    
       ISNULL(EARLY_DEDUCT_DAYS,0)     
      ) 
	  , TOTAL_DAYS 
	  = (    
       ISNULL(CAST((CASE WHEN P = '' THEN '0.0' ELSE ISNULL(P,0) END) AS NUMERIC(18,2)),0) +     
       CASE WHEN 1=0 THEN '0.0' ELSE ISNULL(CAST((CASE WHEN H = '' THEN '0.0' ELSE ISNULL(H,0) END) AS NUMERIC(18,2)),0) END +     
       CASE WHEN 1=0 THEN '0.0' ELSE ISNULL(CAST((CASE WHEN W = '' THEN '0.0' ELSE ISNULL(W,0) END) AS NUMERIC(18,2)),0) END +      
       ISNULL(CAST((CASE WHEN L = '' THEN '0.0' ELSE ISNULL(L,0) END) AS NUMERIC(18,2)),0) -    
       ISNULL(CAST((CASE WHEN GP = '' THEN '0.0' ELSE ISNULL(GP,0) END) AS NUMERIC(18,2)),0) -    
       (CASE WHEN isnull(LATE_WITH_LEAVE,0) = 0 THEN ISNULL(CAST((CASE WHEN LC = '' THEN '0.0' ELSE ISNULL(LC,0) END) AS NUMERIC(18,2)),0) ELSE 0 END) -    
       ISNULL(EARLY_DEDUCT_DAYS,0)     
      ) 
   FROM #CROSSTAB T     
   INNER JOIN T0080_EMP_MASTER EM ON T.EMP_ID=EM.EMP_ID  --COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS AND CMP_ID = @CMP_ID    
   LEFT OUTER JOIN #UNPAID_LEAVE UL ON T.EMP_ID = UL.EMP_ID    
   INNER JOIN #EMP_CONS EC ON T.EMP_ID=EC.EMP_ID    
   INNER JOIN #GENERAL_SETTING GS ON GS.Branch_ID=EC.Branch_ID where T.EMP_ID=EM.EMP_ID 

     ---added by mansi start 16-11-21         
   UPDATE C     
   SET  PAYABLE_PRESENT_DAYS = cast(P as numeric(18,2))-cast(LC as numeric(18,2))    
   FROM #CROSSTAB C        
   INNER JOIN #EMP_ATTENDANCE EA ON C.EMP_ID=EA.EMP_ID    
 ---added by mansi end 16-11-21       
                
  INSERT INTO #EMPDATA (EMP_ID,ICODE,PAYABLE_PRESENT_DAYS ,PAYABLE_DAYS,EARLY_DEDUCT_DAYS,TOTAL_DAYS)    
  SELECT EMP_ID,CODE,PAYABLE_PRESENT_DAYS,PAYABLE_DAYS,EARLY_DEDUCT_DAYS,TOTAL_DAYS  FROM #CROSSTAB    
      

  ALTER TABLE  #CROSSTAB DROP COLUMN LATE_WITH_LEAVE    
      
  /* START */    
      
  ALTER TABLE  #EMPLAVEDETAIL ADD DESIGNAME VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS;    
  ALTER TABLE  #EMPDATA ADD DESIGNAME VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS;    
  ALTER TABLE  #EMPLAVEDETAIL ADD EMPNAME VARCHAR(100) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS;    
  ALTER TABLE  #EMPDATA ADD EMPNAME VARCHAR(100) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS;    
  ----added jimit 18072016  for whose off---------------    
  ALTER TABLE  #EMPDATA ADD Branch_Id NUMERIC(18,0)     
  ALTER TABLE  #EMPDATA ADD Dept_Id NUMERIC(18,0)     
    
  ALTER TABLE  #EMPDATA ADD CTC NUMERIC(18,2)     
  ALTER TABLE  #EMPDATA ADD GROSS_SALARY NUMERIC(18,2)     
  ALTER TABLE  #EMPDATA ADD DATE_OF_BIRTH DATETIME    
  ALTER TABLE  #EMPDATA ADD REPORTING_MANAGER VARCHAR(500)    
    
    
  UPDATE #EMPLAVEDETAIL     
  SET DESIGNAME =  (    
       CASE WHEN D.DESIG_DIS_NO = 0     
        THEN DESIG_NAME     
       ELSE    
        RIGHT(REPLICATE('0',21) + CAST(D.DESIG_DIS_NO AS VARCHAR), 21)     
       END    
       ),EMPNAME = EM.EMP_FIRST_NAME    
  FROM #EMPLAVEDETAIL T     
  INNER JOIN T0080_EMP_MASTER EM ON T.IEMP_ID = EM.EMP_ID     
  INNER JOIN (SELECT EMP_ID, INCREMENT_ID, I1.DESIG_ID    
       FROM T0095_INCREMENT I1 WITH (NOLOCK)    
       WHERE I1.INCREMENT_ID=(SELECT TOP 1 I2.INCREMENT_ID    
              FROM T0095_INCREMENT I2 WITH (NOLOCK)    
              WHERE I1.EMP_ID=I2.EMP_ID AND I1.CMP_ID=I2.CMP_ID    
                AND I2.INCREMENT_EFFECTIVE_DATE <= @TO_DATE    
              ORDER BY I2.INCREMENT_EFFECTIVE_DATE DESC, I2.INCREMENT_ID DESC    
             )    
         AND I1.CMP_ID=@CMP_ID    
       ) I  ON T.IEMP_ID=I.EMP_ID    
    INNER JOIN T0040_DESIGNATION_MASTER D WITH (NOLOCK) ON D.DESIG_ID=I.DESIG_ID    
        
  UPDATE #EMPDATA     
  SET DESIGNAME =  (    
       CASE WHEN D.DESIG_DIS_NO = 0     
        THEN DESIG_NAME     
       ELSE    
        RIGHT(REPLICATE('0',21) + CAST(D.DESIG_DIS_NO AS VARCHAR), 21)     
       END    
       ),EMPNAME = EM.EMP_FIRST_NAME,Branch_ID = I.Branch_ID,Dept_ID = I.Dept_ID
	   --, CTC = I.CTC, GROSS_SALARY = I.Gross_Salary -- Commeted By Sajid 31-05-2022 for MDI Due to Attendace Rights only given salary view.
	   , DATE_OF_BIRTH = EM.Date_Of_Birth,    
       REPORTING_MANAGER=ERM.Alpha_Emp_Code +'-'+ ERM.Emp_Full_Name    
  FROM #EMPDATA T     
    INNER JOIN T0080_EMP_MASTER EM ON T.EMP_ID=EM.EMP_ID -- T.ICODE = EM.ALPHA_EMP_CODE COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS                    
    INNER JOIN (SELECT I1.EMP_ID,I1.INCREMENT_ID, I1.DESIG_ID,I1.Branch_ID,I1.Dept_ID
			--, I1.CTC,I1.Gross_Salary    -- Commeted By Sajid 31-05-2022 for MDI Due to Attendace Rights only given salary view.
       FROM T0095_INCREMENT I1  WITH (NOLOCK)     
       WHERE I1.INCREMENT_ID=(SELECT TOP 1 I2.INCREMENT_ID    
              FROM T0095_INCREMENT I2 WITH (NOLOCK)    
              WHERE I1.EMP_ID=I2.EMP_ID AND I1.CMP_ID=I2.CMP_ID    
                AND I2.INCREMENT_EFFECTIVE_DATE <= @TO_DATE    
              ORDER BY I2.INCREMENT_EFFECTIVE_DATE DESC, I2.INCREMENT_ID DESC    
             )    
         AND I1.CMP_ID=@CMP_ID    
       ) I  ON EM.EMP_ID=I.EMP_ID    
    INNER JOIN T0040_DESIGNATION_MASTER D WITH (NOLOCK) ON D.DESIG_ID=I.DESIG_ID      
    INNER JOIN DBO.fn_getReportingManager(@CMP_ID,@EMP_ID,@TO_DATE) RM ON RM.Emp_ID=EM.Emp_ID --Mukti(30122020)    
    INNER JOIN T0080_EMP_MASTER ERM WITH (NOLOCK) ON RM.R_Emp_ID=ERM.Emp_ID     
      
  /* END   */    
      
       
  --ADDED BY NIMESH 10-JUL-2015 (TO SORT BY CODE/NAME/ENROLL NO)    
  IF @ORDER_BY = ''  OR @ORDER_BY = 'CODE'    
   SET @ORDER_BY = '(CASE WHEN ISNUMERIC(CODE) = 1     
          THEN RIGHT(REPLICATE(''0'',21) + CODE, 20)              
         ELSE     
          CODE    
        END) '    
  ELSE IF @ORDER_BY = 'EMPLOYEENAME'    
   SET @ORDER_BY = 'EMPNAME ' + ', (CASE WHEN ISNUMERIC(CODE) = 1     
          THEN RIGHT(REPLICATE(''0'',21) + CODE, 20)              
         ELSE     
          CODE    
        END)'    
  ELSE    
   SET @ORDER_BY = @ORDER_BY + ', (CASE WHEN ISNUMERIC(CODE) = 1     
          THEN RIGHT(REPLICATE(''0'',21) + CODE, 20)              
         ELSE     
          CODE    
        END) '    
      
  --IF @COUNT = 0     
  -- SELECT @COUNT = COUNT(1) FROM #CROSSTAB
  
 -- Start Added by Sajid For Add Customized Column on 06122021 For Amman Client
 /*
 declare @sql       NVARCHAR(MAX)-- = N''  
 declare @colNames as varchar (max)--= N''  
   
   
 SET @sql  = N''  
 SET @colNames = N''  
  
 SELECT   
  @colNames = @colNames + ',' + QUOTENAME(REPLACE(CAST(column_name AS VARCHAR(MAX)),' ','_' )) 
  FROM T0081_CUSTOMIZED_COLUMN WITH (NOLOCK)  
  WHERE [cmp_Id] = @Cmp_ID and Active =1  
   
   
 CREATE TABLE #Cust_Column(CC_Emp_ID Numeric(18,0));  
  
 DECLARE @ALTERCOLS NVARCHAR(MAX);  
   
 SELECT @ALTERCOLS = ISNULL(@ALTERCOLS  + '', ';') + 'ALTER  TABLE #Cust_Column ADD ' + DATA + ' Varchar(max)' FROM dbo.Split(@colNames, ',') Where Data <> '';  
   
 EXEC sp_executesql @ALTERCOLS;  
  
 SET @sql = N'  
 insert into #Cust_Column  
 SELECT CC_EMP_ID ' + isnull(@colNames,'') + '   
 FROM (  
 SELECT emp_id as CC_EMP_ID , REPLACE(CAST(column_name AS VARCHAR(MAX)),'' '',''_'' ) as Column_Name   , value  
 FROM T0082_Emp_Column WITH (NOLOCK) inner join T0081_CUSTOMIZED_COLUMN WITH (NOLOCK) on T0082_Emp_Column.cmp_Id =T0081_CUSTOMIZED_COLUMN.Cmp_Id and T0082_Emp_Column.mst_Tran_Id = T0081_CUSTOMIZED_COLUMN.Tran_Id) up  
 PIVOT (max(value) FOR Column_Name IN ( ' + isnull(STUFF(@colNames, 1, 1, ''),'[0]') + ')) AS pvt  
 ORDER BY CC_EMP_ID'  
   
 --drop table #Cust_Column  
 EXEC sp_executesql @sql;  

  ALTER TABLE #Cust_Column 
 DROP COLUMN Department 
 ALTER TABLE #Cust_Column 
 DROP COLUMN Designation 
 */

 -- END Added by Sajid For Add Customized Column on 06122021 For Amman Client
 

 --Select *From #Cust_Column
    
  DECLARE @ABSENT_LWP_QUERY AS VARCHAR(MAX);    
  IF CHARINDEX('LWP', @FIELDNAM) > 0    
   SET @ABSENT_LWP_QUERY = 'UPDATE #CROSSTABDATA SET A=ISNULL(A,0) + ISNULL(LWP,0)'    
  ELSE    
   SET @ABSENT_LWP_QUERY = '';    
    
         
   SET @QRY = 'SELECT  ROW_NUMBER() OVER(ORDER BY ' + @ORDER_BY + ' ASC) AS SR_NO1,C.*'+    
        + CASE WHEN ISNULL(@FIELDNAM_COM,'') <> '' THEN ',' ELSE '' END     
        + ISNULL(@FIELDNAM_COM,'') +    
        ' INTO #CROSSTABDATA     
      FROM  #CROSSTAB AS C     
        LEFT OUTER JOIN #EMPLAVEDETAIL AS EL ON C.EMP_ID = EL.IEMP_ID    
     ORDER BY ' + @ORDER_BY + '    
     --ORDER BY CASE WHEN ISNUMERIC(REPLACE(REPLACE(CODE,''="'',''''),''"'','''')) = 1 THEN RIGHT(REPLICATE(''0'',21) + REPLACE(REPLACE(CODE,''="'',''''),''"'',''''), 20)    
     --      WHEN ISNUMERIC(REPLACE(REPLACE(CODE,''="'',''''),''"'','''')) = 0 THEN LEFT(REPLACE(REPLACE(CODE,''="'',''''),''"'','''') + REPLICATE('''',21), 20)    
     --      ELSE REPLACE(REPLACE(CODE,''="'',''''),''"'','''') END     
        
 --ALTER TABLE   #CROSSTABDATA DROP COLUMN EMP_ID    
     --ALTER TABLE   #CROSSTABDATA DROP COLUMN IEMP_ID    
     --ALTER TABLE   #CROSSTABDATA DROP COLUMN ID_NUM    
     --ALTER TABLE   #CROSSTABDATA DROP COLUMN L    
     --ALTER TABLE   #CROSSTABDATA DROP COLUMN LC    
    
     ALTER TABLE   #CROSSTABDATA DROP COLUMN PAYABLE_PRESENT_DAYS    
     ALTER TABLE   #CROSSTABDATA DROP COLUMN PAYABLE_DAYS    
     ALTER TABLE   #CROSSTABDATA DROP COLUMN EARLY_DEDUCT_DAYS    
     ALTER TABLE   #CROSSTABDATA DROP COLUMN WO_HO_DAY    
      
	 ALTER TABLE   #CROSSTABDATA DROP COLUMN TOTAL_DAYS    

     --SELECT  STATUS_2  AS DAY(FOR_DATE)  FROM #CROSSTABDATA CT INNER JOIN     
     --#DAY_STATUS DS ON DS.EMP_CODE = CT.CODE    
     --WHERE STATUS_2 = ''LC''    
         
         
     SELECT ROW_NUMBER() OVER(ORDER BY ' + @ORDER_BY + ' ASC) AS SR_NO,C.* ,ED.PAYABLE_PRESENT_DAYS
	 ,ED.EARLY_DEDUCT_DAYS, ED.TOTAL_DAYS, ED.PAYABLE_DAYS,    
      CASE WHEN SR_NO1 = 1 THEN NULL ELSE (' + CAST((DATEDIFF(DD, @FROM_DATE, @TO_DATE) + 1) AS VARCHAR) + ') END AS MONTH_DAYS    
     ,Ed.Branch_Id,Ed.dept_Id
	 --,ED.CTC, ED.GROSS_SALARY -- Commeted By Sajid 31-05-2022 for MDI Due to Attendace Rights only given salary view.
	 , CAST(ED.DATE_OF_BIRTH AS VARCHAR(11)) AS DATE_OF_BIRTH,REPORTING_MANAGER
	 --,CC.* -- Added By Sajid 06122021 for Amman Client

     INTO #TEMP    
     FROM #CROSSTABDATA AS C 
	 LEFT OUTER JOIN #EMPDATA AS ED ON C.CODE = ED.ICODE
	 --LEFT OUTER JOIN #Cust_Column AS CC ON CC.CC_EMP_ID = ED.EMP_ID -- Added By Sajid 06122021 for Amman Client
     ORDER BY SR_NO    
    
     ALTER TABLE  #TEMP DROP COLUMN SR_NO1     
         
     IF @IS_WHOSOFF <> 1    
      Begin     
       ALTER TABLE  #TEMP DROP COLUMN Branch_Id    
       ALTER TABLE  #TEMP DROP COLUMN dept_Id    
       ALTER TABLE  #TEMP DROP COLUMN Emp_ID    
      End    
         
   ---  SELECT * FROM #TEMP    ORDER BY SR_NO


     DROP TABLE #TEMP    
     --DROP TABLE #CROSSTAB    
     '    
    
    
  --' + @ORDER_BY + '    
  --EXEC (@QRY)     
  EXEC sp_executesql @QRY, N'@IS_WHOSOFF TINYINT', @IS_WHOSOFF
 	
	--select PAYABLE_DAYS from #CROSSTAB #prapti
	

	select PAYABLE_DAYS,CODE,EMP_ID into ##pday from #CROSSTAB  
	
--	SELECT * FROM ##pday

	DROP TABLE #CROSSTAB  

  IF @IS_WHOSOFF = 1     
   BEGIN    
       
    DECLARE @LEAVE_FOOTER VARCHAR(5000)    
    SET @LEAVE_FOOTER = ''    
         
    SELECT  @LEAVE_FOOTER = STUFF((SELECT ' ' + S.LEAVE_NAME COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS + CASE WHEN APPLY_HOURLY=1 THEN ' (HOURLY) ' ELSE '' END  FROM  ---APPLY HOURLY ADDED BY SID 18/06/2014    
    ( SELECT ('  ' + '<B>' + UPPER(LM.LEAVE_CODE COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS) +  '</B>' + ' : '  + LOWER(LM.LEAVE_NAME COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS) + ' ' ) AS LEAVE_NAME,CMP_ID,APPLY_HOURLY FROM T0040_LEAVE_MASTER LM WITH (NOLOCK) INNER
  
	 JOIN    
     #LEAVE_CODE LC ON UPPER(LM.LEAVE_CODE COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS) =   UPPER(LC.LEAVE_CODE)    
    )    
    S WHERE S.CMP_ID = T.CMP_ID FOR XML PATH('')),1,1,'')  FROM T0040_LEAVE_MASTER AS T WITH (NOLOCK)    
     WHERE T.CMP_ID=@CMP_ID GROUP BY T.CMP_ID    
        
    SELECT  @LEAVE_FOOTER AS LEAVE_FOOTER     

    IF (@PAGE_SIZE > 0)    
     SELECT CAST(@COUNT AS INT) AS RECORD_COUNT, CEILING(@COUNT / @PAGE_SIZE) As Page_Count    
    ELSE     
     SELECT CAST(@COUNT AS INT) AS RECORD_COUNT, 1 As Page_Count    
    

    select  LP.Emp_ID,LP.FOR_DATE, Leave_Code,Leave_Status,Case When Leave_Status = 'Pending' Then '#e69494' Else 'Transperent' End BgColor,    
      '<li>    
       '+ Leave_Name + ' Applied for ' +    
        Case When Isnull(leave_out_Time , '1900-01-01') <> '1900-01-01' AND Leave_Assign_As = 'Part Day' Then    
         IsNull(Leave_Assign_As,'') + ' From ' + convert(varchar(5), Leave_Out_Time, 108) + ' To ' + convert(varchar(5), leave_In_time, 108)     
         When Isnull(Half_Leave_Date, '1900-01-01') = LP.For_Date  Then    
          IsNull(Leave_Assign_As,'') + ' '     
         When Isnull(Half_Leave_Date, '1900-01-01') <> LP.For_Date and Isnull(Half_Leave_Date, '1900-01-01') <> '1900-01-01' Then    
          ' Full Day '     
         Else     
          ' From ' + convert(varchar(10), From_Date, 103) + ' To ' + convert(varchar(10), To_Date, 103)     
        End + ' Reason: ' + IsNull(Leave_Reason,'') + ' - ' + Leave_Status + '    
      </li>' As Html    
    from #ATT_MUSTER_EXCEL EX    
      INNER JOIN (SELECT EX1.Emp_ID, Ex1.For_Date,LAD.From_Date, LAD.To_Date, LM.Leave_Code,LM.Leave_Name, LM.Leave_Type, LAD.Leave_Reason,     
           LAD.Leave_Assign_As, LAD.Leave_Out_Time, LAD.leave_In_time,LAD.Half_Leave_Date As Half_Leave_Date, 'Pending' As Leave_Status    
         FROM T0100_LEAVE_APPLICATION LA WITH (NOLOCK)    
           INNER JOIN T0110_LEAVE_APPLICATION_DETAIL LAD WITH (NOLOCK) ON LA.Leave_Application_ID=LAD.Leave_Application_ID    
           INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK) ON LAD.Leave_ID=LM.Leave_ID    
           INNER JOIN #ATT_MUSTER_EXCEL EX1 ON EX1.EMP_ID=LA.Emp_ID AND EX1.FOR_DATE BETWEEN LAD.From_Date AND LAD.To_Date               
         WHERE LA.Application_Status = 'P' AND Case WHEN LA.M_Cancel_WO_HO = 1 AND EX1.WO_HO<>'' Then 0 Else 1 End = 1    
         UNION ALL    
         SELECT EX1.Emp_ID, Ex1.For_Date,LAD.From_Date, LAD.To_Date, LM.Leave_Code,LM.Leave_Name, LM.Leave_Type, LAD.Leave_Reason,     
           LAD.Leave_Assign_As, LAD.Leave_Out_Time, LAD.leave_In_time,LAD.Half_Leave_Date As Half_Leave_Date, 'Approved' As Leave_Status    
         FROM T0120_LEAVE_APPROVAL LA WITH (NOLOCK)    
           INNER JOIN T0130_LEAVE_APPROVAL_DETAIL LAD WITH (NOLOCK) ON LA.Leave_Approval_ID=LAD.Leave_Approval_ID    
           INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK) ON LAD.Leave_ID=LM.Leave_ID    
           INNER JOIN #ATT_MUSTER_EXCEL EX1 ON EX1.EMP_ID=LA.Emp_ID AND EX1.FOR_DATE BETWEEN LAD.From_Date AND LAD.To_Date               
         WHERE LA.Approval_Status <> 'R' AND Case WHEN LA.M_Cancel_WO_HO = 1 AND EX1.WO_HO<>'' Then 0 Else 1 End = 1    
           AND NOT EXISTS(SELECT 1 FROM T0150_LEAVE_CANCELLATION LC WITH (NOLOCK) WHERE LA.Leave_Approval_ID=LC.Leave_Approval_id AND EX1.FOR_DATE=LC.For_date)    
         ) LP ON Ex.EMP_ID=LP.EMP_ID AND Ex.FOR_DATE=LP.FOR_DATE    
    Where Ex.For_date Between @FROM_DATE and @TO_DATE    
    
     END     
          
  -------------------------------- END ----------------------------------    