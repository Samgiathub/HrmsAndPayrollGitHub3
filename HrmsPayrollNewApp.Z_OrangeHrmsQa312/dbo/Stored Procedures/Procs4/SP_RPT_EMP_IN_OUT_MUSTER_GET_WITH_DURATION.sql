CREATE PROCEDURE [dbo].[SP_RPT_EMP_IN_OUT_MUSTER_GET_WITH_DURATION]
	 @CMP_ID 		NUMERIC
	,@FROM_DATE		DATETIME
	,@TO_DATE 		DATETIME
	,@BRANCH_ID		NUMERIC
	,@CAT_ID 		NUMERIC 
	,@GRD_ID 		NUMERIC
	,@TYPE_ID 		NUMERIC
	,@DEPT_ID 		NUMERIC
	,@DESIG_ID 		NUMERIC
	,@EMP_ID 		NUMERIC
	,@CONSTRAINT 	VARCHAR(MAX)
	,@REPORT_FOR	VARCHAR(10)
AS
	SET NOCOUNT ON 
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
	SET ARITHABORT ON

	
	IF @BRANCH_ID = 0  
		SET @BRANCH_ID = NULL
		
	IF @CAT_ID = 0  
		SET @CAT_ID = NULL

	IF @GRD_ID = 0  
		SET @GRD_ID = NULL

	IF @TYPE_ID = 0  
		SET @TYPE_ID = NULL

	IF @DEPT_ID = 0  
		SET @DEPT_ID = NULL

	IF @DESIG_ID = 0  
		SET @DESIG_ID = NULL

	IF @EMP_ID = 0  
		SET @EMP_ID = NULL
		
	CREATE TABLE #EMP_CONS
	(
		EMP_ID			NUMERIC,
		INCREMENT_ID	NUMERIC,
		BRANCH_ID		NUMERIC
	)
	DECLARE @TOTAL_SECOND AS NUMERIC(18,2) -- ADDED BY MIHIR A. 17/05/2012
	IF @CONSTRAINT <> ''
		BEGIN			
			Insert Into #Emp_Cons(Emp_ID, INCREMENT_ID, BRANCH_ID)
			SELECT  I.EMP_ID,I.INCREMENT_ID,I.BRANCH_ID
			FROM	T0095_Increment I WITH (NOLOCK)
					INNER JOIN (SELECT	MAX(INCREMENT_ID) AS INCREMENT_ID, I1.EMP_ID
								FROM	T0095_INCREMENT I1 WITH (NOLOCK)
										INNER JOIN (SELECT	MAX(INCREMENT_EFFECTIVE_DATE) AS INCREMENT_EFFECTIVE_DATE, I2.EMP_ID
													FROM	T0095_INCREMENT I2 WITH (NOLOCK)
													WHERE	I2.INCREMENT_EFFECTIVE_DATE <= @TO_DATE
													GROUP BY I2.EMP_ID) I2 ON I1.EMP_ID=I2.EMP_ID AND I1.INCREMENT_EFFECTIVE_DATE=I2.INCREMENT_EFFECTIVE_DATE
								GROUP BY I1.EMP_ID) I1 ON I.INCREMENT_ID=I1.INCREMENT_ID		
			WHERE	EXISTS (SELECT 1 FROM dbo.Split (@Constraint,'#') WHERE DATA <> '' AND CAST(DATA AS NUMERIC) = I.EMP_ID)

		END
	ELSE
		BEGIN			
			Insert Into #Emp_Cons(Emp_ID, INCREMENT_ID, BRANCH_ID)
			SELECT	I.Emp_Id, I.INCREMENT_ID, I.BRANCH_ID			
			FROM	T0095_Increment I WITH (NOLOCK)
					INNER JOIN (SELECT	MAX(INCREMENT_ID) AS INCREMENT_ID, I1.EMP_ID
								FROM	T0095_INCREMENT I1 WITH (NOLOCK)
										INNER JOIN (SELECT	MAX(INCREMENT_EFFECTIVE_DATE) AS INCREMENT_EFFECTIVE_DATE, I2.EMP_ID
													FROM	T0095_INCREMENT I2 WITH (NOLOCK)
													WHERE	I2.INCREMENT_EFFECTIVE_DATE <= @TO_DATE
													GROUP BY I2.EMP_ID) I2 ON I1.EMP_ID=I2.EMP_ID AND I1.INCREMENT_EFFECTIVE_DATE=I2.INCREMENT_EFFECTIVE_DATE
								GROUP BY I1.EMP_ID) I1 ON I.INCREMENT_ID=I1.INCREMENT_ID					
			Where Cmp_ID = @Cmp_ID 
					and Isnull(Cat_ID,0) = Isnull(@Cat_ID ,Isnull(Cat_ID,0))
					and Branch_ID = isnull(@Branch_ID ,Branch_ID)
					and Grd_ID = isnull(@Grd_ID ,Grd_ID)
					and isnull(Dept_ID,0) = isnull(@Dept_ID ,isnull(Dept_ID,0))
					and Isnull(Type_ID,0) = isnull(@Type_ID ,Isnull(Type_ID,0))
					and Isnull(Desig_ID,0) = isnull(@Desig_ID ,Isnull(Desig_ID,0))
					and I.Emp_ID = isnull(@Emp_ID ,I.Emp_ID) 
					AND EXISTS (SELECT 1 
								FROM	(SELECT		EMP_ID, CMP_ID, JOIN_DATE, isnull(left_Date, @To_date) as left_Date 
										 FROM		T0110_EMP_LEFT_JOIN_TRAN WITH (NOLOCK)) qry
								WHERE	cmp_ID = @Cmp_ID  AND  
										(
											(
													(@From_Date >= join_Date  and  @From_Date <= left_date) 
												OR ( @To_Date  >= join_Date  and @To_Date <= left_date )
												OR Left_date IS NULL AND @To_Date >= Join_Date
											)
											OR @To_Date >= left_date  and  @From_Date <= left_date 
										) AND qry.EMP_ID=I.EMP_ID
								)

		END
	
	DECLARE @FOR_DATE DATETIME 
	DECLARE @DATE_DIFF NUMERIC 
	DECLARE @NEW_TO_DATE DATETIME 
	
	
	SET @DATE_DIFF = DATEDIFF(D,@FROM_DATE,@TO_DATE) + 1 
	SET @DATE_DIFF = 35 - ( @DATE_DIFF)
	SET @NEW_TO_DATE = @TO_DATE --DATEADD(D,@DATE_DIFF,@TO_DATE)
	
	CREATE TABLE #Data         
	(         
	   Emp_Id   numeric ,         
	   For_date datetime,        
	   Duration_in_sec numeric,        
	   Shift_ID numeric ,        
	   Shift_Type numeric ,        
	   Emp_OT  numeric ,        
	   Emp_OT_min_Limit numeric,        
	   Emp_OT_max_Limit numeric,        
	   P_days  numeric(12,3) default 0,        
	   OT_Sec  numeric default 0  ,
	   In_Time datetime,
	   Shift_Start_Time datetime,
	   OT_Start_Time numeric default 0,
	   Shift_Change tinyint default 0,
	   Flag int default 0,
	   Weekoff_OT_Sec  numeric default 0,
	   Holiday_OT_Sec  numeric default 0,
	   Chk_By_Superior numeric default 0,
	   IO_Tran_Id	   numeric default 0, -- io_tran_id is used for is_cmp_purpose (t0150_emp_inout)
	   OUT_Time datetime,
	   Shift_End_Time datetime,			--Ankit 16112013
	   OT_End_Time numeric default 0,	--Ankit 16112013
	   Working_Hrs_St_Time tinyint default 0, --Hardik 14/02/2014
	   Working_Hrs_End_Time tinyint default 0, --Hardik 14/02/2014
	   GatePass_Deduct_Days numeric(18,2) default 0 -- Add by Gadriwala Muslim 05012014
	)    


	-------------- modify by jignesh patel 06-04-2022--------------
	---EXEC dbo.P_GET_EMP_INOUT @Cmp_ID, @From_Date, @To_Date
	 exec SP_CALCULATE_PRESENT_DAYS @Cmp_ID,@From_Date,@To_Date,@Branch_ID,@Cat_ID,@Grd_ID,@Type_ID,@Dept_ID,@Desig_ID,@Emp_ID,@constraint , 4 
	 ----------------end ----------------

	IF	EXISTS (SELECT * FROM [TEMPDB].DBO.SYSOBJECTS WHERE NAME LIKE '#ATT_MUSTER' )		
			BEGIN
				DROP TABLE #ATT_MUSTER
			END
		
	
	 CREATE TABLE #ATT_MUSTER 
	  (
			EMP_ID		NUMERIC , 
			CMP_ID		NUMERIC,
			FOR_DATE	DATETIME,
			LEAVE_COUNT	NUMERIC(5,1),
			WO_COHO		VARCHAR(4),
			STATUS_1_1	VARCHAR(22),
			STATUS_2_1	VARCHAR(22),
			STATUS_3_1	VARCHAR(22),
			STATUS_4_1	VARCHAR(22),
			SECOND_5_1  NUMERIC(18,0),
			STATUS_1_2	VARCHAR(22),
			STATUS_2_2	VARCHAR(22),
			STATUS_3_2	VARCHAR(22),
			STATUS_4_2	VARCHAR(22),
			SECOND_5_2  NUMERIC(18,0),
			STATUS_1_3	VARCHAR(22),
			STATUS_2_3	VARCHAR(22),
			STATUS_3_3	VARCHAR(22),
			STATUS_4_3	VARCHAR(22),
			SECOND_5_3  NUMERIC(18,0),
			STATUS_1_4	VARCHAR(22),
			STATUS_2_4	VARCHAR(22),
			STATUS_3_4	VARCHAR(22),
			STATUS_4_4	VARCHAR(22),
			SECOND_5_4  NUMERIC(18,0),
			STATUS_1_5	VARCHAR(22),
			STATUS_2_5	VARCHAR(22),
			STATUS_3_5	VARCHAR(22),
			STATUS_4_5	VARCHAR(22),
			SECOND_5_5  NUMERIC(18,0),
			STATUS_1_6	VARCHAR(22),
			STATUS_2_6	VARCHAR(22),
			STATUS_3_6	VARCHAR(22),
			STATUS_4_6	VARCHAR(22),
			SECOND_5_6  NUMERIC(18,0),
			STATUS_1_7	VARCHAR(22),
			STATUS_2_7	VARCHAR(22),
			STATUS_3_7	VARCHAR(22),
			STATUS_4_7	VARCHAR(22),
			SECOND_5_7  NUMERIC(18,0),
			STATUS_1_8	VARCHAR(22),
			STATUS_2_8	VARCHAR(22),
			STATUS_3_8	VARCHAR(22),
			STATUS_4_8	VARCHAR(22),
			SECOND_5_8  NUMERIC(18,0),
			STATUS_1_9	VARCHAR(22),
			STATUS_2_9	VARCHAR(22),
			STATUS_3_9	VARCHAR(22),
			STATUS_4_9	VARCHAR(22),
			SECOND_5_9  NUMERIC(18,0),
			STATUS_1_10	VARCHAR(22),
			STATUS_2_10	VARCHAR(22),
			STATUS_3_10	VARCHAR(22),
			STATUS_4_10	VARCHAR(22),
			SECOND_5_10  NUMERIC(18,0),
			STATUS_1_11	VARCHAR(22),
			STATUS_2_11	VARCHAR(22),
			STATUS_3_11	VARCHAR(22),
			STATUS_4_11	VARCHAR(22),
			SECOND_5_11  NUMERIC(18,0),
			STATUS_1_12	VARCHAR(22),
			STATUS_2_12	VARCHAR(22),
			STATUS_3_12	VARCHAR(22),
			STATUS_4_12	VARCHAR(22),
			SECOND_5_12  NUMERIC(18,0),
			STATUS_1_13	VARCHAR(22),
			STATUS_2_13	VARCHAR(22),
			STATUS_3_13	VARCHAR(22),
			STATUS_4_13	VARCHAR(22),
			SECOND_5_13  NUMERIC(18,0),
			STATUS_1_14	VARCHAR(22),
			STATUS_2_14	VARCHAR(22),
			STATUS_3_14	VARCHAR(22),
			STATUS_4_14	VARCHAR(22),
			SECOND_5_14  NUMERIC(18,0),
			STATUS_1_15	VARCHAR(22),
			STATUS_2_15	VARCHAR(22),
			STATUS_3_15	VARCHAR(22),
			STATUS_4_15	VARCHAR(22),
			SECOND_5_15  NUMERIC(18,0),
			STATUS_1_16	VARCHAR(22),
			STATUS_2_16	VARCHAR(22),
			STATUS_3_16	VARCHAR(22),
			STATUS_4_16	VARCHAR(22),
			SECOND_5_16  NUMERIC(18,0),
			STATUS_1_17	VARCHAR(22),
			STATUS_2_17	VARCHAR(22),
			STATUS_3_17	VARCHAR(22),
			STATUS_4_17	VARCHAR(22),
			SECOND_5_17  NUMERIC(18,0),
			STATUS_1_18	VARCHAR(22),
			STATUS_2_18	VARCHAR(22),
			STATUS_3_18	VARCHAR(22),
			STATUS_4_18	VARCHAR(22),
			SECOND_5_18  NUMERIC(18,0),
			STATUS_1_19	VARCHAR(22),
			STATUS_2_19	VARCHAR(22),
			STATUS_3_19	VARCHAR(22),
			STATUS_4_19	VARCHAR(22),
			SECOND_5_19  NUMERIC(18,0),
			STATUS_1_20	VARCHAR(22),
			STATUS_2_20	VARCHAR(22),
			STATUS_3_20	VARCHAR(22),
			STATUS_4_20	VARCHAR(22),
			SECOND_5_20  NUMERIC(18,0),
			STATUS_1_21	VARCHAR(22),
			STATUS_2_21	VARCHAR(22),
			STATUS_3_21	VARCHAR(22),
			STATUS_4_21	VARCHAR(22),
			SECOND_5_21  NUMERIC(18,0),
			STATUS_1_22	VARCHAR(22),
			STATUS_2_22	VARCHAR(22),
			STATUS_3_22	VARCHAR(22),
			STATUS_4_22	VARCHAR(22),
			SECOND_5_22  NUMERIC(18,0),
			STATUS_1_23	VARCHAR(22),
			STATUS_2_23	VARCHAR(22),
			STATUS_3_23	VARCHAR(22),
			STATUS_4_23	VARCHAR(22),
			SECOND_5_23  NUMERIC(18,0),
			STATUS_1_24	VARCHAR(22),
			STATUS_2_24	VARCHAR(22),
			STATUS_3_24	VARCHAR(22),
			STATUS_4_24	VARCHAR(22),
			SECOND_5_24  NUMERIC(18,0),
			STATUS_1_25	VARCHAR(22),
			STATUS_2_25	VARCHAR(22),
			STATUS_3_25	VARCHAR(22),
			STATUS_4_25	VARCHAR(22),
			SECOND_5_25  NUMERIC(18,0),
			STATUS_1_26	VARCHAR(22),
			STATUS_2_26	VARCHAR(22),
			STATUS_3_26	VARCHAR(22),
			STATUS_4_26	VARCHAR(22),
			SECOND_5_26  NUMERIC(18,0),
			STATUS_1_27	VARCHAR(22),
			STATUS_2_27	VARCHAR(22),
			STATUS_3_27	VARCHAR(22),
			STATUS_4_27	VARCHAR(22),
			SECOND_5_27  NUMERIC(18,0),
			STATUS_1_28	VARCHAR(22),
			STATUS_2_28	VARCHAR(22),
			STATUS_3_28	VARCHAR(22),
			STATUS_4_28	VARCHAR(22),
			SECOND_5_28  NUMERIC(18,0),
			STATUS_1_29	VARCHAR(22),
			STATUS_2_29	VARCHAR(22),
			STATUS_3_29	VARCHAR(22),
			STATUS_4_29	VARCHAR(22),
			SECOND_5_29  NUMERIC(18,0),
			STATUS_1_30	VARCHAR(22),
			STATUS_2_30	VARCHAR(22),
			STATUS_3_30	VARCHAR(22),
			STATUS_4_30	VARCHAR(22),
			SECOND_5_30  NUMERIC(18,0),
			STATUS_1_31	VARCHAR(22),
			STATUS_2_31	VARCHAR(22),
			STATUS_3_31	VARCHAR(22),
			STATUS_4_31	VARCHAR(22),
			SECOND_5_31  NUMERIC(18,0),
			TOTAL_DURATION VARCHAR(22)
	  )


	CREATE TABLE #EMP_HOLIDAY
	  (
			EMP_ID		NUMERIC , 
			CMP_ID		NUMERIC,
			FOR_DATE	DATETIME,
			H_DAY		NUMERIC(3,1),
			IS_HALF_DAY TINYINT
	  )	  

	CREATE TABLE #EMP_WEEKOFF
	  (
			EMP_ID		NUMERIC , 
			CMP_ID		NUMERIC,
			FOR_DATE	DATETIME,
			W_DAY		NUMERIC(3,1)
	  )	  
	  
	DECLARE @IS_CANCEL_HOLIDAY  NUMERIC(1,0)
	DECLARE @IS_CANCEL_WEEKOFF	NUMERIC(1,0)	
	DECLARE @STRHOLIDAY_DATE AS VARCHAR(MAX)
	DECLARE @STRWEEKOFF_DATE  VARCHAR(MAX)
	DECLARE @LEFT_DATE AS DATETIME 
	DECLARE @DEFAULTDATE AS DATETIME; -- DECLARED @TEMP FOR CASTING IT IN DATETIME
	SET @DEFAULTDATE = '1900-01-01';

	SET @STRHOLIDAY_DATE = ''      
	SET @STRWEEKOFF_DATE = ''



	INSERT INTO #ATT_MUSTER (EMP_ID,CMP_ID,FOR_DATE)
	SELECT 	EMP_ID ,@CMP_ID ,@FROM_DATE FROM #EMP_CONS

	--Added by Deepali-06132023-start	
	Declare @curRetDate as datetime
	set @curRetDate = @From_Date
	Declare @RET_DAYS as Int
	set @RET_DAYS =0
    --Added by Deepali-06132023-End 

	DECLARE @EMP_ID_CUR AS NUMERIC(18,0)
	SET @EMP_ID_CUR=0
	DECLARE ATT_CURSOR CURSOR FOR 
		SELECT A.EMP_ID,E.EMP_LEFT_DATE FROM #ATT_MUSTER A INNER JOIN T0080_EMP_MASTER E WITH (NOLOCK) ON E.EMP_ID=A.EMP_ID AND E.CMP_ID=A.CMP_ID
	--SELECT EMP_ID FROM #ATT_MUSTER 
	OPEN ATT_CURSOR
	FETCH NEXT FROM ATT_CURSOR INTO @EMP_ID_CUR,@LEFT_DATE
	WHILE @@FETCH_STATUS = 0
	BEGIN 
		
		SELECT @BRANCH_ID = I.BRANCH_ID FROM T0095_INCREMENT I WITH (NOLOCK) INNER JOIN 
							( SELECT MAX(INCREMENT_EFFECTIVE_DATE) AS FOR_DATE , EMP_ID FROM T0095_INCREMENT WITH (NOLOCK)
							WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE
							AND CMP_ID = @CMP_ID AND EMP_ID = @EMP_ID_CUR
							GROUP BY EMP_ID  ) QRY ON
							I.EMP_ID = QRY.EMP_ID	AND I.INCREMENT_EFFECTIVE_DATE = QRY.FOR_DATE
						WHERE QRY.EMP_ID = @EMP_ID_CUR

			SELECT @IS_CANCEL_HOLIDAY = ISNULL(IS_CANCEL_HOLIDAY,0)  ,@IS_CANCEL_WEEKOFF = ISNULL(IS_CANCEL_WEEKOFF,0)
			FROM DBO.T0040_GENERAL_SETTING WITH (NOLOCK) WHERE CMP_ID = @CMP_ID	AND BRANCH_ID = @BRANCH_ID
			AND FOR_DATE = ( SELECT MAX(FOR_DATE) FROM DBO.T0040_GENERAL_SETTING WITH (NOLOCK) WHERE FOR_DATE <=@TO_DATE AND BRANCH_ID = @BRANCH_ID AND CMP_ID = @CMP_ID)


			EXEC DBO.SP_EMP_WEEKOFF_DATE_GET @EMP_ID_CUR,@CMP_ID,@FROM_DATE,@TO_DATE,NULL,NULL,@IS_CANCEL_WEEKOFF,@STRHOLIDAY_DATE,@STRWEEKOFF_DATE OUTPUT,0,0,1       
			EXEC DBO.SP_EMP_HOLIDAY_DATE_GET @EMP_ID_CUR,@CMP_ID,@FROM_DATE,@TO_DATE,NULL,NULL,@IS_CANCEL_HOLIDAY,@STRHOLIDAY_DATE OUTPUT,0,0,1,@BRANCH_ID,@STRWEEKOFF_DATE  	 

		
		
	    DECLARE @TEMP_DATE DATETIME
		DECLARE @COUNT NUMERIC 
		DECLARE @OUTRUCHI AS DATETIME
		DECLARE @TMP_INTIME DATETIME
		DECLARE @TMP_OUTTIME DATETIME
		
		DECLARE @SHIFT_ST_TIME AS VARCHAR(10)      
		DECLARE @SHIFT_END_TIME AS VARCHAR(10)      
		DECLARE @SHIFT_ID AS NUMERIC
		DECLARE @SHIFT_DUR AS VARCHAR(10)
		DECLARE @SHIFT_END_DATETIME AS DATETIME      
		DECLARE @SHIFT_ST_DATETIME AS DATETIME			
		DECLARE @SHIFT_ST_SEC AS NUMERIC       
		DECLARE @SHIFT_EN_SEC AS NUMERIC    
		DECLARE @TEMP_DATE1 AS DATETIME 
		DECLARE @NIGHT_SHIFT AS TINYINT        
		
		DECLARE @STATUS_1 VARCHAR(100)
		DECLARE @STATUS_2 VARCHAR(100)
		DECLARE @STATUS_3 VARCHAR(100)
		DECLARE @STATUS_4 VARCHAR(100)
		DECLARE @STATUS_5 VARCHAR(100)
		DECLARE @STRQRY NVARCHAR(MAX)	
		
		DECLARE @EMP_JOINING_DATE AS DATETIME

		Declare @WorkingDuration as varchar(100) -------- jignesh patel 06-04-2022



		SET @NIGHT_SHIFT = 0
		
		SET @TEMP_DATE = @FROM_DATE 
		SET @COUNT = 1 
		WHILE @TEMP_DATE <=@TO_DATE 
			BEGIN			
								
				SET @STATUS_1 = 'STATUS_1_'+ CAST(@COUNT AS VARCHAR(2))
				SET @STATUS_2 = 'STATUS_2_'+ CAST(@COUNT AS VARCHAR(2)) 
				SET @STATUS_3 = 'STATUS_3_'+ CAST(@COUNT AS VARCHAR(2)) 
				SET @STATUS_4 = 'STATUS_4_'+ CAST(@COUNT AS VARCHAR(2)) 
				SET @STATUS_5 = 'SECOND_5_'+ CAST(@COUNT AS VARCHAR(2)) 
				
				--IF @NIGHT_SHIFT = 0 
				--	BEGIN
				SET @STRQRY = 'UPDATE	AM 
							   SET		' + @STATUS_1 + ' = DBO.F_RETURN_HHMM(IN_TIME),
										' + @STATUS_2 + ' = DBO.F_RETURN_HHMM(OUT_TIME)  
							   FROM		#ATT_MUSTER AM 
										INNER JOIN #DATA D ON AM.EMP_ID=D.EMP_ID 
							   WHERE	D.FOR_DATE=''' + CAST(@TEMP_DATE AS VARCHAR(11)) + ''' AND AM.EMP_ID = ' + CAST(@EMP_ID_CUR AS VARCHAR(11))
				--SELECT @STRQRY
				
				EXEC(@STRQRY);
				
				
				SELECT	@TMP_INTIME=IN_TIME, @OUTRUCHI= OUT_TIME
				,@WorkingDuration = isnull(Duration_in_sec,0)  ---------- Add by jigensh patel 06-04-2022
				FROM	#DATA
				WHERE	FOR_DATE=@TEMP_DATE AND EMP_ID=@EMP_ID_CUR 

				IF EXISTS (SELECT 1 FROM #EMP_WEEKOFF EW WHERE EW.EMP_ID = @EMP_ID_CUR AND EW.FOR_DATE = @TEMP_DATE AND W_DAY > 0)
					BEGIN
						SET @STRQRY =  'UPDATE	#ATT_MUSTER
										SET		WO_COHO = ''WO'', ' + @STATUS_3 + ' = ''WO'' 
										WHERE	EMP_ID = ' + CAST(@EMP_ID_CUR AS VARCHAR(10)) 
						
						EXEC (@STRQRY)
					END
				--- ADDED BY HARDIK 15/03/2012	
				-- CHANGED BY GADRIWALA MUSLIM 27082014 - START
				IF EXISTS (SELECT 1 FROM #EMP_HOLIDAY EH WHERE EH.EMP_ID = @EMP_ID_CUR AND EH.FOR_DATE = @TEMP_DATE AND ISNULL(EH.IS_HALF_DAY,0) = 0)
					BEGIN
						SET @STRQRY =  'UPDATE	#ATT_MUSTER
										SET		WO_COHO = ''HO'', ' + @STATUS_3 + ' = ''HO'' 
										WHERE	EMP_ID = ' + CAST(@EMP_ID_CUR AS VARCHAR(10)) 
						
						EXEC (@STRQRY)
					END
				IF EXISTS (SELECT 1 FROM #EMP_HOLIDAY EH WHERE EH.EMP_ID = @EMP_ID_CUR AND EH.FOR_DATE = @TEMP_DATE AND ISNULL(EH.IS_HALF_DAY,0) = 1)
					BEGIN
						SET @STRQRY =  'UPDATE	#ATT_MUSTER
										SET		WO_COHO = ''HHO'', ' + @STATUS_3 + ' = ''HHO'' 
										WHERE	EMP_ID = ' + CAST(@EMP_ID_CUR AS VARCHAR(10))
						
						EXEC (@STRQRY)
					END
				
				--CHANGED BY GADRIWALA MUSLIM 02102014
				SET @STRQRY = 'UPDATE #ATT_MUSTER
								SET ' + @STATUS_3 + ' = LEAVE_CODE,
								LEAVE_COUNT = ISNULL(LEAVE_USED,0) + ISNULL(COMPOFF_USED,0)
								FROM #ATT_MUSTER AM INNER JOIN T0140_LEAVE_TRANSACTION LT ON AM.EMP_ID = LT.EMP_ID INNER JOIN
								T0040_LEAVE_MASTER LM ON LT.LEAVE_ID = LM.LEAVE_ID 
								AND ''' + CAST(@TEMP_DATE AS VARCHAR(11)) + ''' = LT.FOR_DATE
								AND DAY(LT.FOR_DATE)=DAY(''' + CAST(@TEMP_DATE AS VARCHAR(11)) + ''') 
								WHERE (LT.LEAVE_USED  > 0 OR (LT.COMPOFF_USED - LT.LEAVE_ENCASH_DAYS)>0) AND AM.EMP_ID = ' + CAST(@EMP_ID_CUR AS VARCHAR(11))
								
				
				EXEC (@STRQRY);
				
					
				-- ADDED BY MIHIR A. 17052012
				IF @TMP_INTIME IS NOT NULL AND @OUTRUCHI IS NOT NULL 
				BEGIN

					-------------- Modify By Jigensh Patel 06-04-2022----------------
					--SET @STRQRY = 'UPDATE #ATT_MUSTER
					--				SET ' + @STATUS_5 + ' = ' + CAST(ISNULL(ROUND(DATEDIFF(SECOND,@TMP_INTIME,@OUTRUCHI),2),0) AS VARCHAR(16)) + '
					--				WHERE EMP_ID = ' + CAST(@EMP_ID_CUR AS VARCHAR(10))
					--EXEC (@STRQRY)
					Set @strQry = 'Update #Att_Muster
                                            set ' + @status_5 + ' = ' + @WorkingDuration + '
                                            where Emp_Id = ' + cast(@Emp_Id_Cur as varchar(10))
                       Exec (@strQry)
					-------------- End 06-04-2022----------------

					SET @STRQRY = 'UPDATE #ATT_MUSTER
									SET ' + @STATUS_4 + ' = DBO.F_RETURN_HOURS(' + @STATUS_5 + ') 
									WHERE EMP_ID = ' + CAST(@EMP_ID_CUR AS VARCHAR(10))
					EXEC (@STRQRY)
				END
			
				SET @strQry =  'UPDATE	#Att_Muster
								SET		WO_COHO = ''AB'', ' + @status_3 + ' = ''AB'' 
								WHERE	Emp_Id = ' + cast(@Emp_Id_Cur as varchar(10)) + '
										And isnull(' + @Status_1 + ','''') = '''' ' + ' And isnull(' + @Status_2 + ','''')= '''' 
										And isnull(' + @Status_3 + ','''') = '''' ' + ' And isnull(' + @Status_4 + ',''00:00'') = ''00:00''
										And isnull(' + @status_5 + ',''0'') = ''0'''
			
				EXEC (@STRQRY)	

-- added by Deepali -13062023

	declare @curCM_ID as Numeric
	Declare @curemp_id as Numeric
	Declare @curTempDate as datetime			

--select @Retain_Days_cnt = Tot_Retain_Days from T0100_EMP_RETAINTION_STATUS OA 
--where   OA.Emp_Id = (select emp_id from #Emp_Cons) 
--and OA.Cmp_Id= @CMP_ID and (select For_Date from #Att_Muster  where For_Date between @From_Date and @To_Date) between OA.Start_Date and OA.End_Date
--				print @Retain_Days_cnt

	Declare Curs_Retain cursor for	                  
	select emp_id,CMP_Id, For_Date from #Att_Muster  where For_Date between @From_Date and @To_Date	

	Open Curs_Retain
	Fetch next from Curs_Retain into @curemp_id,@curCM_ID, @curTempDate
	While @@fetch_status = 0                    
			Begin 		print @curRetDate
						if  (( select 1 from T0100_EMP_RETAINTION_STATUS OA where   OA.Emp_Id = @curemp_id and OA.Cmp_Id= @curCM_ID and @curRetDate between OA.Start_Date and OA.End_Date and OA.is_retain_On =0 )= 1)
						Begin 
							set @strQry =  'Update #Att_Muster
                            set  ' + @status_3 + ' = ''RT''                           
							Where For_Date = ''' + cast(@curTempDate as varchar(11)) + ''''
							Exec (@StrQry)
							 set @RET_DAYS= @RET_DAYS+1
							--print @StrQry					   
						End
					
			fetch next from Curs_Retain into @curemp_id,@curCM_ID, @curTempDate
			 set @curRetDate= DATEADD(day,1,@curRetDate )				
			
  
			end
	close Curs_Retain                    
	deallocate Curs_Retain

	 -- added by Deepali -13062023 -End 
				
				--Added By Jimit 30092019	
				SELECT	@EMP_JOINING_DATE = DATE_OF_JOIN 
				FROM	T0080_EMP_MASTER WITH (NOLOCK) 
				WHERE	EMP_ID = @Emp_Id_Cur
				
				IF (@EMP_JOINING_DATE >= @FROM_DATE AND @EMP_JOINING_DATE <= @TO_DATE)
					BEGIN
						
						
						SET @STRQRY = 'UPDATE	AM 
							   SET		' + @status_3 + ' = ''-'',
										WO_COHO = ''-''
							   FROM		#ATT_MUSTER AM 										
							   WHERE	FOR_DATE < ''' + CAST(@EMP_JOINING_DATE AS VARCHAR(11)) + ''' 
										AND AM.EMP_ID = ' + CAST(@EMP_ID_CUR AS VARCHAR(11))
				
						--SET @QUERY = 'UPDATE #Att_Muster Set WO_COHO = ''-'', ' + @COLS + ' WHERE Emp_ID=' + Cast(@Emp_Id_Cur As Varchar(10))	
						print @STRQRY
						EXECUTE(@STRQRY);
					END		
				--Ended

				
				SET @TMP_INTIME = NULL
				SET @TMP_OUTTIME = NULL
							
				SET @TEMP_DATE = DATEADD(D,1,@TEMP_DATE)
				
				SET @COUNT = @COUNT + 1  
			END
		FETCH NEXT FROM ATT_CURSOR INTO @EMP_ID_CUR,@LEFT_DATE
			print @RET_DAYS
	END
	CLOSE ATT_CURSOR
	DEALLOCATE ATT_CURSOR

	
	-- ADDED BY MIHIR A. 18/05/2012	
	DECLARE @EMP_ID_CUR_1 AS NUMERIC(18,0)
	SET @EMP_ID_CUR_1=0
	DECLARE ATT_CURSOR_DURATION CURSOR FOR SELECT EMP_ID FROM #ATT_MUSTER 
	OPEN ATT_CURSOR_DURATION
	FETCH NEXT FROM ATT_CURSOR_DURATION INTO @EMP_ID_CUR_1
	WHILE @@FETCH_STATUS = 0
	BEGIN 
	
		SELECT @TOTAL_SECOND = (ISNULL(SECOND_5_1,0) +ISNULL(SECOND_5_2,0) +ISNULL(SECOND_5_3,0) +ISNULL(SECOND_5_4,0) +ISNULL(SECOND_5_5,0) +ISNULL(SECOND_5_6,0) +ISNULL(SECOND_5_7,0) +ISNULL(SECOND_5_8,0) +ISNULL(SECOND_5_9,0) +ISNULL(SECOND_5_10,0) +ISNULL(SECOND_5_11,0) +ISNULL(SECOND_5_12,0) +ISNULL(SECOND_5_13,0) +ISNULL(SECOND_5_14,0) +ISNULL(SECOND_5_15,0) +ISNULL(SECOND_5_16,0) +ISNULL(SECOND_5_17,0) +ISNULL(SECOND_5_18,0) +ISNULL(SECOND_5_19,0) +ISNULL(SECOND_5_20,0) +ISNULL(SECOND_5_21,0) +ISNULL(SECOND_5_22,0) +ISNULL(SECOND_5_23,0) +ISNULL(SECOND_5_24,0) +ISNULL(SECOND_5_25,0) +ISNULL(SECOND_5_26,0) +ISNULL(SECOND_5_27,0) +ISNULL(SECOND_5_28,0) +ISNULL(SECOND_5_29,0) +ISNULL(SECOND_5_30,0) +ISNULL(SECOND_5_31,0)) FROM #ATT_MUSTER WHERE EMP_ID =@EMP_ID_CUR_1
		UPDATE #ATT_MUSTER
		SET TOTAL_DURATION = DBO.F_RETURN_HOURS(@TOTAL_SECOND)	 WHERE EMP_ID =@EMP_ID_CUR_1	
	
	FETCH NEXT FROM ATT_CURSOR_DURATION INTO @EMP_ID_CUR_1
	END
	CLOSE ATT_CURSOR_DURATION
	DEALLOCATE ATT_CURSOR_DURATION
	--END OF ADDED BY MIHIR A. 18/05/2012
	
	
	
	SELECT AM.* , E.EMP_CODE,E.EMP_FULL_NAME ,BRANCH_ADDRESS,COMP_NAME
		, BRANCH_NAME , DEPT_NAME ,GRD_NAME , DESIG_NAME
		,CMP_NAME,CMP_ADDRESS
		,@FROM_DATE AS P_FROM_DATE ,@TO_DATE AS P_TO_DATE , E.ALPHA_EMP_CODE + '-' + E.EMP_FULL_NAME AS 'EMP_CODE_NAME' --EMP_CODE_NAME ADDED BY MIHIR 07112011
		, E.ALPHA_EMP_CODE , E.EMP_FIRST_NAME,BM.BRANCH_ID,TM.TYPE_NAME,E.ENROLL_NO
		,DGM.DESIG_DIS_NO  --ADDED JIMIT 08092015
	FROM #ATT_MUSTER  AM 
		INNER JOIN T0080_EMP_MASTER E WITH (NOLOCK) ON AM.EMP_ID = E.EMP_ID AND AM.CMP_ID=E.CMP_ID
		INNER JOIN ( 
					SELECT	I.BRANCH_ID,I.GRD_ID,I.DEPT_ID,I.DESIG_ID,I.EMP_ID,I.TYPE_ID,I.CMP_ID 
					FROM	T0095_INCREMENT I WITH (NOLOCK)
					WHERE	I.INCREMENT_ID=(
												SELECT	TOP 1 INCREMENT_ID
												FROM	T0095_INCREMENT I2 WITH (NOLOCK)
												WHERE	I.CMP_ID=I2.CMP_ID AND I.EMP_ID=I2.EMP_ID
														AND I2.INCREMENT_EFFECTIVE_DATE <= @TO_DATE
												ORDER BY I2.INCREMENT_EFFECTIVE_DATE DESC, I2.INCREMENT_ID DESC
											) 										
					)Q_I ON E.EMP_ID = Q_I.EMP_ID AND E.CMP_ID=Q_I.CMP_ID 
		INNER JOIN T0040_GRADE_MASTER GM WITH (NOLOCK) ON Q_I.GRD_ID = GM.GRD_ID  AND Q_I.CMP_ID=GM.CMP_ID 
		INNER JOIN T0030_BRANCH_MASTER BM WITH (NOLOCK) ON Q_I.BRANCH_ID = BM.BRANCH_ID AND Q_I.CMP_ID=BM.CMP_ID 
		LEFT OUTER JOIN T0040_DEPARTMENT_MASTER DM WITH (NOLOCK) ON Q_I.DEPT_ID = DM.DEPT_ID AND Q_I.CMP_ID=DM.CMP_ID 
		LEFT OUTER JOIN T0040_DESIGNATION_MASTER DGM WITH (NOLOCK) ON Q_I.DESIG_ID = DGM.DESIG_ID AND Q_I.CMP_ID=DGM.CMP_ID 
		INNER JOIN T0010_COMPANY_MASTER CM WITH (NOLOCK) ON E.CMP_ID = CM.CMP_ID 
		LEFT OUTER JOIN T0040_TYPE_MASTER TM WITH (NOLOCK) ON Q_I.TYPE_ID = TM.TYPE_ID  AND Q_I.CMP_ID=TM.CMP_ID
	WHERE AM.CMP_ID=@CMP_ID
	--ORDER BY EMP_CODE,AM.FOR_DATE
	--ORDER BY RIGHT(REPLICATE(N' ', 500) + E.ALPHA_EMP_CODE, 500) --, AM.FOR_DATE
	ORDER BY CASE WHEN ISNUMERIC(ALPHA_EMP_CODE) = 1 THEN RIGHT(REPLICATE('0',21) + ALPHA_EMP_CODE, 20)
				WHEN ISNUMERIC(ALPHA_EMP_CODE) = 0 THEN LEFT(ALPHA_EMP_CODE + REPLICATE('',21), 20)
				ELSE ALPHA_EMP_CODE
			 END

	RETURN
