---01/2/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[SP_RPT_EMP_CANTEEN_MANAGMENT] 

 @CMP_ID   NUMERIC,      
 @FROM_DATE  DATETIME,      
 @TO_DATE  DATETIME ,      
 @BRANCH_ID  NUMERIC   ,      
 @CAT_ID   NUMERIC  ,      
 @GRD_ID   NUMERIC ,      
 @TYPE_ID  NUMERIC ,      
 @DEPT_ID  NUMERIC  ,      
 @DESIG_ID  NUMERIC ,      
 @EMP_ID   NUMERIC  ,      
 @CONSTRAINT  VARCHAR(MAX) = '',      
 @ORDER_BY	VARCHAR(30) = 'CODE',
 @SUMMARY VARCHAR(MAX)='',
 @CANTEEN_ID VARCHAR(MAX)='',
 @FORMAT  NUMERIC  = 0,
 @FLAG INT = 0


AS
BEGIN    

SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON	
    
	DECLARE @QRY NVARCHAR(MAX)
    SET @From_Date = CONVERT(DateTime,CONVERT(Char(10), @From_Date, 103), 103);
	SET @To_Date= CONVERT(DateTime,CONVERT(Char(10), @To_Date, 103) + ' 23:59:59', 103);
	  
  --  IF DATEDIFF(D,@FROM_DATE,@TO_DATE)>31 
  --BEGIN
  --	SET @TO_DATE=DATEADD(D,-1,DATEADD(MM,1,@FROM_DATE))				
--END	
				
	
	CREATE TABLE #EMP_CONS 
	(      
		EMP_ID NUMERIC ,     
		BRANCH_ID NUMERIC,
		INCREMENT_ID NUMERIC    
	);
	

	CREATE NONCLUSTERED INDEX IX_EMP_CONS_EMPID ON #EMP_CONS (EMP_ID);

	EXEC SP_RPT_FILL_EMP_CONS  @CMP_ID,@FROM_DATE,@TO_DATE,@BRANCH_ID,@CAT_ID,@GRD_ID,@TYPE_ID,@DEPT_ID,@DESIG_ID ,@EMP_ID ,@CONSTRAINT ,0 ,0 ,0,0,0,0,0,0,0,0,0,0
	
		
	
	---- TAKE CANTEEN ID BASED ON FILTER BY CANTEEN ID (@CANTEEN_ID) ADDED ON 21022019
	CREATE TABLE #CANTEEN_MASTER
    (
		TRAN_ID  INT,
		CANTEEN_ID Numeric(18,0)
	)
	
	IF ((@CANTEEN_ID <> '') and (@CANTEEN_ID <> '0'))
		BEGIN  
				INSERT INTO #CANTEEN_MASTER(TRAN_ID,CANTEEN_ID)
				Select	ROW_NUMBER() OVER(ORDER BY ID) AS TRAN_ID,Cast(Data As Numeric) ID 
						FROM dbo.Split(@CANTEEN_ID, '#') T 
						Where IsNumeric(Data) > 0  
		END
	ELSE 
		BEGIN
				INSERT INTO #CANTEEN_MASTER(TRAN_ID,CANTEEN_ID)
				Select	ROW_NUMBER() OVER(ORDER BY CNT_ID) AS TRAN_ID,CNT_ID
				FROM T0050_CANTEEN_MASTER WITH (NOLOCK)
				WHERE CMP_ID = @CMP_ID
		END
	
	
	---- END TAKE CANTEEN ID BASED ON FILTER BY CANTEEN ID (@CANTEEN_ID) ADDED ON 21022019
	
	CREATE TABLE #EMP_DATES
	(
		ROW_ID		NUMERIC,
		EMP_ID		NUMERIC,
		IP_ID		NVARCHAR(20)
	)
	
	CREATE TABLE #CANTEEN_CONSOLIDATE
	(
		--SR_NO NUMERIC(18,0),
		EMP_ID NUMERIC(18,0),
		--IO_DATETIME DATETIME,
		EMP_CODE NVARCHAR(50),
		EMP_NAME VARCHAR(100),
		DEPT_ID NUMERIC(18,0),
		DEPARTMENT_NAME VARCHAR(50),
		BUSINESS_SEGMENT VARCHAR(50),
		DIET VARCHAR(100),
		IP NVARCHAR(20),
		CANTEEN_ID  INT -- ADDED ON 25022019
		
	)
	
	CREATE TABLE #CANTEEN_ATT_CONS
	(
		EMP_ID NUMERIC(18,0),
		FOR_DATE DATETIME,
		IP_ID NVARCHAR(20),
		[STATUS] VARCHAR(5)
	)

	CREATE TABLE #CANTEEN_SUBSIDY
	(
		EMP_ID NUMERIC(18,0),
		IP NVARCHAR(20),
		TOTAL NUMERIC(18,0),
		EMPLOYEE_CONTRIBUTION NUMERIC(18,2),
		AMOUNT_OF_EMPLOYEES_CONTRIBUTION NUMERIC(18,2),
		SUBSIDY_BORN_BY_COMPANY NUMERIC(18,2),
		AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY NUMERIC(18,2),
		QUANTITY NUMERIC(18,0), -- ADDED ON 22022019
		TOTAL_AMOUNT NUMERIC(18,2),
		CANTEEN_ID INT
	)

	CREATE TABLE #TOTAL_PRESENT_ROW_WISE
	(
		--DEPT_ID NUMERIC(18,0),
		EMP_ID NUMERIC(18,0),
		IP NVARCHAR(20),
		TOTAL_PRESENT NUMERIC(18,0)
	)

	CREATE TABLE #CANTEEN_CONSOLIDATE1
	(	
		EMP_ID NUMERIC(18,0),
		EMP_CODE NVARCHAR(50),
		EMP_FULL_NAME VARCHAR(100),
		DEPT_NAME VARCHAR(50),
		SEGMENT_NAME VARCHAR(50),
		CNT_NAME VARCHAR(100),
		IP_ID NUMERIC(18,0)
	)
	
	------------------- ENROLL NO ADDED AND UPDATED ---------------
	--ALTER TABLE  #EMP_CONS ADD ENROLL_NO NUMERIC(18,0);
	--Alter Table  #Emp_Cons ADD grade Numeric(18,0);

	-- Commented by Deepal and change data type From Int to Varchar(Max) 11-03-2021
	ALTER TABLE  #EMP_CONS ADD ENROLL_NO varchar(Max);
	Alter Table  #Emp_Cons ADD grade Numeric(18,0);
	
	
		  
		UPDATE	#EMP_CONS 
		SET	--ENROLL_NO=E.ENROLL_NO,
			ENROLL_NO = CASE WHEN  isnull(e.old_ref_no,'') = '' THEN  cast(e.Enroll_No as varchar(50)) ELSE cast(e.Old_Ref_No as varchar(50)) END,
			grade = I.GRD_ID
		FROM T0080_EMP_MASTER E 
		INNER JOIN  T0095_INCREMENT I  ON E.EMP_ID = I.EMP_ID
		INNER JOIN     
		(
			SELECT MAX(INCREMENT_ID) AS INCREMENT_ID , EMP_ID 
			FROM T0095_INCREMENT WITH (NOLOCK)   
			WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @CMP_ID GROUP BY EMP_ID
		) QRY ON    
		I.EMP_ID = QRY.EMP_ID AND I.INCREMENT_ID = QRY.INCREMENT_ID 
		WHERE #EMP_CONS.EMP_ID=E.EMP_ID AND E.CMP_ID=@CMP_ID AND E.EMP_LEFT='N' 
	
	----------------------- END -----------------------------
	 
	
	--INSERT INTO #CANTEEN_CONSOLIDATE(SR_NO,EMP_ID,EMP_CODE,EMP_NAME,DEPARTMENT_NAME,BUSINESS_SEGMENT,DIET,IP)
	SELECT EM.EMP_ID,EM.EMP_CODE,EM.EMP_FULL_NAME,DM.DEPT_NAME,BS.SEGMENT_NAME,CM.CNT_NAME  AS DIET,CM.IP_ID
	INTO #GET_CANTEEN_EMPLOYEE
	FROM T0080_EMP_MASTER EM WITH (NOLOCK) INNER JOIN #EMP_CONS EC ON  EM.EMP_ID = EC.EMP_ID
	LEFT OUTER JOIN
				(
					SELECT	EMP_ID,I.CMP_ID,I.SEGMENT_ID,I.DEPT_ID
									FROM	T0095_INCREMENT I WITH (NOLOCK)
									WHERE	I.INCREMENT_ID =(
																SELECT	TOP 1 INCREMENT_ID
																FROM	T0095_INCREMENT I1 WITH (NOLOCK)
																WHERE	I1.EMP_ID=I.EMP_ID AND I1.CMP_ID=I.CMP_ID
																ORDER BY	INCREMENT_EFFECTIVE_DATE DESC, INCREMENT_ID DESC
															)
				) AS B ON B.EMP_ID = EM.EMP_ID AND B.CMP_ID=EM.CMP_ID
	 LEFT OUTER JOIN T0040_DEPARTMENT_MASTER DM WITH (NOLOCK) ON B.DEPT_ID = DM.DEPT_ID
	 LEFT OUTER JOIN T0040_BUSINESS_SEGMENT BS WITH (NOLOCK) ON B.SEGMENT_ID = BS.SEGMENT_ID
	 INNER JOIN T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON B.CMP_ID = CM.CMP_ID 
	 WHERE  EM.EMP_LEFT='N' AND CM.CMP_ID = @CMP_ID
	 GROUP BY EM.EMP_ID,EM.EMP_CODE,EM.EMP_FULL_NAME,DM.DEPT_NAME,BS.SEGMENT_NAME,CM.CNT_NAME,CM.IP_ID

		 
	

	IF EXISTS( SELECT 1 FROM #CANTEEN_MASTER )
		BEGIN

		
			-- CANTEEN PUNCH
			INSERT INTO #CANTEEN_CONSOLIDATE1(EMP_ID,EMP_CODE,EMP_FULL_NAME,DEPT_NAME,SEGMENT_NAME,CNT_NAME,IP_ID)
			SELECT EM.EMP_ID,EM.EMP_CODE,EM.EMP_FULL_NAME,CC.DEPT_NAME,CC.SEGMENT_NAME,CM.CNT_NAME,IP.IP_ID
			--INTO #CANTEEN_CONSOLIDATE1
			FROM T9999_DEVICE_INOUT_DETAIL CID WITH (NOLOCK)
			INNER JOIN T0040_IP_MASTER IP WITH (NOLOCK) ON CID.IP_ADDRESS=IP.IP_ADDRESS 
			--INNER JOIN T0080_EMP_MASTER EM ON EM.ENROLL_NO = CID.ENROLL_NO
			INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON (CASE WHEN  ISNULL(EM.OLD_REF_NO,'') = '' THEN CAST(EM.ENROLL_NO AS VARCHAR(15)) ELSE EM.OLD_REF_NO END) = CAST(CID.ENROLL_NO AS VARCHAR(15))
			INNER JOIN DBO.T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON CM.IP_ID = IP.IP_ID
			INNER JOIN #EMP_CONS EC ON EM.EMP_ID = EC.EMP_ID
			INNER JOIN #GET_CANTEEN_EMPLOYEE CC ON CC.EMP_ID = EC.EMP_ID
			INNER JOIN #CANTEEN_MASTER TCM ON CM.CNT_ID = TCM.CANTEEN_ID
			WHERE CID.IO_DATETIME BETWEEN @FROM_DATE AND @TO_DATE
			AND CONVERT(VARCHAR(5),CID.IO_DATETIME,108) BETWEEN CM.From_Time AND CM.To_Time
			AND (CID.In_Out_flag='10' OR CID.IP_Address='Canteen' OR IP.Device_No >= 200) and IP.Is_Canteen =1 AND IP.CMP_ID=@CMP_ID
			AND  EM.EMP_LEFT='N'  
			GROUP BY EM.EMP_ID,IP.IP_ID,CC.DEPT_NAME,EM.EMP_FULL_NAME,CC.SEGMENT_NAME,CM.CNT_NAME,EM.EMP_CODE
			

			--Select * from #GET_CANTEEN_EMPLOYEE
			--Select * from #CANTEEN_MASTER
			
			
			-- CANTEEN MOBILE - PUNCH 
			INSERT INTO #CANTEEN_CONSOLIDATE1(EMP_ID,EMP_CODE,EMP_FULL_NAME,DEPT_NAME,SEGMENT_NAME,CNT_NAME,IP_ID)
			SELECT 
			EM.EMP_ID,EM.EMP_CODE,EM.EMP_FULL_NAME,CC.DEPT_NAME,CC.SEGMENT_NAME,CM.CNT_NAME,IP.IP_ID
			FROM T0150_EMP_CANTEEN_PUNCH CID WITH (NOLOCK)
			INNER JOIN DBO.T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON CM.CNT_ID = CID.CANTEEN_ID
			INNER JOIN T0040_IP_MASTER IP WITH (NOLOCK) ON CM.IP_ID=IP.IP_ID 
			INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON EM.EMP_ID = CID.EMP_ID
			INNER JOIN #EMP_CONS EC ON EM.EMP_ID = EC.EMP_ID
			INNER JOIN #GET_CANTEEN_EMPLOYEE CC ON CC.EMP_ID = EC.EMP_ID
			INNER JOIN #CANTEEN_MASTER TCM ON CM.CNT_ID = TCM.CANTEEN_ID
			WHERE CID.CANTEEN_PUNCH_DATETIME BETWEEN @FROM_DATE AND @TO_DATE
			AND (CID.flag in ('Manually(Mobile)','Mobile') --and CID.Reason='Mobile' 
					OR IP.Device_No >= 200) and IP.Is_Canteen =1 AND IP.CMP_ID=@CMP_ID
			AND  EM.EMP_LEFT='N'  
			GROUP BY EM.EMP_ID,IP.IP_ID,CC.DEPT_NAME,EM.EMP_FULL_NAME,CC.SEGMENT_NAME,CM.CNT_NAME,EM.EMP_CODE

			
			
	
		END
	ELSE
		BEGIN
		
		
			INSERT INTO #CANTEEN_CONSOLIDATE1(EMP_ID,EMP_CODE,EMP_FULL_NAME,DEPT_NAME,SEGMENT_NAME,CNT_NAME,IP_ID)
			SELECT EM.EMP_ID,EM.EMP_CODE,EM.EMP_FULL_NAME,CC.DEPT_NAME,CC.SEGMENT_NAME,CM.CNT_NAME,IP.IP_ID
			FROM T9999_DEVICE_INOUT_DETAIL CID WITH (NOLOCK)
			INNER JOIN T0040_IP_MASTER IP WITH (NOLOCK) ON CID.IP_ADDRESS=IP.IP_ADDRESS 
			--INNER JOIN T0080_EMP_MASTER EM ON EM.ENROLL_NO = CID.ENROLL_NO
			INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON (CASE WHEN  isnull(EM.old_ref_no,'') = '' THEN EM.ENROLL_NO ELSE EM.Old_Ref_No END) = CID.ENROLL_NO
			INNER JOIN DBO.T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON CM.IP_ID = IP.IP_ID
			INNER JOIN #EMP_CONS EC ON EM.EMP_ID = EC.EMP_ID
			INNER JOIN #GET_CANTEEN_EMPLOYEE CC ON CC.EMP_ID = EC.EMP_ID
			WHERE CID.IO_DATETIME BETWEEN @FROM_DATE AND @TO_DATE
			AND CONVERT(VARCHAR(5),CID.IO_DATETIME,108) BETWEEN CM.From_Time AND CM.To_Time -- added on 05032019
			AND (CID.In_Out_flag='10' OR CID.IP_Address='Canteen' OR IP.Device_No >= 200) and IP.Is_Canteen =1 AND IP.CMP_ID=@CMP_ID
			AND EM.EMP_LEFT='N'  
			GROUP BY EM.EMP_ID,IP.IP_ID,CC.DEPT_NAME,EM.EMP_FULL_NAME,CC.SEGMENT_NAME,CM.CNT_NAME,EM.EMP_CODE
		
		END
	
	
	
	-- EMPLOYEE CANTEEN RECORDS GET
	INSERT INTO #CANTEEN_ATT_CONS(EMP_ID,FOR_DATE,[STATUS],IP_ID)
	SELECT EM.EMP_ID,CID.IO_DATETIME,'1',IP.IP_ID 
	FROM T9999_DEVICE_INOUT_DETAIL CID
	INNER JOIN T0040_IP_MASTER IP WITH (NOLOCK) ON CID.IP_ADDRESS=IP.IP_ADDRESS 
	--INNER JOIN T0080_EMP_MASTER EM ON EM.ENROLL_NO = CID.ENROLL_NO
	INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON (CASE WHEN  isnull(EM.old_ref_no,'') = '' THEN CAST(EM.ENROLL_NO AS VARCHAR(50)) ELSE EM.Old_Ref_No END) = CAST(CID.ENROLL_NO AS VARCHAR(50))
	--INNER JOIN T0080_EMP_MASTER EM ON (CASE WHEN  isnull(EM.old_ref_no,'') = '' THEN EM.ENROLL_NO ELSE EM.Old_Ref_No END) = CID.ENROLL_NO
	INNER JOIN DBO.T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON CM.IP_ID = IP.IP_ID -- added on 05032019
	INNER JOIN #EMP_CONS EC ON EM.EMP_ID = EC.EMP_ID 
	WHERE CID.IO_DATETIME BETWEEN @FROM_DATE AND @TO_DATE
	AND CONVERT(VARCHAR(5),CID.IO_DATETIME,108) BETWEEN CM.From_Time AND CM.To_Time -- added on 05032019
	AND (CID.In_Out_flag='10' OR CID.IP_Address='Canteen' OR IP.Device_No >= 200) and IP.Is_Canteen =1 AND IP.CMP_ID=@CMP_ID
	AND EM.EMP_LEFT='N' 

	
	--- EMPLOYEE MOBILE RECORDS GET	
	INSERT INTO #CANTEEN_ATT_CONS(EMP_ID,FOR_DATE,[STATUS],IP_ID)
	SELECT EM.EMP_ID,cast(CID.CANTEEN_PUNCH_DATETIME as date) AS IO_DATETIME,SUM(CID.QUANTITY),IP.IP_ID 
	FROM T0150_EMP_CANTEEN_PUNCH CID WITH (NOLOCK)
	INNER JOIN T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON CID.CANTEEN_ID=CM.CNT_ID 
	INNER JOIN T0040_IP_MASTER IP WITH (NOLOCK) ON CM.IP_ID=IP.IP_ID 
	INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON EM.EMP_ID = CID.EMP_ID
	INNER JOIN #EMP_CONS EC ON EM.EMP_ID = EC.EMP_ID 
	WHERE CID.CANTEEN_PUNCH_DATETIME BETWEEN @FROM_DATE AND @TO_DATE
	AND (CID.flag in ('Manually(Mobile)','Mobile') --OR CID.Reason='Mobile' 
	OR IP.Device_No >= 200) and IP.Is_Canteen =1 AND IP.CMP_ID=@CMP_ID
	AND EM.EMP_LEFT='N'
	GROUP BY cast(CID.CANTEEN_PUNCH_DATETIME as date),EM.EMP_ID,IP.IP_ID
	--- END		
	
	
	
	---- CANTEEN AMOUNT ----
	
	--SELECT	M.CMP_ID,GRD_ID,M.CNT_ID,IP_ID,
	--		AMOUNT,D.TOTAL_AMOUNT,D.SUBSIDY_AMOUNT,CAST(From_Time As DateTime) As From_Time, Cast(To_Time As DateTime) As To_Time
	--INTO	#CANTEEN
	--FROM	DBO.T0050_CANTEEN_MASTER M WITH (NOLOCK) INNER JOIN T0050_CANTEEN_DETAIL D WITH (NOLOCK) ON  M.CNT_ID=D.CNT_ID	AND M.CMP_ID=D.CMP_ID 
	--WHERE	D.EFFECTIVE_DATE <= @TO_DATE AND M.CMP_ID=@CMP_ID 

	--Deepal Commeted the above query and getting the max effective Date -- 03-02-2021
	SELECT	M.CMP_ID
			,GRD_ID
			,M.CNT_ID,IP_ID,
			AMOUNT,TOTAL_AMOUNT,SUBSIDY_AMOUNT
			,CAST(From_Time As DateTime) As From_Time, Cast(To_Time As DateTime) As To_Time
			INTO	#CANTEEN
	FROM	DBO.T0050_CANTEEN_MASTER M WITH (NOLOCK) 
						INNER JOIN (
							SELECT D.CMP_ID,D.CNT_ID,GRD_ID,AMOUNT,TOTAL_AMOUNT,SUBSIDY_AMOUNT,D.Effective_Date from T0050_CANTEEN_DETAIL
							D inner join 
										(Select Max(Effective_Date) as Effective_Date,CNT_ID,CMP_ID from 
										 T0050_CANTEEN_DETAIL WITH (NOLOCK) 
										 group by CNT_ID,CMP_ID
										 ) Qry on D.CNT_ID = Qry.CNT_ID AND D.CMP_ID = Qry.CMP_ID and D.Effective_Date = Qry.Effective_Date
						)  Qry1 on M.CNT_ID = Qry1.CNT_ID AND M.CMP_ID = Qry1.CMP_ID 
						
	--END Deepal Commeted the above query and getting the max effective Date -- 03-02-2021
	
	--AMOUNT AS EMPLOYEE_CONTRIBUTION,D.TOTAL_AMOUNT AS AMOUNT_OF_EMPLOYEES_CONTRIBUTION,D.SUBSIDY_AMOUNT AS AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0 AS TOTAL_AMOUNT
	
	
	
	SELECT	ROW_NUMBER() OVER(ORDER BY I.IO_TRAN_ID) AS ROWID,I.io_datetime,E.EMP_ID,T.CNT_ID,T.IP_ID,
	T.AMOUNT AS EMPLOYEE_CONTRIBUTION,TOTAL_AMOUNT AS AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUBSIDY_AMOUNT AS AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,
	0 AS TOTAL_AMOUNT
	INTO	#TEMP 
	FROM	DBO.T9999_DEVICE_INOUT_DETAIL I  WITH (NOLOCK)
			INNER JOIN	T0040_IP_MASTER IP WITH (NOLOCK) ON I.IP_ADDRESS=IP.IP_ADDRESS AND IP.CMP_ID=@CMP_ID
			INNER JOIN	#EMP_CONS E ON I.ENROLL_NO=E.ENROLL_NO 
			inner JOIN	#CANTEEN T ON E.GRADE = T.GRD_ID  AND IP.IP_ID = T.IP_ID
			INNER JOIN	#CANTEEN_MASTER TCM ON T.CNT_ID = TCM.CANTEEN_ID -- ADDED ON 21022019
			--LEFT JOIN	T0150_EMP_CANTEEN_PUNCH CCP ON T.CNT_ID = CCP.CANTEEN_ID   -- ADDED ON 21022019
	WHERE	(I.IN_OUT_FLAG='10' OR I.IP_ADDRESS='CANTEEN' OR IP.DEVICE_NO >= 200) 
			AND (I.IO_DATETIME BETWEEN @FROM_DATE AND @TO_DATE) AND IP.IS_CANTEEN =1 --and I.ENROLL_NO = 1001
			AND IP.CMP_ID=@CMP_ID
			AND  cast(I.IO_DateTime as time) >= cast(t.From_Time as time) and  cast(I.IO_DateTime as time) <= cast(t.To_Time as time)
			ORDER BY E.EMP_ID,I.IO_DATETIME 
	


	-- MOBILE CANTEEN
	SELECT	ROW_NUMBER() OVER(ORDER BY I.TRAN_ID) AS ROWID,I.CANTEEN_PUNCH_DATETIME AS IO_DATETIME,E.EMP_ID,T.CNT_ID,T.IP_ID,T.AMOUNT AS EMPLOYEE_CONTRIBUTION,(T.AMOUNT * ISNULL(I.QUANTITY,1)) AS AMOUNT_OF_EMPLOYEES_CONTRIBUTION,
			SUBSIDY_AMOUNT AS AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0 AS TOTAL_AMOUNT,I.QUANTITY,I.FLAG
	INTO	#MOBILE_CANTEEN
	FROM	DBO.T0150_EMP_CANTEEN_PUNCH I  WITH (NOLOCK)
			INNER JOIN	#EMP_CONS E ON I.EMP_ID=E.EMP_ID 
			INNER JOIN	#CANTEEN T ON E.GRADE = T.GRD_ID 
			INNER JOIN	#CANTEEN_MASTER TCM ON T.CNT_ID = TCM.CANTEEN_ID AND I.CANTEEN_ID = TCM.CANTEEN_ID
			WHERE		I.FLAG in ('Manually(Mobile)','Mobile') --AND I.REASON='Mobile' 
			AND I.CMP_ID=@CMP_ID AND 
						I.CANTEEN_PUNCH_DATETIME BETWEEN @FROM_DATE AND @TO_DATE
			GROUP BY	I.CANTEEN_PUNCH_DATETIME,E.EMP_ID,T.CNT_ID,T.IP_ID,T.AMOUNT,
						T.TOTAL_AMOUNT,I.QUANTITY,SUBSIDY_AMOUNT,FLAG,I.TRAN_ID
	   
	  
	 
	-- END	
	
	-- CANTEEN PUNCH
	INSERT INTO #CANTEEN_SUBSIDY(EMP_ID,IP,TOTAL,EMPLOYEE_CONTRIBUTION,AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUBSIDY_BORN_BY_COMPANY,AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,QUANTITY,TOTAL_AMOUNT,CANTEEN_ID)
	SELECT	T.EMP_ID,T.IP_ID,0,ISNULL(T.EMPLOYEE_CONTRIBUTION ,0),SUM(ISNULL(T.EMPLOYEE_CONTRIBUTION ,0)),
			ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0),SUM(ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0)),SUM(1),
			SUM( ISNULL(T.EMPLOYEE_CONTRIBUTION ,0) + ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0) )AS TOTAL_AMOUNT,T.Cnt_Id
			FROM #TEMP T GROUP BY T.EMP_ID,T.IP_ID,ISNULL(T.EMPLOYEE_CONTRIBUTION ,0),ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0),Cnt_Id
	
		
	
	-- MOBILE PUNCH
	INSERT INTO #CANTEEN_SUBSIDY(EMP_ID,IP,TOTAL,EMPLOYEE_CONTRIBUTION,AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUBSIDY_BORN_BY_COMPANY,AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,QUANTITY,TOTAL_AMOUNT,CANTEEN_ID)
	SELECT	T.EMP_ID,T.IP_ID,0,ISNULL(T.EMPLOYEE_CONTRIBUTION ,0),SUM(ISNULL(T.AMOUNT_OF_EMPLOYEES_CONTRIBUTION ,0)), -- SUM(ISNULL(T.EMPLOYEE_CONTRIBUTION ,0)) COMMENTED ON 22022019
			ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0),SUM(ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0)),
			--SUM( ISNULL(T.EMPLOYEE_CONTRIBUTION ,0) + ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0) )AS TOTAL_AMOUNT 
			SUM(T.QUANTITY),
			SUM( ISNULL(T.AMOUNT_OF_EMPLOYEES_CONTRIBUTION ,0) + ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0) )AS TOTAL_AMOUNT,T.Cnt_Id
			FROM #MOBILE_CANTEEN T GROUP BY T.EMP_ID,T.IP_ID,ISNULL(T.EMPLOYEE_CONTRIBUTION ,0),ISNULL(T.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0),T.Cnt_Id
	

	
	INSERT INTO #EMP_DATES (ROW_ID, EMP_ID,IP_ID)
	SELECT ROW_NUMBER() OVER(PARTITION BY EMP_ID ORDER BY EMP_ID) AS ROW_ID, EMP_ID,IP_ID
	FROM #CANTEEN_CONSOLIDATE1 GROUP BY EMP_ID,IP_ID

	

	DECLARE @EXISTS_COLS VARCHAR(MAX);
	set @EXISTS_COLS = ','
	DECLARE @TEMP_DATE DATETIME
	DECLARE @QUERY VARCHAR(MAX)	
	DECLARE @UPDATE_TEMPLATE NVARCHAR(1000)
	DECLARE @COL_NAME VARCHAR(32)
	DECLARE @STR_DATE VARCHAR(20)
	SET	@TEMP_DATE  = @FROM_DATE
	SET @QUERY = '';
	
	DECLARE @EMPLOYEE_PRESENT_COUNT AS NUMERIC(18,0)
		SET @EMPLOYEE_PRESENT_COUNT = 0
	
	DECLARE @COLCAPTION_NAME NVARCHAR(MAX)
		SET @COLCAPTION_NAME = ''
	
	DECLARE @ROW_WISETOTAL_COUNT NVARCHAR(MAX)
		SET @ROW_WISETOTAL_COUNT = ''
	
	
	WHILE (@TEMP_DATE  <= @TO_DATE)
		BEGIN
		
			SET @COL_NAME =  LEFT(DATENAME(WEEKDAY, @TEMP_DATE), 3) + '_' + CAST(DAY(@TEMP_DATE) AS VARCHAR(10))
			
			SET @TEMP_DATE = CONVERT(DateTime,CONVERT(Char(10), @TEMP_DATE, 103) + ' 23:59:59', 103);
			
			SET @UPDATE_TEMPLATE =	'UPDATE E SET [' + @COL_NAME + ']=A.STATUS
			    						FROM	#EMP_DATES E
												INNER JOIN #CANTEEN_ATT_CONS A ON E.EMP_ID=A.EMP_ID AND E.IP_ID=A.IP_ID --AND E.SHIFT_ID=A.SHIFT_ID
										WHERE	CONVERT(DATETIME,CONVERT(CHAR(10), A.FOR_DATE, 103) + '' 23:59:59'', 103) = @TEMP_DATE'
										--WHERE	A.FOR_DATE =@TEMP_DATE
			
		
										
			IF CHARINDEX(',' + @COL_NAME + ',', @EXISTS_COLS) = 0
				BEGIN 
				
					SET @QUERY = 'ALTER TABLE  #EMP_DATES ADD [' + @COL_NAME + '] VARCHAR(10) NULL; '
					EXEC (@QUERY)
				END
			
			SET @EXISTS_COLS = @EXISTS_COLS +@COL_NAME  + ','
			
			SET @STR_DATE =  CAST(@TEMP_DATE AS VARCHAR(20))	
			
			EXEC sp_executesql @UPDATE_TEMPLATE, N'@TEMP_DATE DATETIME', @TEMP_DATE
			
			/*To Provide 0 instead of Null*/
			--Set @COLCAPTION_NAME = @COLCAPTION_NAME + 'SUM(isnull(cast(' + @COL_NAME + ' as numeric),0)) ' + @COL_NAME  + ',' --- FOR COLUMN WISE TOTAL
			-- Change the  'Sum(cast(' + @COL_NAME + ' as numeric)) ' To Count deepal 03-02-2021
			Set @COLCAPTION_NAME = @COLCAPTION_NAME + 'count(cast(' + @COL_NAME + ' as numeric)) ' + @COL_NAME  + ',' --- FOR COLUMN WISE TOTAL
			
			/*To Provide Null instead of 0*/			
			Set @ROW_WISETOTAL_COUNT = @ROW_WISETOTAL_COUNT + 'SUM(isnull(cast(' + @COL_NAME + ' as numeric),0))  + ' --- FOR ROW WISE TOTAL
			
			
			SET @TEMP_DATE  = DATEADD(d, 1, @TEMP_DATE );
	
			
		END	
		
		-- CANTEEN PUNCH
		
		INSERT INTO #CANTEEN_CONSOLIDATE(EMP_ID,EMP_CODE,EMP_NAME,DEPT_ID,DEPARTMENT_NAME,BUSINESS_SEGMENT,DIET,IP,CANTEEN_ID)	
		SELECT A.EMP_ID,A.EMP_CODE,A.EMP_FULL_NAME,I.DEPT_ID,A.DEPT_NAME,A.SEGMENT_NAME,CM.CNT_NAME,B.IP_ID,CM.Cnt_Id
		FROM #CANTEEN_CONSOLIDATE1 A
		INNER JOIN T0040_IP_MASTER B WITH (NOLOCK) ON A.IP_ID = B.IP_ID
		INNER JOIN T0050_CANTEEN_MASTER CM WITH (NOLOCK) on B.IP_ID = CM.IP_ID 
		INNER JOIN #TEMP TMP ON CM.CNT_ID = TMP.CNT_ID AND B.IP_ID = TMP.IP_ID AND A.EMP_ID = TMP.EMP_ID AND CONVERT(VARCHAR(5),TMP.IO_DATETIME,108) BETWEEN CM.From_Time AND CM.To_Time -- added on 05032019
		-- Added on 20022019
		LEFT OUTER JOIN  (SELECT	I.Dept_ID,I.Emp_ID,I.Branch_ID,I.Segment_ID
								 FROM		dbo.T0095_INCREMENT AS i WITH (NOLOCK)
											INNER JOIN		(SELECT     MAX(I2.Increment_ID) AS Increment_ID, I2.Emp_ID
																FROM          dbo.T0095_INCREMENT AS I2 WITH (NOLOCK) INNER JOIN
																						   (SELECT     MAX(Increment_Effective_Date) AS INCREMENT_EFFECTIVE_DATE, Emp_ID
																							 FROM          dbo.T0095_INCREMENT AS I3 WITH (NOLOCK)
																							 WHERE      (Increment_Effective_Date <= GETDATE())
																							 GROUP BY Emp_ID) AS I3 ON I2.Increment_Effective_Date = I3.INCREMENT_EFFECTIVE_DATE AND I2.Emp_ID = I3.Emp_ID
																GROUP BY I2.Emp_ID) AS I2 ON i.Emp_ID = I2.Emp_ID AND i.Increment_ID = I2.Increment_ID 
								) I ON A.Emp_ID = i.Emp_ID 
		-- Added on 20022019
		WHERE  CM.CMP_ID=@CMP_ID
		GROUP BY A.EMP_ID,B.IP_ADDRESS,A.EMP_CODE,A.EMP_FULL_NAME,I.DEPT_ID,A.DEPT_NAME,A.SEGMENT_NAME,CM.CNT_NAME,B.IP_ID,cm.Cnt_Id
		
		
		-- CANTEEN MOBILE START
		INSERT INTO #CANTEEN_CONSOLIDATE(EMP_ID,EMP_CODE,EMP_NAME,DEPT_ID,DEPARTMENT_NAME,BUSINESS_SEGMENT,DIET,IP,CANTEEN_ID)
		SELECT A.EMP_ID,A.EMP_CODE,A.EMP_FULL_NAME,I.DEPT_ID,A.DEPT_NAME,A.SEGMENT_NAME,CM.CNT_NAME,B.IP_ID,CM.Cnt_Id
		FROM #CANTEEN_CONSOLIDATE1 A
		INNER JOIN T0040_IP_MASTER B WITH (NOLOCK) ON A.IP_ID = B.IP_ID
		INNER JOIN T0050_CANTEEN_MASTER CM WITH (NOLOCK) on B.IP_ID = CM.IP_ID 
		LEFT JOIN #MOBILE_CANTEEN MC ON CM.CNT_ID = MC.CNT_ID AND B.IP_ID = MC.IP_ID 
		LEFT OUTER JOIN  (SELECT	I.Dept_ID,I.Emp_ID,I.Branch_ID,I.Segment_ID
								 FROM		dbo.T0095_INCREMENT AS i WITH (NOLOCK)
											INNER JOIN		(SELECT     MAX(I2.Increment_ID) AS Increment_ID, I2.Emp_ID
																FROM          dbo.T0095_INCREMENT AS I2 WITH (NOLOCK) INNER JOIN
																						   (SELECT     MAX(Increment_Effective_Date) AS INCREMENT_EFFECTIVE_DATE, Emp_ID
																							 FROM          dbo.T0095_INCREMENT AS I3 WITH (NOLOCK)
																							 WHERE      (Increment_Effective_Date <= GETDATE())
																							 GROUP BY Emp_ID) AS I3 ON I2.Increment_Effective_Date = I3.INCREMENT_EFFECTIVE_DATE AND I2.Emp_ID = I3.Emp_ID
																GROUP BY I2.Emp_ID) AS I2 ON i.Emp_ID = I2.Emp_ID AND i.Increment_ID = I2.Increment_ID 
								) I ON A.Emp_ID = i.Emp_ID 
		WHERE MC.CNT_ID IN ( SELECT CANTEEN_ID AS CNT_ID FROM T0150_EMP_CANTEEN_PUNCH WITH (NOLOCK) WHERE Flag in ('Manually(Mobile)','Mobile') 
							and Reason='Mobile' )
		AND MC.CNT_ID NOT IN ( SELECT CANTEEN_ID FROM #CANTEEN_CONSOLIDATE )
		and CM.CMP_ID=@CMP_ID	
		GROUP BY A.EMP_ID,B.IP_ADDRESS,A.EMP_CODE,A.EMP_FULL_NAME,I.DEPT_ID,A.DEPT_NAME,A.SEGMENT_NAME,CM.CNT_NAME,B.IP_ID,cm.Cnt_Id
		-- CANTEEN MOBILE END
		


		SELECT CC.EMP_CODE,CC.EMP_NAME,CC.DEPARTMENT_NAME,CC.BUSINESS_SEGMENT,CC.DIET AS DIET,CC.IP,CC.CANTEEN_ID,ED.* 
		INTO #CANTEEN_FINAL_RECORDS
		FROM #EMP_DATES ED INNER JOIN #CANTEEN_CONSOLIDATE CC ON ED.EMP_ID=CC.EMP_ID AND ED.IP_ID=CC.IP --and ED.IPADDRESS = CC.IP_ID
		--WHERE ED.EMP_ID IN (14868) 
		
	    ALTER TABLE #CANTEEN_FINAL_RECORDS DROP COLUMN ROW_ID--,EMP_ID
	      	
		
	     
		-------- TOTAL PRESENT EMPLOYEE AND CANTEEN WISE (ROW TOTAL) WITH TOTAL HEAD COUNT - EMPLOYEE WISE ----------
		SET @QRY = 'SELECT EMP_ID,IP,(' + SUBSTRING(@ROW_WISETOTAL_COUNT,0,LEN(@ROW_WISETOTAL_COUNT)) + ') AS TOTAL_PRESENT FROM #CANTEEN_FINAL_RECORDS GROUP BY  EMP_ID,IP'
		INSERT INTO #TOTAL_PRESENT_ROW_WISE
		EXEC(@QRY)
		
		
		
		UPDATE	T	
		SET		T.TOTAL = B.TOTAL_PRESENT
		FROM	#CANTEEN_SUBSIDY T 
				INNER JOIN	(
								SELECT	B.EMP_ID,B.IP,B.TOTAL_PRESENT
								FROM	#TOTAL_PRESENT_ROW_WISE B
								
							) B ON T.EMP_ID=B.EMP_ID AND T.IP=B.IP
							
	
		SET @QRY = 'SELECT EMP_ID,'''' AS IP,SUM(TOTAL) AS TOTAL,0 AS EMPLOYEE_CONTRIBUTION,SUM(AMOUNT_OF_EMPLOYEES_CONTRIBUTION) AS AMOUNT_OF_EMPLOYEES_CONTRIBUTION,0 AS SUBSIDY_BORN_BY_COMPANY,
		SUM(AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY) AS AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT,SUM(QUANTITY),CANTEEN_ID FROM #CANTEEN_SUBSIDY GROUP BY  EMP_ID,CANTEEN_ID'
		INSERT INTO #CANTEEN_SUBSIDY
		EXEC(@QRY)
			
	
	
		--SET @QRY = 'SELECT EMP_CODE,'''' AS EMP_NAME,DEPARTMENT_NAME,'''' AS BUSINESS_SEGMENT,''TOTAL'' AS DIET,'''' AS IP,EMP_ID,'''' AS IP_ID,' + SUBSTRING(@COLCAPTION_NAME,0,LEN(@COLCAPTION_NAME)) + ' FROM #CANTEEN_FINAL_RECORDS GROUP BY  DEPARTMENT_NAME,EMP_CODE,EMP_ID'
		--INSERT INTO #CANTEEN_FINAL_RECORDS
		--EXEC(@QRY)
		
		
		SET @QRY = 'SELECT 9999 as EMP_CODE,'''' AS EMP_NAME,DEPARTMENT_NAME,'''' AS BUSINESS_SEGMENT,''TOTAL'' AS DIET,'''' AS IP,0 AS CANTEEN_ID,0 as EMP_ID,'''' AS IP_ID,' + SUBSTRING(@COLCAPTION_NAME,0,LEN(@COLCAPTION_NAME)) + ' FROM #CANTEEN_FINAL_RECORDS GROUP BY  DEPARTMENT_NAME'
		INSERT INTO #CANTEEN_FINAL_RECORDS
		EXEC(@QRY)
		

		SELECT CFR.*,TOTAL,EMPLOYEE_CONTRIBUTION,
		AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUBSIDY_BORN_BY_COMPANY,AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,QUANTITY,TOTAL_AMOUNT,TBM.BRANCH_NAME
		INTO #CANTEEN_REGISTER
		FROM #CANTEEN_FINAL_RECORDS CFR 
		LEFT JOIN #CANTEEN_SUBSIDY CS ON CFR.IP = CS.IP AND CFR.EMP_ID=CS.EMP_ID AND CFR.CANTEEN_ID = CS.CANTEEN_ID
		LEFT OUTER JOIN  (SELECT	I.Dept_ID,I.Emp_ID,I.Branch_ID,I.Segment_ID -- ADDED ON 04032019
								 FROM		dbo.T0095_INCREMENT AS i WITH (NOLOCK)
											INNER JOIN		(SELECT     MAX(I2.Increment_ID) AS Increment_ID, I2.Emp_ID
																FROM          dbo.T0095_INCREMENT AS I2 WITH (NOLOCK) INNER JOIN
																						   (SELECT     MAX(Increment_Effective_Date) AS INCREMENT_EFFECTIVE_DATE, Emp_ID
																							 FROM          dbo.T0095_INCREMENT AS I3 WITH (NOLOCK) 
																							 WHERE      (Increment_Effective_Date <= GETDATE())
																							 GROUP BY Emp_ID) AS I3 ON I2.Increment_Effective_Date = I3.INCREMENT_EFFECTIVE_DATE AND I2.Emp_ID = I3.Emp_ID
																GROUP BY I2.Emp_ID) AS I2 ON i.Emp_ID = I2.Emp_ID AND i.Increment_ID = I2.Increment_ID 
								) I ON CFR.Emp_ID = i.Emp_ID AND ISNULL(CFR.Emp_ID,0) <> 0
		LEFT JOIN T0030_BRANCH_MASTER TBM WITH (NOLOCK) ON TBM.BRANCH_ID = I.Branch_ID	-- ADDED ON 04032019		
		ORDER BY EMP_CODE,DIET,IP_ID
		
		
		-- Change Count(TOTAL) To Count below Query Deepal 03-02-2021
		INSERT INTO #CANTEEN_REGISTER(	DEPARTMENT_NAME,EMP_CODE,DIET,IP_ID,TOTAL,EMPLOYEE_CONTRIBUTION,
										AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUBSIDY_BORN_BY_COMPANY,AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,QUANTITY,
										TOTAL_AMOUNT)
		SELECT	'Z',99999999,'GRAND TOTAL',0,Count(TOTAL),SUM(EMPLOYEE_CONTRIBUTION),
				SUM(AMOUNT_OF_EMPLOYEES_CONTRIBUTION),SUM(SUBSIDY_BORN_BY_COMPANY),SUM(AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY),SUM(QUANTITY),
				SUM(TOTAL_AMOUNT) 
				FROM #CANTEEN_SUBSIDY WHERE ISNULL(IP,0) <> 0 -- condition commented on 21022019 ISNULL(IP,0) = 0	
		
		
	  
	    ALTER TABLE #CANTEEN_REGISTER DROP COLUMN IP--,SRNO
	    
		
		
		--SELECT (CASE WHEN CR.EMP_CODE = '99999999' THEN '99999999' ELSE ROW_NUMBER() OVER(ORDER BY (SELECT 1)) END) AS SRNO,ROW_NUMBER() OVER (PARTITION BY CR.EMP_ID ORDER BY CR.EMP_CODE,CR.DIET,CR.IP_ID DESC ) AS SR_NO_TEMP,CR.*,ISNULL(EM.EMP_FULL_NAME,'Device') AS Distributor_NAME 
		--INTO #CANTEEN_REGISTER_FINAL
		--FROM #CANTEEN_REGISTER CR 
		--LEFT JOIN T0150_EMP_CANTEEN_PUNCH ECP WITH (NOLOCK) ON CR.CANTEEN_ID =  ECP.CANTEEN_ID
		--LEFT JOIN T0011_LOGIN LM WITH (NOLOCK) ON ECP.USER_ID = LM.LOGIN_ID
		--LEFT JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON LM.EMP_ID = EM.EMP_ID
	 --   ORDER BY EMP_CODE,DIET,IP_ID desc

		SELECT distinct (CASE WHEN CR.EMP_CODE = '99999999' THEN '99999999' ELSE ROW_NUMBER() OVER(ORDER BY (SELECT 1)) END) 
		AS SRNO,ROW_NUMBER() OVER (PARTITION BY CR.EMP_ID ORDER BY CR.EMP_CODE,CR.DIET,CR.IP_ID DESC ) AS SR_NO_TEMP
		,CR.*,ISNULL(EM.EMP_FULL_NAME,'Device') AS Distributor_NAME 
		INTO #CANTEEN_REGISTER_FINAL
		FROM #CANTEEN_REGISTER CR 
		LEFT JOIN T0150_EMP_CANTEEN_PUNCH ECP ON CR.CANTEEN_ID =  ECP.CANTEEN_ID and cr.EMP_ID = ecp.Emp_ID 
		LEFT JOIN T0011_LOGIN LM ON ECP.USER_ID = LM.LOGIN_ID
		LEFT JOIN T0080_EMP_MASTER EM ON LM.EMP_ID = EM.EMP_ID
		WHERE CAST(ECP.Canteen_Punch_Datetime AS DATE) BETWEEN @FROM_DATE AND @TO_DATE
		or (CR.EMP_CODE = '99999999' and Cr.EMP_ID is null)
		ORDER BY EMP_CODE,DIET,IP_ID desc
		
		
	 --   UPDATE	T
		--SET		
		--		T.EMP_CODE = (CASE WHEN T.SR_NO_TEMP = 1 THEN T.EMP_CODE ELSE NULL END),
		--		T.EMP_NAME = (CASE WHEN T.SR_NO_TEMP = 1 THEN T.EMP_NAME ELSE NULL END),
		--		T.DEPARTMENT_NAME = (CASE WHEN T.SR_NO_TEMP = 1 THEN T.DEPARTMENT_NAME ELSE NULL END),
		--		T.BUSINESS_SEGMENT = (CASE WHEN T.SR_NO_TEMP = 1 THEN T.BUSINESS_SEGMENT ELSE NULL END)
		--FROM	#CANTEEN_REGISTER_FINAL T 
	 				
			 			
	    
	    ALTER TABLE #CANTEEN_REGISTER_FINAL DROP COLUMN SR_NO_TEMP,EMP_ID,IP_ID
	    
	    IF(ISNULL(@FORMAT,0) = 0)
			BEGIN
			
				--SELECT	SRNO,EMP_CODE,EMP_NAME,DEPARTMENT_NAME,BUSINESS_SEGMENT,DIET,EMPLOYEE_CONTRIBUTION,
				--		AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUBSIDY_BORN_BY_COMPANY,AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,TOTAL_AMOUNT
				--FROM	#CANTEEN_REGISTER_FINAL
				--ORDER BY SRNO	
			   
			   
				-- Change Sum(ISNULL(TOTAL,0)) To Count below Query Deepal 03-02-2021
				SELECT	ROW_NUMBER() OVER(ORDER BY DIET) AS SRNO,DIET,count(ISNULL(TOTAL,0)) AS QUANTITY,SUM(ISNULL(EMPLOYEE_CONTRIBUTION,0)) AS EMPLOYEE_CONTRIBUTION,
						SUM(ISNULL(AMOUNT_OF_EMPLOYEES_CONTRIBUTION,0)) AS AMOUNT_OF_EMPLOYEES_CONTRIBUTION,
						SUM(ISNULL(SUBSIDY_BORN_BY_COMPANY,0)) AS SUBSIDY_BORN_BY_COMPANY,
						SUM(ISNULL(AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,0)) AS AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,SUM(ISNULL(TOTAL_AMOUNT,0)) AS TOTAL_AMOUNT,
						CANTEEN_ID
				INTO	#CANTEEN_SUMMARY
				FROM	#CANTEEN_REGISTER_FINAL
				WHERE	DIET <> 'TOTAL'
				GROUP BY DIET,CANTEEN_ID
				ORDER BY DIET--SRNO	
				
				--UPDATE	T
				--SET		T.DEPARTMENT_NAME = ''
				--FROM	#CANTEEN_SUMMARY T 
				--WHERE	T.DEPARTMENT_NAME = 'Z'
				
				SELECT	SRNO,DIET,QUANTITY,EMPLOYEE_CONTRIBUTION,AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUBSIDY_BORN_BY_COMPANY,
						AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,TOTAL_AMOUNT,CANTEEN_ID,B.CANTEEN_IMAGE
				FROM	#CANTEEN_SUMMARY A
				LEFT JOIN T0050_CANTEEN_MASTER B WITH (NOLOCK) ON A.CANTEEN_ID = B.CNT_ID
				
				
				SELECT count(QUANTITY) AS QUANTITY,DISTRIBUTOR_NAME
				FROM #CANTEEN_REGISTER_FINAL
				WHERE DIET NOT IN ('TOTAL','GRAND TOTAL')
				GROUP BY DISTRIBUTOR_NAME
				
			END
		ELSE
			BEGIN

			
					SELECT	DEPARTMENT_NAME,SUM(EMPLOYEE_CONTRIBUTION) AS EMPLOYEE_CONTRIBUTION, 
							SUM(AMOUNT_OF_EMPLOYEES_CONTRIBUTION) AS AMOUNT_OF_EMPLOYEES_CONTRIBUTION,SUM(SUBSIDY_BORN_BY_COMPANY) AS SUBSIDY_BORN_BY_COMPANY,
							SUM(AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY) AS AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,count(TOTAL) AS TOTAL,SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT -- SUM(TOTAL) AS TOTAL ADDED ON 04032019
					INTO #DEPARTMENT_WISE_SUM
					FROM #CANTEEN_REGISTER_FINAL
					GROUP BY DEPARTMENT_NAME
					
					--UPDATE CRF
					--SET CRF.EMPLOYEE_CONTRIBUTION = DWS.EMPLOYEE_CONTRIBUTION,
					--	CRF.AMOUNT_OF_EMPLOYEES_CONTRIBUTION = DWS.AMOUNT_OF_EMPLOYEES_CONTRIBUTION,
					--	CRF.SUBSIDY_BORN_BY_COMPANY = DWS.SUBSIDY_BORN_BY_COMPANY,
					--	CRF.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY = DWS.AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,
					--	CRF.TOTAL_AMOUNT = DWS.TOTAL_AMOUNT,
					--	CRF.TOTAL =DWS.TOTAL -- ADDED ON 04032019
					--FROM #CANTEEN_REGISTER_FINAL CRF INNER JOIN #DEPARTMENT_WISE_SUM DWS ON CRF.DEPARTMENT_NAME = DWS.DEPARTMENT_NAME
					--WHERE CRF.EMP_CODE = 9999
					
					
					-- DETAIL RECORDS
					DECLARE @QUERYF VARCHAR(MAX)	
					SET @QUERYF = 'SELECT ROW_NUMBER() OVER (PARTITION BY EMP_NAME ORDER BY EMP_NAME) RowNumber,(EMP_CODE + '' - '' + EMP_NAME) as Emp_Full_Name,Diet,Distributor_Name,Total as Total_Quantity,' + SUBSTRING(@COLCAPTION_NAME,0,LEN(@COLCAPTION_NAME)) + '
					INTO ##CANTEEN_DETAIL_TABLE
					FROM #CANTEEN_REGISTER_FINAL
					WHERE DIET NOT IN  (''GRAND TOTAL'',''TOTAL'')
					GROUP BY EMP_CODE,EMP_NAME,DIET,TOTAL,Distributor_Name'
					EXEC(@QUERYF)
					
					
					UPDATE	T
					SET		T.EMP_FULL_NAME = (CASE WHEN T.ROWNUMBER = 1 THEN T.EMP_FULL_NAME ELSE NULL END)
					FROM	##CANTEEN_DETAIL_TABLE T 
					ALTER TABLE ##CANTEEN_DETAIL_TABLE DROP COLUMN ROWNUMBER
					SELECT * FROM ##CANTEEN_DETAIL_TABLE
					
					-- SUMMARY RECORDS
					DECLARE @QUERY_COUNT VARCHAR(MAX)	
					SET @QUERY_COUNT = 'SELECT DIET,TOTAL,
					AMOUNT_OF_EMPLOYEES_CONTRIBUTION,AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,TOTAL_AMOUNT
					FROM #CANTEEN_REGISTER_FINAL WHERE DIET = ''GRAND TOTAL''
					GROUP BY DIET,TOTAL,
					AMOUNT_OF_EMPLOYEES_CONTRIBUTION,AMOUNT_OF_SUBSIDY_BORN_BY_COMPANY,
					TOTAL_AMOUNT'
					EXEC(@QUERY_COUNT)
					
					
					DROP TABLE ##CANTEEN_DETAIL_TABLE
					
					
			END
			
			
			--SELECT * FROM #CANTEEN_REGISTER_FINAL COMMENTED ON 20022019
			--ORDER BY SRNO	
			
			
	    
END


