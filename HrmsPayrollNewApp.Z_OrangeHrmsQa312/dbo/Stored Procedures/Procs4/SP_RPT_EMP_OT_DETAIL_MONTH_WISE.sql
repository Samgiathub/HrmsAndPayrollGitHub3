
/*-Added by Sumit Overtime Register Date wise report---------------------------------------------------------------*/
---13/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[SP_RPT_EMP_OT_DETAIL_MONTH_WISE]      
 @Company_Id   NUMERIC,      
 @FROM_DATE  DATETIME,      
 @TO_DATE  DATETIME ,      
 @BRANCH_ID  NUMERIC   ,      
 @CAT_ID   NUMERIC  ,      
 @Grade_ID   NUMERIC ,     
 @TYPE_ID  NUMERIC ,      
 @DEPT_ID  NUMERIC  ,      
 @DESIG_ID  NUMERIC ,      
 @EMP_ID   NUMERIC  ,      
 @CONSTRAINT  VARCHAR(MAX) = '',      
 @PBRANCH_ID VARCHAR(200) = '0', 
 @SUMMARY VARCHAR(MAX)='',
 @flag NUMERIC = 0  --Mukti(28092017)
  ,@status NUMERIC = 0
 AS      
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON    
	

CREATE TABLE #EMP_CONS 
 (      
   EMP_ID NUMERIC ,     
   BRANCH_ID NUMERIC,
   INCREMENT_ID NUMERIC    
 )    
--CREATE NONCLUSTERED INDEX IX_EMP_CONS ON DBO.#EMP_CONS (EMP_ID) 

EXEC SP_RPT_FILL_EMP_CONS @Company_Id,@FROM_DATE,@TO_DATE,@BRANCH_ID,@CAT_ID,@Grade_ID,@TYPE_ID,@DEPT_ID,@DESIG_ID,@EMP_ID,@CONSTRAINT,0,0,0,0,0,0,0,0,0,0,0,0   


/* ------------- Comment By Jignsh Patel 01-10-2021--------------
DELETE EC
FROM #EMP_CONS EC
INNER JOIN T0095_INCREMENT I
ON EC.EMP_ID=I.Emp_ID
Where isnull(I.Emp_OT,0)=0
----------------------------END---------------------------*/



		CREATE TABLE #EMP_OT_DETAILS
		(
			EMP_ID NUMERIC(18,0),
			Emp_Code varchar(200),
			Emp_Full_Name varchar(200),
			Comp_Name varchar(200),	
			CMP_ID NUMERIC(18,0),
			TOTAL_HOUR NVARCHAR(100),
			BRANCH VARCHAR(200),
			DEPT VARCHAR(200),
			GRADE VARCHAR(200),
			CAT_NAME VARCHAR(200),
			DESIG_NAME VARCHAR(500), 
			TYPENAME VARCHAR(200), 
			VERTICAL_NAME VARCHAR(200),
			SUBVERTICAL_NAME VARCHAR(200),
			SUBBRANCH_NAME VARCHAR(200),
			SEGMENT_NAME VARCHAR(200)
		)
		CREATE CLUSTERED INDEX IX_EMP_OT_DETAILS_EMP_ID ON #EMP_OT_DETAILS(EMP_ID);
		
		CREATE TABLE #DATA         
			(         
			   EMP_ID   NUMERIC ,         
			   FOR_DATE DATETIME,        
			   DURATION_IN_SEC NUMERIC,        
			   SHIFT_ID NUMERIC ,        
			   SHIFT_TYPE NUMERIC ,        
			   EMP_OT  NUMERIC ,        
			   EMP_OT_MIN_LIMIT NUMERIC,        
			   EMP_OT_MAX_LIMIT NUMERIC,        
			   P_DAYS  NUMERIC(12,3) DEFAULT 0,        
			   OT_SEC  NUMERIC DEFAULT 0  ,
			   IN_TIME DATETIME,
			   SHIFT_START_TIME DATETIME,
			   OT_START_TIME NUMERIC DEFAULT 0,
			   SHIFT_CHANGE TINYINT DEFAULT 0,
			   FLAG INT DEFAULT 0,
			   WEEKOFF_OT_SEC  NUMERIC DEFAULT 0,
			   HOLIDAY_OT_SEC  NUMERIC DEFAULT 0,
			   CHK_BY_SUPERIOR NUMERIC DEFAULT 0,
			   IO_TRAN_ID	   NUMERIC DEFAULT 0,
			   OUT_TIME DATETIME,
			   SHIFT_END_TIME DATETIME,			
			   OT_END_TIME NUMERIC DEFAULT 0,	
			   WORKING_HRS_ST_TIME TINYINT DEFAULT 0,
			   WORKING_HRS_END_TIME TINYINT DEFAULT 0,
			   GATEPASS_DEDUCT_DAYS NUMERIC(18,2) DEFAULT 0 
		   )
		CREATE CLUSTERED INDEX IX_DATA_EMP_ID_FOR_DATE ON #DATA(EMP_ID,FOR_DATE);
		--Added by Mukti(28092017)start
		CREATE TABLE #EMP_OT_DETAILS_FOR_SAP
			(
			EMP_ID NUMERIC(18,0),
			Old_Ref_Code varchar(200),
			Subtype varchar(20),
			Comp_Name varchar(200),	
			CMP_ID NUMERIC(18,0),
			Overtime_date DATETIME,
			OT_Hors NUMERIC(18,2),
			Unit varchar(10),
			Emp_Code varchar(200),
			Emp_Full_Name varchar(200)
			)
		--Added by Mukti(28092017)end
		
	declare @temp_for_date as datetime
	set @temp_for_date=DATEADD(Month, -2, @FROM_DATE)
	
	--EXEC SP_CALCULATE_PRESENT_DAYS @CMP_ID=@Company_Id,@from_date=@FROM_DATE,@TO_DATE=@TO_DATE,@BRANCH_ID=@BRANCH_ID,@CAT_ID=@CAT_ID,@GRD_ID=@Grade_ID,@TYPE_ID=@TYPE_ID,@DEPT_ID=@DEPT_ID,@DESIG_ID=@DESIG_ID,@EMP_ID=@EMP_ID,@CONSTRAINT=@CONSTRAINT,@RETURN_RECORD_SET=7,@PBRANCH_ID=@PBRANCH_ID
	EXEC SP_CALCULATE_PRESENT_DAYS @CMP_ID=@Company_Id,@from_date=@FROM_DATE,@TO_DATE=@TO_DATE,@BRANCH_ID=@BRANCH_ID,@CAT_ID=@CAT_ID,@GRD_ID=@Grade_ID,@TYPE_ID=@TYPE_ID,@DEPT_ID=@DEPT_ID,@DESIG_ID=@DESIG_ID,@EMP_ID=@EMP_ID,@CONSTRAINT=@CONSTRAINT,@RETURN_RECORD_SET=4,@PBRANCH_ID=@PBRANCH_ID

	DECLARE @TEMP_MONTH_DATE AS DATETIME
	DECLARE @TEMP_END_DATE AS DATETIME
	DECLARE @EMP_OT AS VARCHAR(100)
	DECLARE @FOR_DATE AS DATETIME
	--DECLARE @SQLQUERY AS VARCHAR(MAX)
	DECLARE @SQLQUERY_2 AS VARCHAR(MAX)
	DECLARE @EMP_ID_CUR NUMERIC(18,0)
	DECLARE @OT_SEC AS NUMERIC(18,2)
	DECLARE @COLVALUES VARCHAR(MAX)

	DECLARE @BRANCH AS VARCHAR(500)
	DECLARE @DEPTNAME AS VARCHAR(200)
	DECLARE @DESIGNAME AS VARCHAR(200)
	DECLARE @GRADENAME AS VARCHAR(200)
	DECLARE @CATNAME AS VARCHAR(200)
	DECLARE @TYPENAME AS VARCHAR(200)
	DECLARE @VERTICALNAME AS VARCHAR(200)
	DECLARE @SUBBRANCH_NAME AS VARCHAR(200)
	DECLARE @SEGMENTNAME AS VARCHAR(200)
	DECLARE @SUBVERTICALNAME AS VARCHAR(200)
	declare @EmpName as varchar(200)
	declare @CompName as varchar(200)
	declare @EmpCode as varchar(200)
	declare @branchID as numeric(18,0)
	declare @Is_Auto_OT_Cal as tinyint=0
	DECLARE @Old_Ref_No as VARCHAR(200)

	SET @TEMP_MONTH_DATE = @FROM_DATE 
	SET @TEMP_END_DATE= @TO_DATE
	set @branchID=0
	--SET @SQLQUERY=''
	SET @SQLQUERY_2=''
	SET @EMP_OT=0
	SET @COLVALUES =N''

		DECLARE @UPDATECOLTITLE VARCHAR(8000)
		SET @UPDATECOLTITLE=''
		DECLARE @STRCOL AS VARCHAR(max)=''
		DECLARE @STRCOLSUM AS VARCHAR(MAX)=''
--select * from #DATA
--return
	if @flag=0  --Mukti(28092017)
		BEGIN		
			WHILE @TEMP_MONTH_DATE <= @TEMP_END_DATE
				BEGIN	
				SET @SQLQUERY_2='ALTER TABLE  #EMP_OT_DETAILS ADD [' + CAST(DAY(@TEMP_MONTH_DATE) AS VARCHAR(20))+ '] VARCHAR(20) DEFAULT NULL'
				
				SET @STRCOL = ISNULL(@STRCOL,'') + 'DBO.F_RETURN_SEC([' + CAST(DAY(@TEMP_MONTH_DATE) AS VARCHAR(20))+ '])+'
				
				set @StrColSum=ISNULL(@StrColSum,'') + 'DBO.F_RETURN_HOURS(sum(DBO.F_RETURN_SEC(ISNULL([' + CAST(DAY(@TEMP_MONTH_DATE) AS VARCHAR(20))+ '],0)))) as [' + CAST(DAY(@TEMP_MONTH_DATE) AS VARCHAR(20))+ '] ,' --ISNULL(@StrColSum,'') + 'DBO.F_RETURN_HOURS(sum(DBO.F_RETURN_SEC(ISNULL([' + CAST(DAY(@TEMP_MONTH_DATE) AS VARCHAR(20))+ '] ,0))))  as [' + CAST(DAY(@TEMP_MONTH_DATE) AS VARCHAR(20))+ '] +'
				
				SET @UPDATECOLTITLE  =  ISNULL(@UPDATECOLTITLE,'') + '#EMP_OT_DETAILS.[' + CAST(DAY(@TEMP_MONTH_DATE) AS VARCHAR(20))+ '] =A.[' + CAST(DAY(@TEMP_MONTH_DATE) AS VARCHAR(20))+ '] ,'
				
				EXEC(@SQLQUERY_2);
				
				SET @TEMP_MONTH_DATE = DATEADD(D,1,@TEMP_MONTH_DATE)
			END
			ALTER TABLE  #EMP_OT_DETAILS ADD [Branch_ID] Numeric(18,0) DEFAULT NULL
			ALTER TABLE  #EMP_OT_DETAILS ADD [TOTAL_HOURS] VARCHAR(20) DEFAULT NULL	
--------Code for last previous 2 months data-------------------------------------------------------------
--SET @SQLQUERY_2='ALTER TABLE  #EMP_OT_DETAILS ADD [' + CAST(left(datename(month,DATEADD(month, -1, @FROM_DATE)),3) AS VARCHAR(20))+ ' - '+ cast(right(datename(YEAR,DATEADD(year, -1, @FROM_DATE)),2) as varchar(50)) + '] VARCHAR(20) DEFAULT NULL'
--EXEC(@SQLQUERY_2);

--SET @SQLQUERY_2='ALTER TABLE  #EMP_OT_DETAILS ADD [' + CAST(left(datename(month,DATEADD(month, -1, @FROM_DATE)),3) AS VARCHAR(20))+ ' - '+ cast(right(datename(YEAR,DATEADD(year, -1, @FROM_DATE)),2) as varchar(50)) + '] VARCHAR(20) DEFAULT NULL'
--EXEC(@SQLQUERY_2);

----------------------------------------------
	
	DECLARE CUR_EMP CURSOR FOR
		SELECT E.EMP_ID,D.FOR_DATE,
		--DBO.F_RETURN_HOURS(D.OT_SEC) AS EMP_OT,
		case when isnull(D.OT_Sec,0)=0 and isnull(D.Holiday_OT_sec,0)=0 then DBO.F_RETURN_HOURS(D.Weekoff_OT_sec) when isnull(D.Weekoff_OT_sec,0)=0 and isnull(D.OT_Sec,0)=0 then 
		DBO.F_RETURN_HOURS(Holiday_OT_sec) else DBO.F_RETURN_HOURS(D.OT_SEC) End
		AS EMP_OT,
		BM.BRANCH_NAME
		,DM.DEPT_NAME,DSM.DESIG_NAME,GM.GRD_NAME,CM.CAT_NAME,TM.TYPE_NAME
		,VS.VERTICAL_NAME,SB.SUBBRANCH_NAME,BS.SEGMENT_NAME,SV.SUBVERTICAL_NAME
		,E.Emp_Full_Name,CMM.Cmp_Name,'="' + E.Alpha_Emp_Code + '"'
		,INC_QRY.Branch_ID		
		FROM DBO.T0080_EMP_MASTER E WITH (NOLOCK) INNER JOIN #EMP_CONS EC ON E.EMP_ID = EC.EMP_ID 
		INNER JOIN #DATA D ON D.EMP_ID=E.EMP_ID --AND D.CMP_ID=E.CMP_ID
		inner Join
		--INNER JOIN T0095_INCREMENT I ON EC.INCREMENT_ID=I.INCREMENT_ID and EC.Emp_ID=I.Emp_ID
		
		(SELECT I.EMP_ID,I.DESIG_ID,I.BRANCH_ID,I.DEPT_ID,I.Grd_ID,I.Cat_ID,I.Type_ID,
					I.Vertical_ID,I.Subvertical_ID,I.Segment_ID,I.Subbranch_ID,I.Emp_WeekDay_OT_Rate
					,I.Cmp_ID
						 FROM T0095_INCREMENT I WITH (NOLOCK) INNER JOIN 
							(SELECT MAX(INCREMENT_ID) AS INCREMENT_ID , EMP_ID 
							 FROM T0095_INCREMENT WITH (NOLOCK)  
							 WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @Company_ID
							 GROUP BY EMP_ID  ) QRY ON
						I.EMP_ID = QRY.EMP_ID	AND I.INCREMENT_ID = QRY.INCREMENT_ID )INC_QRY ON 
				EC.EMP_ID = INC_QRY.EMP_ID
		INNER JOIN T0030_BRANCH_MASTER AS BM WITH (NOLOCK) ON INC_QRY.BRANCH_ID = BM.BRANCH_ID AND E.CMP_ID = BM.CMP_ID
		LEFT JOIN T0040_DEPARTMENT_MASTER DM WITH (NOLOCK) ON DM.DEPT_ID=INC_QRY.DEPT_ID
		LEFT JOIN T0040_GRADE_MASTER GM WITH (NOLOCK) ON GM.GRD_ID=INC_QRY.GRD_ID
		LEFT JOIN T0030_CATEGORY_MASTER CM WITH (NOLOCK) ON CM.CAT_ID=INC_QRY.CAT_ID
		LEFT JOIN T0040_DESIGNATION_MASTER DSM WITH (NOLOCK) ON DSM.DESIG_ID=INC_QRY.DESIG_ID
		LEFT JOIN T0040_TYPE_MASTER TM WITH (NOLOCK) ON TM.TYPE_ID=INC_QRY.TYPE_ID 
		LEFT JOIN T0040_VERTICAL_SEGMENT VS WITH (NOLOCK) ON VS.VERTICAL_ID=INC_QRY.VERTICAL_ID
		LEFT JOIN T0050_SUBVERTICAL SV WITH (NOLOCK) ON SV.SUBVERTICAL_ID=INC_QRY.SUBVERTICAL_ID
		LEFT JOIN T0040_BUSINESS_SEGMENT BS WITH (NOLOCK) ON BS.SEGMENT_ID=INC_QRY.SEGMENT_ID
		LEFT JOIN T0050_SUBBRANCH SB WITH (NOLOCK) ON SB.SUBBRANCH_ID=INC_QRY.SUBBRANCH_ID
		left join T0010_Company_Master CMM WITH (NOLOCK) on CMM.Cmp_ID=INC_QRY.Cmp_ID
		WHERE E.CMP_ID=@Company_Id AND (D.OT_SEC > 0 or D.Weekoff_OT_Sec>0 or D.Holiday_Ot_sec>0)
		and INC_QRY.Emp_WeekDay_OT_Rate > 0
		and D.for_date between @from_date and @to_date
		--and I.Emp_WeekDay_OT_Rate >0

				OPEN CUR_EMP
					FETCH NEXT FROM CUR_EMP INTO @EMP_ID_CUR,@FOR_DATE,@EMP_OT,@BRANCH,@DEPTNAME,@DESIGNAME,@GRADENAME,@CATNAME
																			,@TYPENAME,@VERTICALNAME,@SUBBRANCH_NAME,@SEGMENTNAME
																			,@SUBVERTICALNAME,@EmpName,@CompName,@EmpCode,@branchID

					WHILE @@FETCH_STATUS=0
						BEGIN
						
						select @Is_Auto_OT_Cal= isnull(Is_OT_Auto_Calc,0) from T0040_GENERAL_SETTING WITH (NOLOCK)
							where Cmp_ID=@Company_Id and Branch_ID=@branchID
							and For_Date = (select MAX(for_date) from T0040_GENERAL_SETTING WITH (NOLOCK)
								where Branch_ID=@branchID and Cmp_ID=@Company_Id)
						
						if (@Is_Auto_OT_Cal=0)
							Begin
								set @EMP_OT=Null;
							End
							
						if Exists(select 1 from T0160_OT_APPROVAL WITH (NOLOCK) where Emp_ID=@EMP_ID_CUR and Cmp_ID=@Company_Id and For_Date=@FOR_DATE And Is_Approved =1)
							Begin
								select @EMP_OT= case when isnull(Approved_OT_Sec,0)=0 and isnull(Approved_HO_OT_Sec,0)=0 then DBO.F_RETURN_HOURS(Approved_WO_OT_sec) when isnull(Approved_WO_OT_sec,0)=0 and isnull(Approved_OT_Sec,0)=0 then 
													DBO.F_RETURN_HOURS(Approved_HO_OT_Sec) else DBO.F_RETURN_HOURS(Approved_OT_Sec) End
													from T0160_OT_APPROVAL WITH (NOLOCK)  where For_Date=@FOR_DATE and Emp_ID=@EMP_ID_CUR and Cmp_ID=@Company_Id
							End
							
						IF NOT EXISTS(SELECT EMP_ID FROM #EMP_OT_DETAILS WHERE EMP_ID=@EMP_ID_CUR)
						BEGIN
						INSERT INTO #EMP_OT_DETAILS (EMP_ID,CMP_ID,BRANCH,DEPT,DESIG_NAME,TYPENAME,VERTICAL_NAME,SUBVERTICAL_NAME,
														SUBBRANCH_NAME,SEGMENT_NAME,GRADE,CAT_NAME,Emp_Full_Name,Comp_Name,Emp_Code,Branch_ID)
						--,DEPT,GRADE,CAT_NAME,DESIG_NAME,TYPENAME,VERTICAL_NAME,SUBVERTICAL_NAME,SUBBRANCH_NAME)
								VALUES(@EMP_ID_CUR,@Company_Id,@BRANCH,@DEPTNAME,@DESIGNAME,@TYPENAME,@VERTICALNAME,@SUBVERTICALNAME,
														@SUBBRANCH_NAME,@SEGMENTNAME,@GRADENAME,@CATNAME,@EmpName,@CompName,@EmpCode,@branchID)	
						END		
							--SET @EMP_OT='-' + @EMP_OT;
							SET @SQLQUERY_2='UPDATE #EMP_OT_DETAILS SET [' + CAST(DAY(@FOR_DATE) AS VARCHAR(20))+ '] =''' + @EMP_OT  + ''' WHERE EMP_ID='+ CAST(@EMP_ID_CUR AS VARCHAR(100)) +' '--AND  ' + CAST( DAY(@FOR_DATE) AS VARCHAR(50)) + '= ' + CAST(DAY(@FOR_DATE) AS VARCHAR(50))
							EXEC (@SQLQUERY_2);
							
							--SET @SQLQUERY_2='SELECT month(d.FOR_DATE),D.OT_Sec from #Data D where Emp_ID='+ CAST(@Emp_ID_Cur as varchar(100)) +'
							--				and month(d.FOR_DATE)=Month(DATEADD(MONTH,-1,'''+ CAST(@FROM_DATE as varchar(100))+'''))'
											--@OT_SEC=
							
							--EXEC (@SQLQUERY_2);
							--print @SQLQUERY_2
									
							--select @OT_SEC							
					
						SET @EMP_OT='00:00';
						SET @SQLQUERY_2='';
						
						FETCH NEXT FROM CUR_EMP INTO @EMP_ID_CUR,@FOR_DATE,@EMP_OT,@BRANCH,@DEPTNAME,@DESIGNAME,@GRADENAME,@CATNAME
																			,@TYPENAME,@VERTICALNAME,@SUBBRANCH_NAME,@SEGMENTNAME
																			,@SUBVERTICALNAME,@EmpName,@CompName,@EmpCode,@branchID
						END
					CLOSE CUR_EMP
					DEALLOCATE CUR_EMP


IF OBJECT_ID('tempdb..#TMPDATA') IS NOT NULL 
Begin
	DROP TABLE #TMPDATA
End
		DECLARE @SQLQUERY_3 AS VARCHAR(max)
		SET @SQLQUERY_2 = 'UPDATE #EMP_OT_DETAILS SET TOTAL_HOUR= ISNULL(TOTAL_HOUR,0) + '+ @STRCOL +'0' 
		EXEC(@SQLQUERY_2)

		SET @SQLQUERY_2='INSERT INTO #EMP_OT_DETAILS(EMP_ID) VALUES(9999999)'
		EXEC(@SQLQUERY_2)
		
		
		SET @STRCOLSUM = @STRCOLSUM + '0 AS DUMMY'; 
		
		

		SET @SQLQUERY_2 ='SELECT '+ @STRCOLSUM +'  
		INTO #TMPDATA  FROM #EMP_OT_DETAILS'
		
		
		
		--SET @SQLQUERY_3 ='  UPDATE #EMP_OT_DETAILS SET #EMP_OT_DETAILS.[1] = A.[1] FROM #TMPDATA  AS A WHERE EMP_ID = 9999999'
		SET @SQLQUERY_3 =' UPDATE #EMP_OT_DETAILS SET TOTAL_HOURS= DBO.F_RETURN_HOURS(TOTAL_HOUR)     ; UPDATE #EMP_OT_DETAILS SET '+ SUBSTRING(@UPDATECOLTITLE,1,LEN(@UPDATECOLTITLE)-1) + ',#EMP_OT_DETAILS.TOTAL_HOURS=(SELECT DBO.F_RETURN_HOURS(SUM(CAST(TOTAL_HOUR AS NUMERIC(18,0)))) FROM #EMP_OT_DETAILS) FROM #TMPDATA  AS A WHERE EMP_ID = 9999999'
		--print @SQLQUERY_2
		
		--select @SQLQUERY_2,@SQLQUERY_3

		EXEC (@SQLQUERY_2+@SQLQUERY_3);	

		UPDATE  #EMP_OT_DETAILS
		SET		Emp_Full_Name = 'Total'
		WHERE   EMP_ID = 9999999
		--print 'sdp_1'
		--SET @SQLQUERY_2='insert into #EMP_OT_DETAILS(Emp_ID) values(9999999)'
		--EXEC(@SQLQUERY_2);
		
----Code for Group Wise OT-----------------------------------------------------------------------------------------------------		

--set @SQLQUERY_2='''="' +''
--set @SQLQUERY_3='+'' + '"'

SELECT @COLVALUES +=
				CASE SYSTEM_TYPE_ID WHEN 167 THEN
						',case when DBO.F_RETURN_HOURS( SUM(CAST(DBO.F_RETURN_SEC(ISNULL(' + QUOTENAME(NAME) + ',0)) AS NUMERIC(18,2))))=''00:00'' then ''''
						Else DBO.F_RETURN_HOURS( SUM(CAST(DBO.F_RETURN_SEC(ISNULL(' + QUOTENAME(NAME) + ',0)) AS NUMERIC(18,2))))
						End AS [' + NAME + ']'
				ELSE
						'0, AS ''0'''
				END
	FROM TEMPDB.SYS.COLUMNS
				WHERE
					OBJECT_ID =OBJECT_ID('TEMPDB..#EMP_OT_DETAILS')
					AND NAME NOT LIKE '%[^0-9]%'

if @SUMMARY='-1'
	BEGIN	
	SELECT  DISTINCT *,'="' + TOTAL_HOURS + '"' AS TOTAL_OT_HOURS
	FROM	#EMP_OT_DETAILS
	where (TOTAL_HOURS <> '00:00') --or TOTAL_HOURS is not null)
	
	return	
	End
Else if @SUMMARY='0' --For Branch Wise Summary
		BEGIN	
			SET @SQLQUERY_2 = ' SELECT BRANCH AS BRANCH_NAME ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY BRANCH'			
			
		END 
Else if @SUMMARY='1' -- For Grade Wise Summary
		Begin	
			SET @SQLQUERY_2 = ' SELECT GRADE AS Grade_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY GRADE'
		End
Else if @SUMMARY='2' -- For Category Wise Summary
		Begin	
			SET @SQLQUERY_2 = ' SELECT CAT_NAME AS Category_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY CAT_NAME'
		End		
Else if @SUMMARY='3' -- For Dept Wise Summary
		Begin	
			SET @SQLQUERY_2 = ' SELECT Dept AS Department_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY Dept'
		End
Else if @SUMMARY='4' -- For Designation Wise Summary
		Begin	
			SET @SQLQUERY_2 = ' SELECT DESIG_NAME AS Designation_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY DESIG_NAME'
		End		
Else if @SUMMARY='5' -- For Type Wise Summary
		Begin	
			SET @SQLQUERY_2 = ' SELECT TYPENAME AS Type_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY TYPENAME'
		End
Else if @SUMMARY='6' -- For Vertical Wise Summary
		Begin	
			SET @SQLQUERY_2 = ' SELECT VERTICAL_NAME AS Vertical_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY VERTICAL_NAME'
		End		
Else if @SUMMARY='7' -- For Sub Vertical Wise Summary
		Begin	
			SET @SQLQUERY_2 = ' SELECT SUBVERTICAL_NAME AS Sub_Vertical_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY SUBVERTICAL_NAME'
		End	
Else if @SUMMARY='8' -- For Sub Branch Wise Summary
		Begin	
			SET @SQLQUERY_2 = ' SELECT SUBBRANCH_NAME AS Sub_Branch_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY SUBBRANCH_NAME'
		End
Else if @SUMMARY='9' -- For Business Segment Wise Summary
		Begin	
			SET @SQLQUERY_2 = ' SELECT SEGMENT_NAME AS Business_Segment ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY SEGMENT_NAME'
		End
					
EXEC(@SQLQUERY_2);
END
else 
--Added by Mukti(28092017)start for SAP
	BEGIN
		DECLARE CUR_EMP_SAP CURSOR FOR
			SELECT E.EMP_ID,'="' + E.Alpha_Emp_Code + '"',E.Emp_Full_Name,CMM.Cmp_Name,D.FOR_DATE,
			case when isnull(D.OT_Sec,0)=0 and isnull(D.Holiday_OT_sec,0)=0 then DBO.F_RETURN_HOURS(D.Weekoff_OT_sec) when isnull(D.Weekoff_OT_sec,0)=0 and isnull(D.OT_Sec,0)=0 then 
			DBO.F_RETURN_HOURS(Holiday_OT_sec) else DBO.F_RETURN_HOURS(D.OT_SEC) End
			AS EMP_OT,INC_QRY.Branch_ID,e.Old_Ref_No --,ISNULL(D.CHK_BY_SUPERIOR,0) as CHK_BY_SUPERIOR		
			FROM DBO.T0080_EMP_MASTER E WITH (NOLOCK) INNER JOIN #EMP_CONS EC ON E.EMP_ID = EC.EMP_ID 
			INNER JOIN #DATA D ON D.EMP_ID=E.EMP_ID AND ISNULL(D.CHK_BY_SUPERIOR,0) <> 1
			inner Join
			(SELECT I.EMP_ID,I.DESIG_ID,I.BRANCH_ID,I.DEPT_ID,I.Grd_ID,I.Cat_ID,I.Type_ID,
						I.Vertical_ID,I.Subvertical_ID,I.Segment_ID,I.Subbranch_ID,I.Emp_WeekDay_OT_Rate
						,I.Cmp_ID
							 FROM T0095_INCREMENT I WITH (NOLOCK) INNER JOIN 
								(SELECT MAX(INCREMENT_ID) AS INCREMENT_ID , EMP_ID 
								 FROM T0095_INCREMENT WITH (NOLOCK) 
								 WHERE INCREMENT_EFFECTIVE_DATE <= @TO_DATE AND CMP_ID = @Company_ID
								 GROUP BY EMP_ID  ) QRY ON
							I.EMP_ID = QRY.EMP_ID	AND I.INCREMENT_ID = QRY.INCREMENT_ID )INC_QRY ON 
					EC.EMP_ID = INC_QRY.EMP_ID		
			left join T0010_Company_Master CMM WITH (NOLOCK) on CMM.Cmp_ID=INC_QRY.Cmp_ID
			WHERE E.CMP_ID=@Company_Id AND (D.OT_SEC > 0 or D.Weekoff_OT_Sec>0 or D.Holiday_Ot_sec>0)
			and INC_QRY.Emp_WeekDay_OT_Rate > 0
			and D.for_date between @from_date and @to_date
		OPEN CUR_EMP_SAP
					FETCH NEXT FROM CUR_EMP_SAP INTO @EMP_ID_CUR,@EmpCode,@EmpName,@CompName,@FOR_DATE,@EMP_OT,@branchID,@Old_Ref_No
					WHILE @@FETCH_STATUS=0
						BEGIN	
								
						select @Is_Auto_OT_Cal= isnull(Is_OT_Auto_Calc,0) from T0040_GENERAL_SETTING WITH (NOLOCK)
							where Cmp_ID=@Company_Id and Branch_ID=@branchID
							and For_Date = (select MAX(for_date) from T0040_GENERAL_SETTING WITH (NOLOCK)
								where Branch_ID=@branchID and Cmp_ID=@Company_Id)
						
						if (@Is_Auto_OT_Cal=0)
							Begin
								set @EMP_OT=Null;
							End
						if Exists(select 1 from T0160_OT_APPROVAL WITH (NOLOCK) where Emp_ID=@EMP_ID_CUR and Cmp_ID=@Company_Id and For_Date=@FOR_DATE)
							Begin
								select @EMP_OT= case when isnull(Approved_OT_Sec,0)=0 and isnull(Approved_HO_OT_Sec,0)=0 then DBO.F_RETURN_HOURS(Approved_WO_OT_sec) when isnull(Approved_WO_OT_sec,0)=0 and isnull(Approved_OT_Sec,0)=0 then 
													DBO.F_RETURN_HOURS(Approved_HO_OT_Sec) else DBO.F_RETURN_HOURS(Approved_OT_Sec) End
													from T0160_OT_APPROVAL WITH (NOLOCK) where For_Date=@FOR_DATE and Emp_ID=@EMP_ID_CUR and Cmp_ID=@Company_Id
							End
							print @EMP_OT
						declare @EMP_OT_HOURS as numeric(18,2)
						set @EMP_OT_HOURS = dbo.F_Return_Sec(@EMP_OT) / 3600
						print dbo.F_Return_Sec(@EMP_OT)
						print @EMP_OT_HOURS
						if @EMP_OT_HOURS > 0
						BEGIN
							INSERT INTO #EMP_OT_DETAILS_FOR_SAP (EMP_ID,Old_Ref_Code,Subtype,Comp_Name,CMP_ID,Overtime_date,OT_Hors,Unit,Emp_Code,Emp_Full_Name)
							VALUES(@EMP_ID_CUR,@Old_Ref_No,'1121',@CompName,@Company_Id,@FOR_DATE,@EMP_OT_HOURS,'Hours',@EmpCode,@EmpName)	
						END
						
						FETCH NEXT FROM CUR_EMP_SAP INTO @EMP_ID_CUR,@EmpCode,@EmpName,@CompName,@FOR_DATE,@EMP_OT,@branchID,@Old_Ref_No
						END
				CLOSE CUR_EMP_SAP
				DEALLOCATE CUR_EMP_SAP
				
				select Old_Ref_Code as [Old_Ref_Code],Subtype,convert(varchar(10),Overtime_date,103) as[Date_of_Origin],OT_Hors as[No_Of_Hours],Unit,Emp_Code as [Emploee_Code],Emp_Full_Name as [Emploee_Name]
				from #EMP_OT_DETAILS_FOR_SAP
		END
--Added by Mukti(28092017)end for SAP
RETURN



--IF @SUMMARY='-1'
--	BEGIN
	
--	--SELECT 	@COLVALUES += 
--	--	CASE SYSTEM_TYPE_ID WHEN 167 THEN 
--	--	',case when DBO.F_RETURN_HOURS( SUM(CAST(DBO.F_RETURN_SEC(ISNULL(' + QUOTENAME(NAME) + ',0)) AS NUMERIC(18,2))))=''00:00'' then ''''
--	--			Else '+replace(@SQLQUERY_2,'select','')+' + DBO.F_RETURN_HOURS( SUM(CAST(DBO.F_RETURN_SEC(ISNULL(' + QUOTENAME(NAME) + ',0)) AS NUMERIC(18,2)))) '+ @SQLQUERY_3 +'
--	--			End AS [' + NAME + ']'
--	--	ELSE
--	--	'0, AS ''0''' 
--	--	END	
--	--	FROM TEMPDB.SYS.COLUMNS
--	--	WHERE
--	--	OBJECT_ID =OBJECT_ID('TEMPDB..#EMP_OT_DETAILS')	
--	--	AND NAME NOT LIKE '%[^0-9]%'
	
--	SELECT @COLVALUES +=
--				CASE SYSTEM_TYPE_ID WHEN 167 THEN
--						',case when DBO.F_RETURN_HOURS( SUM(CAST(DBO.F_RETURN_SEC(ISNULL(' + QUOTENAME(NAME) + ',0)) AS NUMERIC(18,2))))=''00:00'' then ''''
--						Else DBO.F_RETURN_HOURS( SUM(CAST(DBO.F_RETURN_SEC(ISNULL(' + QUOTENAME(NAME) + ',0)) AS NUMERIC(18,2))))
--						End AS [' + NAME + ']'
--				ELSE
--						'0, AS ''0'''
--				END
--	FROM TEMPDB.SYS.COLUMNS
--				WHERE
--					OBJECT_ID =OBJECT_ID('TEMPDB..#EMP_OT_DETAILS')
--					AND NAME NOT LIKE '%[^0-9]%'
	

	
--	IF @SUMMARY='0' --For Branch Wise Summary
--		BEGIN	
--			SET @SQLQUERY_2 = ' SELECT BRANCH AS BRANCH_NAME ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY BRANCH'			
--			print @SQLQUERY_2
--		END
--	Else if @SUMMARY='1' -- For Grade Wise Summary
--		Begin	
--			SET @SQLQUERY_2 = ' SELECT GRADE AS Grade_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY GRADE'
--		End	
--	Else if @SUMMARY='2' -- For Category Wise Summary
--		Begin	
--			SET @SQLQUERY_2 = ' SELECT CAT_NAME AS Category_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY CAT_NAME'
--		End		
--	Else if @SUMMARY='3' -- For Dept Wise Summary
--		Begin	
--			SET @SQLQUERY_2 = ' SELECT Dept AS Department_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY Dept'
--		End
--	Else if @SUMMARY='4' -- For Designation Wise Summary
--		Begin	
--			SET @SQLQUERY_2 = ' SELECT DESIG_NAME AS Designation_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY DESIG_NAME'
--		End		
--	Else if @SUMMARY='5' -- For Type Wise Summary
--		Begin	
--			SET @SQLQUERY_2 = ' SELECT TYPENAME AS Type_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY TYPENAME'
--		End
--	Else if @SUMMARY='6' -- For Vertical Wise Summary
--		Begin	
--			SET @SQLQUERY_2 = ' SELECT VERTICAL_NAME AS Vertical_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY VERTICAL_NAME'
--		End		
--	Else if @SUMMARY='7' -- For Sub Vertical Wise Summary
--		Begin	
--			SET @SQLQUERY_2 = ' SELECT SUBVERTICAL_NAME AS Sub_Vertical_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY SUBVERTICAL_NAME'
--		End	
--	Else if @SUMMARY='8' -- For Sub Branch Wise Summary
--		Begin	
--			SET @SQLQUERY_2 = ' SELECT SUBBRANCH_NAME AS Sub_Branch_Name ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY SUBBRANCH_NAME'
--		End
--	Else if @SUMMARY='9' -- For Business Segment Wise Summary
--		Begin	
--			SET @SQLQUERY_2 = ' SELECT SEGMENT_NAME AS Business_Segment ' + CAST(@COLVALUES AS VARCHAR(MAX)) + ',DBO.F_RETURN_HOURS(SUM (CAST(ISNULL(TOTAL_HOUR,0)AS NUMERIC(18,2)) )) AS TOTAL_OT_HOURS FROM #EMP_OT_DETAILS where Emp_ID <>9999999 GROUP BY SEGMENT_NAME'
--		End									
--	--Print @SQLQUERY_2
--	EXEC(@SQLQUERY_2)
--	END
	
--ELSE
--	BEGIN
--		SELECT  DISTINCT *,
--		'="' + TOTAL_HOURS + '"' 
--		AS TOTAL_OT_HOURS
--		FROM #EMP_OT_DETAILS
		
--	END	
	
	
--SELECT * FROM TEMPDB.SYS.COLUMNS WHERE OBJECT_ID =
--OBJECT_ID('TEMPDB..#EMP_OT_DETAILS')
--AND NAME NOT LIKE '%[^0-9]%'




