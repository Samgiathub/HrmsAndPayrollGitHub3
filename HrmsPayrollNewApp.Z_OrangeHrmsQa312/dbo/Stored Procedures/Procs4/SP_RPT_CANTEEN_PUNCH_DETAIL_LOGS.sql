
---21/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[SP_RPT_CANTEEN_PUNCH_DETAIL_LOGS]
	@Cmp_ID			NUMERIC(18,0)	
	,@From_Date		DATETIME
	,@To_Date		DATETIME	
	,@Branch_ID		VARCHAR(MAX) = ''
	,@Cat_ID		VARCHAR(MAX) = ''
	,@Grd_ID		VARCHAR(MAX) = ''
	,@Type_ID		VARCHAR(MAX) = ''
	,@Dept_ID		VARCHAR(MAX) = ''
	,@Desig_ID		VARCHAR(MAX) = ''
	,@Emp_ID		NUMERIC  = 0
	,@Constraint	VARCHAR(MAX)	= ''
	,@Salary_Cycle_id	NUMERIC		= NULL
	,@Segment_Id	VARCHAR(MAX)		= ''	
	,@Vertical_Id	VARCHAR(MAX)		= ''	 
	,@SubVertical_Id	VARCHAR(MAX)	= ''	
	,@SubBranch_Id	VARCHAR(MAX)		= ''
	,@CanteenDetail VARCHAR(MAX)	= ''
	,@DeviceIPs		VARCHAR(MAX)	= ''
AS

SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON


BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.

    SET @From_Date = CONVERT(DATETIME,CONVERT(CHAR(10), @From_Date, 103), 103);
	SET @To_Date= CONVERT(DATETIME,CONVERT(CHAR(10), @To_Date, 103) + ' 23:59:59', 103);
	
	CREATE TABLE #Emp_Cons 
	(      
		Emp_ID NUMERIC ,     
		Branch_ID NUMERIC,
		Increment_ID NUMERIC    
	) 
	
	INSERT INTO #Emp_Cons
	SELECT EM.EMP_ID,B.BRANCH_ID,B.INCREMENT_ID
	FROM T0080_EMP_MASTER EM WITH (NOLOCK)
	LEFT OUTER JOIN
				(
					SELECT	EMP_ID,I.CMP_ID,I.INCREMENT_ID,I.Branch_ID
									FROM	T0095_INCREMENT I WITH (NOLOCK)
									WHERE	I.INCREMENT_ID =(
																SELECT	TOP 1 INCREMENT_ID
																FROM	T0095_INCREMENT I1 WITH (NOLOCK)
																WHERE	I1.EMP_ID=I.EMP_ID AND I1.CMP_ID=I.CMP_ID
																ORDER BY	INCREMENT_EFFECTIVE_DATE DESC, INCREMENT_ID DESC
															)
				) AS B ON B.EMP_ID = EM.EMP_ID AND B.CMP_ID=EM.CMP_ID
	 WHERE  EM.EMP_LEFT='N'
	 
	--EXEC dbo.SP_RPT_FILL_EMP_CONS_MULTIDROPDOWN @Cmp_ID,@From_Date,@To_Date,@Branch_ID,@Cat_ID,@Grd_ID,@Type_ID,@Dept_ID,@Desig_ID,@Emp_ID,@Constraint,0,@Salary_Cycle_id,@Segment_Id,@Vertical_Id,@SubVertical_Id,@SubBranch_Id,0,1,0,'0',0,0    
	
		
		SELECT		T.TRANSACTIONID,T.CMP_NAME,T.CMP_ADDRESS,@FROM_DATE AS FROM_DATE , @TO_DATE AS TO_DATE,
					T.EMP_FULL_NAME,CANTEEN_PUNCH_DATETIME,T.CNT_NAME,HOUR,TOTAL,[STATUS]
		FROM 
		(
					SELECT		CMP.CMP_NAME,CMP.CMP_ADDRESS,@FROM_DATE AS FROM_DATE , @TO_DATE AS TO_DATE,
								TEM.EMP_FULL_NAME,CAST(CANTEEN_PUNCH_DATETIME AS DATE) AS CANTEEN_PUNCH_DATETIME
								,CM.CNT_NAME,
								CAST(DATEPART(HOUR, ECP.SYSTEM_DATE) AS VARCHAR) + ':00' AS 'HOUR',
								(convert(varchar, CAST(CANTEEN_PUNCH_DATETIME AS DATE), 112) + '' + CAST(ISNULL(ECP.CANTEEN_TRANSACTIONID,0) AS VARCHAR(50))) as TRANSACTIONID,
								SUM(ECP.QUANTITY) AS TOTAL,'SYNC SUCCESSFULLY' AS [STATUS]
					FROM		T0150_EMP_CANTEEN_PUNCH ECP WITH (NOLOCK) INNER JOIN T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON ECP.CANTEEN_ID = CM.CNT_ID
								INNER JOIN #Emp_Cons EC ON ECP.Emp_ID = EC.Emp_ID 
								LEFT JOIN T0011_LOGIN TL WITH (NOLOCK) ON ECP.USER_ID = TL.LOGIN_ID
								LEFT JOIN T0080_EMP_MASTER TEM WITH (NOLOCK) ON TL.EMP_ID = TEM.EMP_ID
								LEFT JOIN DBO.T0010_COMPANY_MASTER CMP WITH (NOLOCK) ON ECP.CMP_ID = CMP.CMP_ID 
					WHERE		ECP.CMP_ID = @CMP_ID AND ECP.FLAG='Mobile' and ECP.Reason='Mobile' AND 
								ECP.CANTEEN_PUNCH_DATETIME BETWEEN @FROM_DATE AND @TO_DATE
					GROUP BY	ISNULL(ECP.CANTEEN_TRANSACTIONID,0),CAST(CANTEEN_PUNCH_DATETIME AS DATE),
								--ECP.DEVICE_IP,
								DATEPART(HOUR,ECP.SYSTEM_DATE),
								CM.CNT_NAME,TEM.EMP_FULL_NAME,CMP.CMP_NAME,CMP.CMP_ADDRESS
								--DATEPART(HOUR,CANTEEN_PUNCH_DATETIME),

					UNION ALL  
		
					
					SELECT		CMP.CMP_NAME,CMP.CMP_ADDRESS,@FROM_DATE AS FROM_DATE , @TO_DATE AS TO_DATE,
								TEM.EMP_FULL_NAME,CAST(CANTEEN_PUNCH_DATETIME AS DATE) AS CANTEEN_PUNCH_DATETIME
								,CM.CNT_NAME,
								CAST(DATEPART(HOUR, ECP.SYSTEM_DATE) AS VARCHAR) + ':00' AS 'HOUR',
								(convert(varchar, CAST(ECP.CANTEEN_PUNCH_DATETIME AS DATE), 112) + '' + CAST(ISNULL(ECP.CANTEEN_TRANSACTIONID,0) AS VARCHAR(50))) as TRANSACTIONID,
								SUM(ECP.QUANTITY) AS TOTAL,'SYNC FAILED' AS [STATUS]
					FROM		T0150_EMP_CANTEEN_PUNCH_ERROR_LOGS ECP WITH (NOLOCK) INNER JOIN T0050_CANTEEN_MASTER CM WITH (NOLOCK) ON ECP.CANTEEN_ID = CM.CNT_ID
								INNER JOIN #Emp_Cons EC ON ECP.Emp_ID = EC.Emp_ID 
								LEFT JOIN T0011_LOGIN TL WITH (NOLOCK) ON ECP.USER_ID = TL.LOGIN_ID
								LEFT JOIN T0080_EMP_MASTER TEM WITH (NOLOCK) ON TL.EMP_ID = TEM.EMP_ID
								LEFT JOIN DBO.T0010_COMPANY_MASTER CMP WITH (NOLOCK) ON ECP.CMP_ID = CMP.CMP_ID 
					WHERE		ECP.CMP_ID = @CMP_ID AND ECP.FLAG='Mobile' AND 
								ECP.CANTEEN_PUNCH_DATETIME BETWEEN @FROM_DATE AND @TO_DATE
					GROUP BY	ISNULL(ECP.CANTEEN_TRANSACTIONID,0),CAST(Canteen_Punch_datetime as date),
								--,ECP.DEVICE_IP,
								DATEPART(hour,ECP.SYSTEM_DATE),
								CM.CNT_NAME,TEM.EMP_FULL_NAME,CMP.CMP_NAME,CMP.CMP_ADDRESS
								--DATEPART(hour,Canteen_Punch_datetime),
				
		 ) T ORDER BY EMP_FULL_NAME ASC
				
		--SELECT		CMP.CMP_NAME,CMP.CMP_ADDRESS,@FROM_DATE AS FROM_DATE , @TO_DATE AS TO_DATE,
		--			TEM.EMP_FULL_NAME,CAST(CANTEEN_PUNCH_DATETIME AS DATE) AS CANTEEN_PUNCH_DATETIME
		--			,CM.CNT_NAME,
		--			CAST(DATEPART(HOUR, ECP.SYSTEM_DATE) AS VARCHAR) + ':00' AS 'HOUR',
		--			SUM(ECP.QUANTITY) AS TOTAL,'SYNC SUCCESSFULLY' AS [STATUS]
		--FROM		T0150_EMP_CANTEEN_PUNCH ECP INNER JOIN T0050_CANTEEN_MASTER CM ON ECP.CANTEEN_ID = CM.CNT_ID
		--			INNER JOIN #Emp_Cons EC ON ECP.Emp_ID = EC.Emp_ID 
		--			LEFT JOIN T0011_LOGIN TL ON ECP.USER_ID = TL.LOGIN_ID
		--			LEFT JOIN T0080_EMP_MASTER TEM ON TL.EMP_ID = TEM.EMP_ID
		--			LEFT JOIN DBO.T0010_COMPANY_MASTER CMP ON ECP.CMP_ID = CMP.CMP_ID 
		--WHERE		ECP.CMP_ID = @CMP_ID AND ECP.FLAG='Mobile' and ECP.Reason='Mobile' AND 
		--			ECP.CANTEEN_PUNCH_DATETIME BETWEEN @FROM_DATE AND @TO_DATE
		--GROUP BY	CAST(CANTEEN_PUNCH_DATETIME AS DATE),ECP.CANTEEN_TRANSACTIONID,DATEPART(HOUR,ECP.SYSTEM_DATE),CM.CNT_NAME,TEM.EMP_FULL_NAME,CMP.CMP_NAME,CMP.CMP_ADDRESS
		--			--DATEPART(HOUR,CANTEEN_PUNCH_DATETIME),

		--UNION ALL  
		
					
		--SELECT		CMP.CMP_NAME,CMP.CMP_ADDRESS,@FROM_DATE AS FROM_DATE , @TO_DATE AS TO_DATE,
		--			TEM.EMP_FULL_NAME,CAST(CANTEEN_PUNCH_DATETIME AS DATE) AS CANTEEN_PUNCH_DATETIME
		--			,CM.CNT_NAME,
		--			CAST(DATEPART(HOUR, ECP.SYSTEM_DATE) AS VARCHAR) + ':00' AS 'HOUR',
		--			SUM(ECP.QUANTITY) AS TOTAL,'SYNC FAILED' AS [STATUS]
		--FROM		T0150_EMP_CANTEEN_PUNCH_ERROR_LOGS ECP INNER JOIN T0050_CANTEEN_MASTER CM ON ECP.CANTEEN_ID = 							CM.CNT_ID
		--			INNER JOIN #Emp_Cons EC ON ECP.Emp_ID = EC.Emp_ID 
		--			LEFT JOIN T0011_LOGIN TL ON ECP.USER_ID = TL.LOGIN_ID
		--			LEFT JOIN T0080_EMP_MASTER TEM ON TL.EMP_ID = TEM.EMP_ID
		--			LEFT JOIN DBO.T0010_COMPANY_MASTER CMP ON ECP.CMP_ID = CMP.CMP_ID 
		--WHERE		ECP.CMP_ID = @CMP_ID AND ECP.FLAG='Mobile' AND 
		--			ECP.CANTEEN_PUNCH_DATETIME BETWEEN @FROM_DATE AND @TO_DATE
		--GROUP BY	CAST(Canteen_Punch_datetime as date),ECP.CANTEEN_TRANSACTIONID,DATEPART(hour,ECP.SYSTEM_DATE),CM.CNT_NAME,TEM.EMP_FULL_NAME,CMP.CMP_NAME,CMP.CMP_ADDRESS
		--			--DATEPART(hour,Canteen_Punch_datetime),
		
	
	
END



