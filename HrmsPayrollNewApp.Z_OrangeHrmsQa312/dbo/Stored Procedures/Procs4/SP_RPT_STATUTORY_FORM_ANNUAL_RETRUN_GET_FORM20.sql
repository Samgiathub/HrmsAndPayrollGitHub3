
---21/1/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---
CREATE PROCEDURE [dbo].[SP_RPT_STATUTORY_FORM_ANNUAL_RETRUN_GET_FORM20]
	 @CMP_ID 		NUMERIC
	,@FROM_DATE 	DATETIME
	,@TO_DATE 		DATETIME
	,@BRANCH_ID 	NUMERIC
	,@CAT_ID 		NUMERIC 
	,@GRD_ID 		NUMERIC
	,@TYPE_ID 		NUMERIC
	,@DEPT_ID 		NUMERIC
	,@DESIG_ID 		NUMERIC
	,@EMP_ID 		NUMERIC
	,@CONSTRAINT 	VARCHAR(MAX)
	,@SEGMENT_ID		NUMERIC = 0     --added jimit 24122015
	,@Vertical_Id		NUMERIC = 0		--added jimit 24122015
	,@SubVertical_Id	NUMERIC = 0		--added jimit 24122015
	,@SubBranch_ID		NUMERIC = 0		--added jimit 24122015
AS
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET ARITHABORT ON

	IF @BRANCH_ID = 0      
	  SET @BRANCH_ID = NULL    
	      
	 IF @CAT_ID = 0      
	  SET @CAT_ID = NULL    
	    
	 IF @GRD_ID = 0      
	  SET @GRD_ID = NULL    
	    
	 IF @TYPE_ID = 0      
	  SET @TYPE_ID = NULL    
	    
	 IF @DEPT_ID = 0      
	  SET @DEPT_ID = NULL    
	    
	 IF @DESIG_ID = 0      
	  SET @DESIG_ID = NULL    
	    
	 IF @EMP_ID = 0      
	  SET @EMP_ID = NULL    
	  
	  
	CREATE TABLE #EMP_CONS	  
	 (      
	   EMP_ID NUMERIC ,     
	   BRANCH_ID NUMERIC,
	   INCREMENT_ID NUMERIC    
	 )   
	 
	 EXEC SP_RPT_FILL_EMP_CONS  @CMP_ID,@FROM_DATE,@TO_DATE,@BRANCH_ID,@CAT_ID,@GRD_ID,@TYPE_ID,@DEPT_ID,@DESIG_ID ,@EMP_ID ,@CONSTRAINT ,0 ,0 ,@SEGMENT_ID ,@VERTICAL_ID ,@SUBVERTICAL_ID ,@SubBranch_ID 
	   
	 
    
     DECLARE @ANNUAL_REPORT TABLE
    ( 
		CMP_ID NUMERIC(18,0),
		NO_OF_PERSON_FROMDATE_M NUMERIC(18,0),
		NO_OF_PERSON_FROMDATE_F NUMERIC(18,0),
		NO_OF_PERSON_TODATE_M NUMERIC(18,0),
		NO_OF_PERSON_TODATE_F NUMERIC(18,0),
		TOT_WORKING_DAY NUMERIC(18,0),
		NO_OF_MANHOURS_WITHOT_M NUMERIC(18,0),
		NO_OF_MANHOURS_WITHOT_F NUMERIC(18,0),
		TOTAL_AMOUNT_SALARY_M NUMERIC(18,2),
		TOTAL_AMOUNT_SALARY_F NUMERIC(18,2),
		TOTAL_LEFT NUMERIC(18,0),
		TOT_PRESENT_DAY NUMERIC(18,0),
		BASIC_SALARY_COUNT    NUMERIC(18,2)
	)
    
    
    INSERT @ANNUAL_REPORT (CMP_ID ,NO_OF_PERSON_FROMDATE_M,NO_OF_PERSON_FROMDATE_F,NO_OF_PERSON_TODATE_M,NO_OF_PERSON_TODATE_F,
							TOT_WORKING_DAY,NO_OF_MANHOURS_WITHOT_M,NO_OF_MANHOURS_WITHOT_F,TOTAL_AMOUNT_SALARY_M,TOTAL_AMOUNT_SALARY_F,TOTAL_LEFT)
			VALUES (@CMP_ID ,0,0,0,0,0,0,0,0,0,0)
	
	
	
	DECLARE @CMP_WEEKOFF AS VARCHAR(20)
	DECLARE @TOT_WORKING_DAYS NUMERIC(18,0)
	
	SELECT @CMP_WEEKOFF = DEFAULT_HOLIDAY  FROM T0010_COMPANY_MASTER WITH (NOLOCK) WHERE CMP_ID = @CMP_ID 
		
		
		---added jimit 20012016
		UPDATE @ANNUAL_REPORT 
		SET BASIC_SALARY_COUNT = ISNULL(QRY.BS,0)			
			FROM @ANNUAL_REPORT T,
			(SELECT  COUNT (MS.BASIC_SALARY) AS BS 
			FROM T0200_MONTHLY_SALARY MS WITH (NOLOCK) INNER JOIN T0080_EMP_MASTER E WITH (NOLOCK) ON E.EMP_ID = MS.EMP_ID
				 INNER JOIN #EMP_CONS EC ON EC.EMP_ID = E.EMP_ID
			WHERE MS.MONTH_ST_DATE >= @FROM_DATE AND MS.MONTH_END_DATE <= @TO_DATE AND MS.CMP_ID = @CMP_ID AND MS.BASIC_SALARY < 10000) AS QRY
			WHERE T.CMP_ID = @CMP_ID  
			
		UPDATE @ANNUAL_REPORT 
		SET TOT_PRESENT_DAY = ISNULL(QRY.PD,0)			
			FROM @ANNUAL_REPORT T,
			(SELECT  SUM (MS.PRESENT_DAYS ) AS PD --, SUM (MS.NET_AMOUNT ) AS NAMT
			FROM T0200_MONTHLY_SALARY MS WITH (NOLOCK) INNER JOIN T0080_EMP_MASTER E WITH (NOLOCK) ON E.EMP_ID = MS.EMP_ID
				 INNER JOIN #EMP_CONS EC ON EC.EMP_ID = E.EMP_ID
			WHERE MS.MONTH_ST_DATE >= @FROM_DATE AND MS.MONTH_END_DATE <= @TO_DATE AND MS.CMP_ID = @CMP_ID ) AS QRY
			WHERE T.CMP_ID = @CMP_ID
		
			
		--ended jimit 20012016
		
		
		
		UPDATE @ANNUAL_REPORT 
		SET TOT_WORKING_DAY = ISNULL(QRY.CNT_WD,0)
		FROM @ANNUAL_REPORT AS T,
			(SELECT COUNT(DATE) AS CNT_WD
			 FROM (SELECT DATEADD(DD,NUMBER,@FROM_DATE )  AS DATE
				  FROM MASTER.DBO.SPT_VALUES 
				  WHERE MASTER.DBO.SPT_VALUES.TYPE='P' AND DATEADD(DD,NUMBER,@FROM_DATE)<=(@TO_DATE )
			   ) AS T  
			  WHERE DATENAME(WEEKDAY, T.DATE) NOT IN (ISNULL(@CMP_WEEKOFF,'SUNDAY')) ) QRY
		WHERE T.CMP_ID = @CMP_ID 
			
	    UPDATE @ANNUAL_REPORT 
		SET NO_OF_PERSON_FROMDATE_M = ISNULL(QRY.MALE,0) ,
			NO_OF_PERSON_FROMDATE_F = ISNULL(QRY.FEMALE,0) 		
		FROM @ANNUAL_REPORT T,
			(SELECT   COUNT(CASE WHEN E.GENDER = 'M' THEN 1 ELSE NULL END) AS MALE,COUNT(CASE WHEN E.GENDER = 'F' THEN 1 ELSE NULL END) AS FEMALE,
			COUNT(E.EMP_ID) AS TOT FROM T0080_EMP_MASTER AS E WITH (NOLOCK) INNER JOIN 
			#EMP_CONS AS EC ON EC.EMP_ID = E.EMP_ID			
			WHERE E.CMP_ID = @CMP_ID   
			AND E.DATE_OF_JOIN < @FROM_DATE AND E.EMP_LEFT <> 'Y')
				 AS QRY
		WHERE T.CMP_ID = @CMP_ID 
	
		 UPDATE @ANNUAL_REPORT 
		SET NO_OF_PERSON_TODATE_M = ISNULL(QRY.MALE,0) ,
			NO_OF_PERSON_TODATE_F = ISNULL(QRY.FEMALE,0) 		
		FROM @ANNUAL_REPORT T,
			(SELECT   COUNT(CASE WHEN E.GENDER = 'M' THEN 1 ELSE NULL END) AS MALE,COUNT(CASE WHEN E.GENDER = 'F' THEN 1 ELSE NULL END) AS FEMALE,
			COUNT(E.EMP_ID) AS TOT FROM T0080_EMP_MASTER AS E WITH (NOLOCK) INNER JOIN 
			#EMP_CONS AS EC ON  EC.EMP_ID = E.Emp_ID		
			WHERE E.CMP_ID = @CMP_ID   
			AND E.DATE_OF_JOIN <= @TO_DATE AND E.EMP_LEFT <> 'Y')
				 AS QRY
		WHERE T.CMP_ID = @CMP_ID
		
		UPDATE @ANNUAL_REPORT 
		SET TOTAL_LEFT = ISNULL(QRY.TOT,0)			
		FROM @ANNUAL_REPORT T,
			(SELECT COUNT(E.EMP_ID) AS TOT
			 FROM T0080_EMP_MASTER AS E WITH (NOLOCK) INNER JOIN 
			 #EMP_CONS AS EC ON EC.EMP_ID = E.EMP_ID									
			 WHERE E.CMP_ID = @CMP_ID AND E.EMP_LEFT = 'Y' AND E.EMP_LEFT_DATE > @FROM_DATE AND E.EMP_LEFT_DATE <= @TO_DATE)
				 AS QRY
		WHERE T.CMP_ID = @CMP_ID
		
		
		DECLARE @TEMPREPORT TABLE (RUNTIME VARCHAR(20),EMP_ID NUMERIC(18,0))
		
		INSERT INTO @TEMPREPORT 
		SELECT DURATION,EMP_ID FROM T0150_EMP_INOUT_RECORD WITH (NOLOCK) WHERE CMP_ID = @CMP_ID
		AND FOR_DATE >= @FROM_DATE AND FOR_DATE <= @TO_DATE		

		
		UPDATE @ANNUAL_REPORT 
		SET NO_OF_MANHOURS_WITHOT_M = ISNULL(QRY.DURATION,0)		
		FROM @ANNUAL_REPORT T,
			(SELECT  SUM(CAST(REPLACE(RUNTIME, ':','.') AS FLOAT)) AS DURATION FROM @TEMPREPORT T
					INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON EM.EMP_ID = T.EMP_ID
					INNER JOIN #EMP_CONS EC ON EC.EMP_ID = EM.Emp_ID
			 WHERE  EM.GENDER = 'M')
		AS QRY
		WHERE T.CMP_ID = @CMP_ID

		UPDATE @ANNUAL_REPORT 
		SET NO_OF_MANHOURS_WITHOT_F = ISNULL(QRY.DURATION,0)		
		FROM @ANNUAL_REPORT T,
			(SELECT  SUM(CAST(REPLACE(RUNTIME, ':','.') AS FLOAT)) AS DURATION FROM @TEMPREPORT T
					INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON EM.EMP_ID = T.EMP_ID
					INNER JOIN #EMP_CONS EC ON EC.EMP_ID = EM.Emp_ID
			WHERE	EM.GENDER = 'F')
		AS QRY
		WHERE T.CMP_ID = @CMP_ID
		
		UPDATE @ANNUAL_REPORT 
		SET TOTAL_AMOUNT_SALARY_M = ISNULL(QRY.GROSS_SALARY,0)		
		FROM @ANNUAL_REPORT T,
				(SELECT SUM(MS.GROSS_SALARY) AS GROSS_SALARY FROM T0200_MONTHLY_SALARY MS WITH (NOLOCK)
						INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON EM.EMP_ID = MS.EMP_ID
						INNER JOIN #EMP_CONS EC ON EC.EMP_ID = EM.Emp_ID
				WHERE	MS.CMP_ID = @CMP_ID AND EM.GENDER = 'M' AND MS.MONTH_ST_DATE >= @FROM_DATE  AND MS.MONTH_END_DATE <= @TO_DATE)
		AS QRY
		WHERE T.CMP_ID = @CMP_ID
		
		
		UPDATE @ANNUAL_REPORT 
		SET TOTAL_AMOUNT_SALARY_F = ISNULL(QRY.GROSS_SALARY,0)		
		FROM @ANNUAL_REPORT T,
			(SELECT SUM(MS.GROSS_SALARY) AS GROSS_SALARY FROM T0200_MONTHLY_SALARY MS WITH (NOLOCK)
					INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON EM.EMP_ID = MS.EMP_ID
					INNER JOIN #EMP_CONS EC ON EC.EMP_ID = EM.Emp_ID
			WHERE	MS.CMP_ID = @CMP_ID AND EM.GENDER = 'F' AND MS.MONTH_ST_DATE >= @FROM_DATE AND MS.MONTH_END_DATE <= @TO_DATE)
		AS QRY
		WHERE T.CMP_ID = @CMP_ID
	
	
	
	SELECT A.*,C.CMP_NAME ,C.CMP_ADDRESS ,C.CMP_CITY ,C.CMP_PINCODE,C.FROM_DATE,CONVERT(VARCHAR, @FROM_DATE,103) AS FROM_DATE_1,
	CONVERT(VARCHAR,@TO_DATE,103) AS TO_DATE 
			,C.NATURE_OF_BUSINESS,C.DESIGNATION_MANAGER_FORM_16,C.CIT_ADDRESS,C.CIT_CITY,C.CIT_PIN	
			,CDD.DIRECTOR_NAME,CDD.DIRECTOR_ADDRESS 
			,C.NATURE_OF_BUSINESS,C.DATE_OF_ESTABLISHMENT,C.CMP_PHONE,C.CMP_EMAIL,CDD.DIRECTOR_BRANCH,CDD.DIRECTOR_NAME
			,CDD.DIRECTOR_DESIGNATION,CDD.DIRECTOR_ADDRESS,YEar(c.Date_of_Establishment) as date_of_Establishment
			,C.LICENSE_NO   --added jimit 20012016
			,ISNull(SM.State_Name,'') AS State_Name	--added jimit 22012016
	FROM @ANNUAL_REPORT A INNER JOIN T0010_COMPANY_MASTER C WITH (NOLOCK) ON A.CMP_ID = C.CMP_ID 
		 LEFT OUTER JOIN T0010_COMPANY_DIRECTOR_DETAIL CDD WITH (NOLOCK) ON C.CMP_ID=CDD.CMP_ID 
		 LEFT JOIN T0020_STATE_MASTER SM WITH (NOLOCK) ON SM.State_ID = C.State_ID
	
	
	
RETURN




