  
---02/2/2021 (EDIT BY MEHUL ) (SP WITH NOLOCK)---  
  
CREATE PROCEDURE [dbo].[SP_RPT_EMP_ATTENDANCE_MUSTER_IN_EXCEL_17_11_21]  
  @CMP_ID   NUMERIC  
 ,@FROM_DATE  DATETIME  
 ,@TO_DATE   DATETIME  
 ,@BRANCH_ID  NUMERIC  
 ,@CAT_ID   NUMERIC   
 ,@GRD_ID   NUMERIC  
 ,@TYPE_ID   NUMERIC  
 ,@DEPT_ID   NUMERIC  
 ,@DESIG_ID   NUMERIC  
 ,@EMP_ID   NUMERIC  
 ,@CONSTRAINT  VARCHAR(MAX)  
 ,@REPORT_FOR VARCHAR(50) = ''  
 ,@EXPORT_TYPE   VARCHAR(50) = 'EXCEL'  
 ,@TYPE   NUMERIC = 0  -- ADDED BY ALI 03032014  
 ,@IS_WHOSOFF TINYINT = 0  --ADDED BY GADRIWALA 09042015     
 ,@ORDER_BY  VARCHAR(500) = 'CODE' -- ADDED BY NIMESH 10-JUL-2015 (TO SORT BY CODE/NAME/ENROLL NO)  
 ,@PAGE_NO  INT = 1  
 ,@PAGE_SIZE  NUMERIC(15,2) = 0  
 ,@P_Branch  varchar(max) = '' --(For privilege branch)jimit 18072016  
 ,@P_Vertical  varchar(max) = '' --(For privilege Vertical)jimit 18072016  
 ,@P_Subvertical  varchar(max) = '' --(For privilege Subvertical)jimit 18072016  
 ,@P_Department  varchar(max) = '' --(For privilege Department)jimit 18072016  
AS  
  
SET NOCOUNT ON   
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED  
SET ARITHABORT ON  
  
 CREATE table #Emp_Cons   
 (        
  Emp_ID numeric ,       
  Branch_ID numeric,  
  Increment_ID numeric  
 )      
   
 DECLARE @COUNT NUMERIC(9,2);  
 SET @COUNT = 0;  
 IF ISNULL(@PAGE_SIZE,0) > 0  
  BEGIN  
   IF (@PAGE_NO < 1)  
    SET @PAGE_NO = 1;  
     
   --added jimit for whos off 19072016  
   if @IS_WHOSOFF =1   
   BEGIN   
    if @DEPT_ID > 0  
     Set @P_Department = cast(@DEPT_ID as Varchar(max))  
  
     If @EMP_ID > 0  
      SET @constraint = ''  
  
    exec SP_RPT_FILL_EMP_CONS_MULTIDROPDOWN @Cmp_ID=@Cmp_ID,@From_Date=@From_Date,@To_Date=@To_Date,@Branch_ID=@Branch_ID,@Cat_ID=@Cat_ID,@Grd_ID=@Grd_ID,  
       @Type_ID=@Type_ID,@Dept_ID=@P_Department,@Desig_ID=@Desig_ID,@Emp_ID=@Emp_ID,@constraint=@constraint,  
       @PBranch_ID=@P_Branch,@Vertical_Id=@P_Vertical, @SubVertical_Id=@P_Subvertical  
  
   END  
   --ended  
   else  
   BEGIN  
    EXEC SP_RPT_FILL_EMP_CONS  @Cmp_ID,@From_Date,@To_Date,@Branch_ID,@Cat_ID,@Grd_ID,@Type_ID,@Dept_ID,@Desig_ID ,@Emp_ID ,@constraint ,0 ,0 ,0,0,0,0,0,0,3,0,0,@Type  
   end  
     
     
  
   SELECT @COUNT = COUNT(1) FROM #Emp_Cons  
     
   SET @CONSTRAINT = NULL  
     
   DECLARE @TOTAL_ROW_COUNT INT;  
   SET @TOTAL_ROW_COUNT =(@PAGE_SIZE * @PAGE_NO)  
     
   SET ROWCOUNT @TOTAL_ROW_COUNT  
     
   SELECT ROW_NO, EMP_ID INTO #TMP_CONS  
   FROM (  
     SELECT ROW_NUMBER() OVER (Order By ALPHA_EMP_CODE) As ROW_NO,E.Emp_ID  
     FROM #Emp_Cons E INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON E.EMP_ID=EM.EMP_ID  
    ) T     
   ORDER BY  ROW_NO   
  
  
   --- Added by Hardik 04/07/2019 As paging is not working and commented below portion  
   SELECT  @CONSTRAINT = COALESCE(@CONSTRAINT + '#', '') + CAST(Emp_ID AS VARCHAR(10))  
   FROM    #TMP_CONS  
   WHERE   ROW_NO  BETWEEN ((@PAGE_NO - 1) * @PAGE_SIZE + 1)  
     AND (@PAGE_NO * @PAGE_SIZE)  
                
     
   --SET @TOTAL_ROW_COUNT = CAST(@PAGE_SIZE AS INT)  
   --SET ROWCOUNT @TOTAL_ROW_COUNT  
     
   ----SET @COUNT = 0;  
   --SELECT @CONSTRAINT = COALESCE(@CONSTRAINT + '#', '') + CAST(T.Emp_ID AS VARCHAR(10))--, @COUNT = @COUNT + 1  
   --FROM #TMP_CONS T  
   --ORDER BY  ROW_NO DESC  
     
   SET ROWCOUNT 0;  
     
     
     
   IF CEILING(@COUNT / @PAGE_SIZE ) < @PAGE_NO AND @COUNT <> 1 --Ceiling added by Ankit 13052016  
    SET @CONSTRAINT = '0';  
     
   --WHERE PageNo = @PAGE_NO    
     
   IF @CONSTRAINT IS NULL  
    SET @CONSTRAINT = '0';  
     
     
     
   --TRUNCATE TABLE #Emp_Cons ---Commented by Hardik 04/07/2019 as Whosoff showing wrong due to #General_Setting table not bind  
  END  
 ELSE  
  EXEC SP_RPT_FILL_EMP_CONS  @Cmp_ID,@From_Date,@To_Date,@Branch_ID,@Cat_ID,@Grd_ID,@Type_ID,@Dept_ID,@Desig_ID ,@Emp_ID ,@constraint ,0 ,0 ,0,0,0,0,0,0,3,0,0,@Type  
   
   
 CREATE table #ATT_MUSTER_EXCEL   
 (   
  EMP_ID  NUMERIC ,   
  CMP_ID  NUMERIC,  
  FOR_DATE DATETIME,  
  STATUS  VARCHAR(10) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  LEAVE_COUNT NUMERIC(5,2),  
  WO_HO  VARCHAR(3) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  STATUS_2 VARCHAR(20) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  ROW_ID  NUMERIC ,  
  WO_HO_DAY NUMERIC(3,2) DEFAULT 0,  
  P_DAYS  NUMERIC(5,2) DEFAULT 0,  
  A_DAYS  NUMERIC(5,2) DEFAULT 0 ,  
  JOIN_DATE DATETIME DEFAULT NULL,  
  LEFT_DATE DATETIME DEFAULT NULL,  
  GATE_PASS_DAYS NUMERIC(18,2) DEFAULT 0,  -- ADDED BY GADRIWALA MUSLIM 07042015  
  LATE_DEDUCT_DAYS NUMERIC(18,2) DEFAULT 0, -- ADDED BY GADRIWALA MUSLIM 07042015  
  EARLY_DEDUCT_DAYS NUMERIC(18,2) DEFAULT 0, -- ADDED BY GADRIWALA MUSLIM 07042015  
  EMP_CODE    VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  EMP_FULL_NAME  VARCHAR(300) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  BRANCH_ADDRESS VARCHAR(300) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  COMP_NAME VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  BRANCH_NAME VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  DEPT_NAME  VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  GRD_NAME VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  DESIG_NAME VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  P_FROM_DATE  DATETIME,  
  P_TO_DATE DATETIME,  
  BRANCH_ID NUMERIC(18,0),  
  DESIG_DIS_NO NUMERIC(18,2) DEFAULT 0,          ---ADDED JIMIT 31082015   
  SUBBRANCH_NAME VARCHAR(200) DEFAULT '' COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS  
 )  
     
     
      
 CREATE NONCLUSTERED INDEX IX_DATA ON DBO.#ATT_MUSTER_EXCEL  
  ( EMP_ID,EMP_CODE,ROW_ID )   
    
 -- Added by rohit on 01082016  
 if (@EMP_ID <> 0 and (@CONSTRAINT = '0' or @CONSTRAINT='' ))  
 begin  
  set @CONSTRAINT  = @EMP_ID  
 end   
   
   
  
 EXEC SP_RPT_EMP_ATTENDANCE_MUSTER_GET @CMP_ID,@FROM_DATE,@TO_DATE,@BRANCH_ID,  
            @CAT_ID,@GRD_ID,@TYPE_ID,@DEPT_ID,@DESIG_ID,  
            @EMP_ID,@CONSTRAINT,@REPORT_FOR,@EXPORT_TYPE  
      
   
   
 CREATE table #LEAVE_CODE  
 (  
  LEAVE_CODE VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS  
 )  
  
  
 INSERT INTO #LEAVE_CODE              
 SELECT STATUS FROM #ATT_MUSTER_EXCEL   
 WHERE STATUS_2 IS NOT NULL AND STATUS_2 <>'' AND STATUS_2 <>'LC' GROUP BY STATUS  
    
 UPDATE DBO.#ATT_MUSTER_EXCEL SET STATUS = STATUS  +  '-LC'  WHERE STATUS_2 = 'LC'   
 AND STATUS NOT LIKE '%LC%' ---Add By Jignesh 19-01-2021-----  
   
   
 CREATE table #CROSSTAB        --ADDED BY GADRIWALA MUSLIM 24042015   
 (     
  CODE VARCHAR(100) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,           
  EMPLOYEENAME   VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  DESIGNATION VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  GRADE VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  DEPARTMENT VARCHAR(200) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  Branch_Name Varchar(256) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  SubBranch_Name Varchar(256) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  DATE_OF_JOIN VARCHAR(15) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  DATE_OF_LEFT VARCHAR(15) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  ENROLL_NO NUMERIC    ,  
  EMP_ID INT,     -------------- ADD BY JIGNESH 31-07-2014 -------  
  LATE_WITH_LEAVE BIT --ADDED BY NIMESH 15-JUL-2015 (TO ADJUST LATE COMMING IN LEAVE)    
 )                
  
 CREATE NONCLUSTERED INDEX IX_DATA1 ON DBO.#CROSSTAB  
 ( CODE )   
   
 CREATE table #UNPAID_LEAVE  
 (   
  EMP_ID NUMERIC,  
  CODE VARCHAR(100) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,           
  UNPAID_LEAVE NUMERIC(18,2)  
 )                
  
CREATE NONCLUSTERED INDEX IX_DATA2 ON  DBO.#UNPAID_LEAVE  
 ( EMP_ID )   
  
  DECLARE @MONTH_DAYS AS NUMERIC  
  SET @MONTH_DAYS = DATEDIFF (DD,@FROM_DATE,@TO_DATE) + 1  
   
        
  DECLARE @DESCRIPTION AS VARCHAR(5)  
  DECLARE @DESCRIPTION_ORG AS VARCHAR(900)          
  DECLARE @ALTER_COLS AS VARCHAR(4000)          
  DECLARE @TEST1 AS VARCHAR(4000)    
         
  ------------------------       
  /*  
  
 IF @MONTH_DAYS = 31  
  BEGIN   
   DECLARE ATT_MUSTER CURSOR FOR     
   SELECT TOP 38       
     CASE ROW_ID    
      WHEN 32  
       THEN 'P'   
      WHEN 33  
       THEN 'A'   
      WHEN 34  
       THEN 'L'  
      WHEN 35  
       THEN 'W'  
      WHEN 36  
       THEN 'H'  
      WHEN 37  
       THEN 'LC'  
      WHEN 38  
       THEN 'GP'  -- CHANGED BY GADRIWALA MUSLIM 27042015  
      ELSE  
       CASE When @IS_WHOSOFF = 1 Then  
        RIGHT(CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2)  
       Else  
        RIGHT('0' + CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2) +  '-' + RIGHT('0' + CAST(DATEPART(Month,FOR_DATE) AS VARCHAR(2)) , 2)  
       END  
  
     END AS ROW_ID, FOR_DATE  
   FROM #ATT_MUSTER_EXCEL  ORDER BY EMP_ID,FOR_DATE --ASC    
  END  
 ELSE IF @MONTH_DAYS = 30  
  BEGIN   
   DECLARE ATT_MUSTER CURSOR FOR     
   SELECT TOP 38  
   CASE ROW_ID    
    WHEN 31  
     THEN '0'   
    WHEN 32  
     THEN 'P'   
    WHEN 33  
     THEN 'A'   
    WHEN 34  
     THEN 'L'  
    WHEN 35  
     THEN 'W'  
    WHEN 36  
     THEN 'H'  
    WHEN 37  
     THEN 'LC'  
    WHEN 38  
     THEN 'GP'  -- CHANGED BY GADRIWALA MUSLIM 27042015  
    ELSE  
     --CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2))  
     CASE When @IS_WHOSOFF = 1 Then  
      RIGHT(CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2)  
     Else  
      RIGHT('0' + CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2) +  '-' + RIGHT('0' + CAST(DATEPART(Month,FOR_DATE) AS VARCHAR(2)) , 2)  
     END  
  
   END AS ROW_ID, FOR_DATE  
   FROM #ATT_MUSTER_EXCEL  ORDER BY EMP_ID,FOR_DATE --ASC    
  END  
 ELSE IF @MONTH_DAYS = 28  
  BEGIN   
   DECLARE ATT_MUSTER CURSOR FOR     
   SELECT TOP 38  
   CASE ROW_ID    
    WHEN 29  
     THEN 'AA'  
    WHEN 30  
     THEN 'BB'      
    WHEN 31  
     THEN 'CC'   
    WHEN 32  
     THEN 'P'   
    WHEN 33  
     THEN 'A'   
    WHEN 34  
     THEN 'L'  
    WHEN 35  
     THEN 'W'  
    WHEN 36  
     THEN 'H'  
    WHEN 37  
     THEN 'LC'  
    WHEN 38  
     THEN 'GP'  -- CHANGED BY GADRIWALA MUSLIM 27042015  
    ELSE  
     CASE When @IS_WHOSOFF = 1 Then  
      RIGHT(CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2)  
     Else  
      RIGHT('0' + CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2) +  '-' + RIGHT('0' + CAST(DATEPART(Month,FOR_DATE) AS VARCHAR(2)) , 2)  
     END  
   END AS ROW_ID, FOR_DATE  
   FROM #ATT_MUSTER_EXCEL  ORDER BY EMP_ID,FOR_DATE --ASC    
  END  
 ELSE IF @MONTH_DAYS = 29  
  BEGIN   
   DECLARE ATT_MUSTER CURSOR FOR     
   SELECT TOP 38  
   CASE ROW_ID    
    WHEN 30  
     THEN 'AA'  
    WHEN 31  
     THEN 'BB'      
    WHEN 32  
     THEN 'P'   
    WHEN 33  
     THEN 'A'   
    WHEN 34  
     THEN 'L'  
    WHEN 35  
     THEN 'W'  
    WHEN 36  
     THEN 'H'  
    WHEN 37  
     THEN 'LC'  
    WHEN 38  
     THEN 'GP'  -- CHANGED BY GADRIWALA MUSLIM 27042015  
    ELSE  
     --CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2))  
     CASE When @IS_WHOSOFF = 1 Then  
      RIGHT(CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2)  
     Else  
      RIGHT('0' + CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2) +  '-' + RIGHT('0' + CAST(DATEPART(Month,FOR_DATE) AS VARCHAR(2)) , 2)  
     END  
   END AS ROW_ID,FOR_DATE  
   FROM #ATT_MUSTER_EXCEL  ORDER BY EMP_ID,FOR_DATE --ASC    
  END  
    
 --) AS A  ORDER BY ROW_ID ASC     
    
 */  
  
 DECLARE @INSERT_WEEKDAY VARCHAR(MAX);  
 DECLARE @VALUE_WEEKDAY VARCHAR(MAX);  
 DECLARE @WEEKDAY VARCHAR(2); --ANKIT 29102015  
 DECLARE @FOR_DATE DATETIME;  
  
 SET @INSERT_WEEKDAY = '';  
 SET @VALUE_WEEKDAY = ''  
  
  
 DECLARE @MONTH_INDENT INT  
 SET @MONTH_INDENT = @MONTH_DAYS  + (31 - @MONTH_DAYS)  
   
 DECLARE ATT_MUSTER CURSOR FOR     
 SELECT TOP 38  
   CASE ROW_ID       
   WHEN (1 + @MONTH_INDENT) --32  
    THEN 'P'   
   WHEN (2 + @MONTH_INDENT) --33  
    THEN 'A'   
   WHEN (3 + @MONTH_INDENT) --34  
    THEN 'L'  
   WHEN (4 + @MONTH_INDENT) --35  
    THEN 'W'  
   WHEN (5 + @MONTH_INDENT) --36  
    THEN 'H'  
   WHEN (6 + @MONTH_INDENT) --37  
    THEN 'LC'  
   WHEN (7 + @MONTH_INDENT) --38  
    THEN 'GP'  -- CHANGED BY GADRIWALA MUSLIM 27042015  
   ELSE  
    CASE WHEN ROW_ID BETWEEN (@MONTH_DAYS+1) AND  31 Then  
     '0'  
    WHEN @IS_WHOSOFF = 1 Then  
     RIGHT(CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2)  
    ELSE  
     RIGHT('0' + CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2) +  '-' + RIGHT('0' + CAST(DATEPART(Month,FOR_DATE) AS VARCHAR(2)) , 2)  
    END  
  END AS ROW_ID, FOR_DATE  
 FROM #ATT_MUSTER_EXCEL  ORDER BY EMP_ID,FOR_DATE --ASC   
  
 OPEN ATT_MUSTER          
 FETCH NEXT FROM ATT_MUSTER INTO @DESCRIPTION, @FOR_DATE  
 WHILE @@FETCH_STATUS = 0          
  BEGIN          
   IF ISNUMERIC(REPLACE(@DESCRIPTION, '-','')) = 1  
    BEGIN  
     IF CAST(REPLACE(@DESCRIPTION, '-','') AS NUMERIC) > 0  
      BEGIN      
       SET @WEEKDAY = DATENAME(DW, @FOR_DATE);  
       SET @INSERT_WEEKDAY = @INSERT_WEEKDAY + '[' + @DESCRIPTION + '],'  
       SET @VALUE_WEEKDAY = @VALUE_WEEKDAY + '''' + @WEEKDAY + ''','      
      END  
    END  
           
   SET @DESCRIPTION_ORG=@DESCRIPTION          
   SET @DESCRIPTION=REPLACE(@DESCRIPTION,' ','_')          
   SET @DESCRIPTION=REPLACE (@DESCRIPTION,'.','_')          
  
   IF @DESCRIPTION <> 'AA' AND @DESCRIPTION <>'BB' AND @DESCRIPTION <> 'CC' AND @DESCRIPTION <> '0'  
    BEGIN  
     IF ISNUMERIC(REPLACE(@DESCRIPTION, '-','')) = 0  
      SET @ALTER_COLS ='ALTER TABLE  #CROSSTAB ADD ['+ @DESCRIPTION +']  VARCHAR(10) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS DEFAULT 0'  
     ELSE  
      SET @ALTER_COLS ='ALTER TABLE  #CROSSTAB ADD ['+ @DESCRIPTION +']  VARCHAR(10) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS DEFAULT '''''  
        
     EXEC(@ALTER_COLS)               
     SET @ALTER_COLS=''              
    END               
   FETCH NEXT FROM ATT_MUSTER INTO @DESCRIPTION, @FOR_DATE          
  END          
 CLOSE ATT_MUSTER           
 DEALLOCATE ATT_MUSTER   
  
 CREATE TABLE #REQUIRED_COLUMNS (ID INT, ColName varchar(10))  
 INSERT INTO #REQUIRED_COLUMNS VALUES(1, 'P')  
 INSERT INTO #REQUIRED_COLUMNS VALUES(2, 'A')  
 INSERT INTO #REQUIRED_COLUMNS VALUES(3, 'W')  
 INSERT INTO #REQUIRED_COLUMNS VALUES(4, 'H')  
 INSERT INTO #REQUIRED_COLUMNS VALUES(5, 'LC')  
 INSERT INTO #REQUIRED_COLUMNS VALUES(6, 'GP')  
 INSERT INTO #REQUIRED_COLUMNS VALUES(7, 'L')  
  
 SET @ALTER_COLS = NULL;  
 SELECT @ALTER_COLS = COALESCE(@ALTER_COLS + ';','') + 'ALTER TABLE  #CROSSTAB ADD ' + ColName  + ' VARCHAR(10) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS DEFAULT 0'  
 FROM #REQUIRED_COLUMNS  t  
 WHERE NOT EXISTS(SELECT 1 FROM tempdb.sys.columns c where object_id=OBJECT_ID('tempdb..#CROSSTAB') AND c.name=t.ColName)  
   
 if ISNULL(@ALTER_COLS, '') IS NOT NULL  
  EXEC(@ALTER_COLS)  
  
 --print 'STAGE 02 : ' + CONVERT(VARCHAR(20), GETDATE(), 114)  
     
 IF @IS_WHOSOFF <> 1  
  BEGIN  
   SET @INSERT_WEEKDAY = 'INSERT INTO #CROSSTAB(' + @INSERT_WEEKDAY + 'CODE,Emp_ID)VALUES(' + @VALUE_WEEKDAY + '0,0)';  
   EXEC (@INSERT_WEEKDAY);  
  END  
    
     
 ALTER TABLE  #CROSSTAB ADD [HO_WORK] NUMERIC(18,2) DEFAULT 0  
 ALTER TABLE  #CROSSTAB ADD [WO_WORK] NUMERIC(18,2) DEFAULT 0  
 ALTER TABLE  #CROSSTAB ADD [EMP_OT] BIT NULL  
  
 --end-----------------------  
     
 SET @ALTER_COLS ='ALTER TABLE  #CROSSTAB ADD [PAYABLE_PRESENT_DAYS] NUMERIC(9,3) DEFAULT 0'          
 EXEC(@ALTER_COLS)           
 SET @ALTER_COLS=''   
  
 SET @ALTER_COLS ='ALTER TABLE  #CROSSTAB ADD [EARLY_DEDUCT_DAYS] NUMERIC(18,2) DEFAULT 0'          
 EXEC(@ALTER_COLS)           
 SET @ALTER_COLS=''  
  
 SET @ALTER_COLS ='ALTER TABLE  #CROSSTAB ADD [WO_HO_DAY] NUMERIC(18,2) DEFAULT 0'          
 EXEC(@ALTER_COLS)           
 SET @ALTER_COLS=''   
  -- ADDED BY ROHIT ON 24092013  
 SET @ALTER_COLS ='ALTER TABLE  #CROSSTAB ADD [PAYABLE_DAYS] Numeric(18,2) DEFAULT 0'    
 EXEC(@ALTER_COLS)           
 SET @ALTER_COLS=''   
    
  
  -- ENDED BY ROHIT ON 24092013  
  --ADDED BY GADRIWALA MUSLIM 24042015 - START  
  INSERT INTO #CROSSTAB( CODE,EMPLOYEENAME,DESIGNATION,GRADE,DEPARTMENT,Branch_Name,SUBBRANCH_NAME ,DATE_OF_JOIN,DATE_OF_LEFT ,ENROLL_NO,EMP_ID, EMP_OT, PAYABLE_PRESENT_DAYS)     
  SELECT DISTINCT  AM.EMP_CODE,AM.EMP_FULL_NAME,AM.DESIG_NAME,AM.GRD_NAME,  
   AM.DEPT_NAME,AM.BRANCH_NAME,AM.SUBBRANCH_NAME,CONVERT(VARCHAR,DATE_OF_JOIN ,103),CONVERT(VARCHAR,LEFT_DATE,103),ENROLL_NO,EM.EMP_ID,0,0  
  FROM #ATT_MUSTER_EXCEL AM    
   INNER JOIN T0080_EMP_MASTER EM WITH (NOLOCK) ON AM.EMP_ID = EM.EMP_ID  
    
 IF OBJECT_ID('tempdb..#Emp_Cons') IS NOT NULL  
  BEGIN      
   UPDATE C  
   SET  Emp_OT = 1  
   FROM #CROSSTAB C   
     INNER JOIN #ATT_MUSTER_EXCEL AM   ON C.EMP_ID=AM.EMP_ID  
     INNER JOIN T0080_EMP_MASTER EM ON AM.EMP_ID = EM.EMP_ID  
     INNER JOIN #EMP_CONS EC ON EM.Emp_ID=EC.Emp_ID  
     INNER JOIN T0095_INCREMENT I ON EC.Increment_ID=I.Increment_ID  
     INNER JOIN T0040_GENERAL_SETTING G ON I.Branch_ID=G.Branch_ID  
     INNER JOIN (SELECT G1.BRANCH_ID, MAX(GEN_ID) AS GEN_ID  
        FROM T0040_GENERAL_SETTING G1 WITH (NOLOCK)  
          INNER JOIN (SELECT G2.BRANCH_ID, MAX(FOR_DATE) AS FOR_DATE  
             FROM T0040_GENERAL_SETTING G2 WITH (NOLOCK)  
             WHERE G2.For_Date <= @TO_DATE  
             GROUP BY G2.Branch_ID) G2 ON G1.Branch_ID=G2.Branch_ID AND G1.For_Date=G2.FOR_DATE  
        GROUP BY G1.Branch_ID) G1 ON G.Gen_ID=G1.GEN_ID  
   WHERE I.Emp_OT =1 AND G.Is_OT=1  
  END  
  
  
--added by chetan/nimeshbhai 070917 for holiday work and weekoff work count  
  
 /*---------- Modify By Jignesh 12-Mar-2020----------        
 UPDATE C  
 SET  HO_WORK = isnull(HO.Holiday_Days,0), WO_WORK = isnull(WO.WO_Days,0)  
 FROM #CROSSTAB C  
   LEFT OUTER JOIN (SELECT SUM(ISNULL(P_days,0)) As Holiday_Days,Emp_ID  
       FROM #Att_Muster_Excel  
       WHERE (WO_HO ='HO' OR WO_HO ='OHO')--IN('HO','CO-OHO')  
       GROUP BY Emp_ID) AS HO ON C.Emp_ID = HO.Emp_ID   
   LEFT OUTER JOIN (SELECT SUM(ISNULL(P_days,0)) As WO_Days,Emp_ID  
       FROM #Att_Muster_Excel  
       WHERE WO_HO = 'W'  
       GROUP BY Emp_ID) AS WO ON C.Emp_ID = WO.Emp_ID           
 WHERE EMP_OT = 0  
   
 */-----------------------  
   
 --------- Add By Jignesh 12-Mar-2020  
    
 UPDATE #ATT_MUSTER_EXCEL SET   
 --STATUS= STATUS +'-'+ISNULL(STATUS_2,'')   
 STATUS= CASE WHEN STATUS_2 IN('CO-W','CO-HO') THEN STATUS_2 ELSE  STATUS +'-'+ISNULL(STATUS_2,'')  END  
 WHERE ISNULL(WO_HO_DAY,0)>0   
 --AND ISNULL(STATUS_2,'')='P'  
 AND (ISNULL(STATUS_2,'')='P' OR STATUS_2 IN('CO-W','CO-HO'))  
 AND (WO_HO ='HO' OR WO_HO ='OHO' OR WO_HO = 'W')  
     
 UPDATE C  
 SET  HO_WORK = isnull(HO.Holiday_Days,0), WO_WORK = isnull(WO.WO_Days,0)  
 FROM #CROSSTAB C  
   LEFT OUTER JOIN (SELECT SUM(ISNULL(WO_HO_Day,0)) As Holiday_Days,Emp_ID  
       FROM #Att_Muster_Excel  
       WHERE (WO_HO ='HO' OR WO_HO ='OHO')  
       --And Isnull(STATUS_2,'') = 'P'  
       AND (ISNULL(STATUS_2,'')='P' OR STATUS_2 IN('CO-W','CO-HO'))  
       GROUP BY Emp_ID) AS HO ON C.Emp_ID = HO.Emp_ID   
   LEFT OUTER JOIN (SELECT SUM(ISNULL(WO_HO_Day,0)) As WO_Days,Emp_ID  
       FROM #Att_Muster_Excel  
       WHERE WO_HO = 'W'  
       --And Isnull(STATUS_2,'') = 'P'  
       AND (ISNULL(STATUS_2,'')='P' OR STATUS_2 IN('CO-W','CO-HO'))  
       GROUP BY Emp_ID) AS WO ON C.Emp_ID = WO.Emp_ID   
   
 --CO-W,CO-HO  
  ------------- End 12-Mar-2020----------------   
     
     
 ALTER TABLE #CROSSTAB  
  DROP COLUMN Emp_OT  
 --end  
       
     
 DECLARE @CODE AS VARCHAR(50)          
 DECLARE @EMPNAME AS VARCHAR(200)   
 DECLARE @STATUS AS VARCHAR(50)    
 DECLARE @STATUS_2 AS VARCHAR(50)    
 DECLARE @EXTRA_AB_DEDUCTION AS NUMERIC(18,2)  
 DECLARE @PRESENT_DAYS AS NUMERIC(18,2)  
 DECLARE @A_DAYS AS NUMERIC(18,2)  
 DECLARE @P_DAYS AS NUMERIC(18,2)  
 DECLARE @UNPAID_LEAVE_DAYS AS NUMERIC(18,2)  
 DECLARE @PRE_EMP_CODE AS VARCHAR(50)  
 DECLARE @ABSENT_DAYS AS NUMERIC(18,2)  
 DECLARE @LEAVE_COUNT AS NUMERIC(18,2)  
 DECLARE @GATE_PASS_DAYS AS NUMERIC(18,2) -- GADRIWALA MUSLIM 27032015  
 DECLARE @LATE_DEDUCT_DAYS AS NUMERIC(18,2) -- GADRIWALA MUSLIM 27032015  
 DECLARE @EARLY_DEDUCT_DAYS AS NUMERIC(18,2)-- GADRIWALA MUSLIM 27032015  
 DECLARE @WO_HO_DAYS AS NUMERIC(18,2) -- GADRIWALA MUSLIM 27032015     
 DECLARE @CUR_BRANCH_ID AS NUMERIC(18,0) -- GADRIWALA MUSLIM 24-12-2015                
 DECLARE @PREV_BRANCH_ID AS NUMERIC(18,0) -- GADRIWALA MUSLIM 24-12-2015  
 SET @DESCRIPTION = ''          
 SET @EXTRA_AB_DEDUCTION = 0  
 SET @PRESENT_DAYS = 0  
 SET @A_DAYS = 0  
 SET @P_DAYS = 0  
 SET @UNPAID_LEAVE_DAYS = 0  
 SET @LEAVE_COUNT = 0  
 SET @GATE_PASS_DAYS = 0 -- GADRIWALA MUSLIM 27032015  
 SET @LATE_DEDUCT_DAYS = 0 -- GADRIWALA MUSLIM 27032015  
 SET @EARLY_DEDUCT_DAYS = 0 -- GADRIWALA MUSLIM 27032015  
 SET @WO_HO_DAYS = 0 -- GADRIWALA MUSLIM 27032015  
 SET @CUR_BRANCH_ID = 0  -- GADRIWALA MUSLIM 24-12-2015   
 SET @PREV_BRANCH_ID = 0 -- GADRIWALA MUSLIM 24-12-2015  
  
 DECLARE @WO_INC AS TINYINT  
 DECLARE @HO_INC AS TINYINT  
 DECLARE @PAYABLE_PRESENT_DAYS NUMERIC(18,2)        
 DECLARE @WEEKOFF_DAYS NUMERIC(18,2)  
 DECLARE @HOLIDAY_DAYS NUMERIC(18,2)  
 DECLARE @LC_DAYS NUMERIC(18,2)  
 DECLARE @GP_DAYS NUMERIC(18,2)  
 DECLARE @PAID_LEAVE NUMERIC(18,2)  
  
 DECLARE @EARLY_COUNT_DAYS NUMERIC(18,2) -- Added By nilesh Patel on 09062016  
         
 SET @WO_INC = 0  
 SET @HO_INC = 0  
 SET @PAYABLE_PRESENT_DAYS = 0  
  
 --PRINT 'ATT_MUSTERVALUE- START' +  CONVERT(VARCHAR(20),GETDATE(),114)  
  
  
   
          
 SELECT A.EMP_CODE,A.EMP_FULL_NAME,CASE WHEN ISNULL(STATUS_2,'') = '*' THEN STATUS + STATUS_2 ELSE A.STATUS END AS STATUS,ISNULL(STATUS_2,'') AS  STATUS_2, P_DAYS,A_DAYS,WO_HO_DAY,  --Change by Jaina 15-12-2017 in Status (Hightlight latemark)  
   CASE ROW_ID    
    WHEN 32  
     THEN 'P'   
    WHEN 33  
     THEN 'A'   
    WHEN 34  
     THEN 'L'  
    WHEN 35  
     THEN 'W'  
    WHEN 36  
     THEN 'H'  
    WHEN 37  
     THEN 'LC'  
    WHEN 38  
     THEN 'GP'  -- CHANGED BY GADRIWALA MUSLIM 27042015  
    ELSE  
     --CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2))   
     CASE When @IS_WHOSOFF = 1 Then  
      RIGHT(CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2)  
     Else  
      RIGHT('0' + CAST(DATEPART(DAY,FOR_DATE) AS VARCHAR(2)) ,2) +  '-' + RIGHT('0' + CAST(DATEPART(Month,FOR_DATE) AS VARCHAR(2)) , 2)  
     END  
   END AS ROW_ID,ISNULL(EXTRA_AB_DEDUCTION,0) AS EXTRA_AB_DEDUCTION, LEAVE_COUNT,EARLY_DEDUCT_DAYS,A.BRANCH_ID, A.EMP_ID, A.FOR_DATE  
 INTO #ATT_MUSTER_EXCEL_TEMP  
 FROM #ATT_MUSTER_EXCEL A INNER JOIN T0080_EMP_MASTER E WITH (NOLOCK) ON A.EMP_ID = E.EMP_ID  
 ORDER BY A.EMP_ID,FOR_DATE        
   
 DECLARE @COLS VARCHAR(MAX)  
 DECLARE @UPDATE_COLS VARCHAR(MAX)  
   
 DELETE FROM #ATT_MUSTER_EXCEL_TEMP WHERE FOR_DATE NOT BETWEEN @FROM_DATE AND @TO_DATE AND CHARINDEX('-', ROW_ID) > 0  
   
 SELECT @COLS = ISNULL(@COLS + ',', '') + QUOTENAME(ROW_ID),  
   @UPDATE_COLS = ISNULL(@UPDATE_COLS + ',', '') + QUOTENAME(ROW_ID) + ' = T.' + QUOTENAME(ROW_ID)  
 FROM (SELECT DISTINCT REPLACE(REPLACE(ROW_ID, ' ', '_'), '.', '_') AS ROW_ID FROM #ATT_MUSTER_EXCEL_TEMP ) T  
   
   
 /*Following Code is modified and with Pivot Table Feature to Optimze The Performance*/  
 --SET @TEST1 ='UPDATE #CROSSTAB SET [' + cast(@DESCRIPTION AS varchar(5)) + '] = ''' +  cast(@STATUS as varchar(50))  + '''  WHERE  Emp_ID = '''+ CAST(@EMP_ID as VARCHAR(10)) + ''''          
 DECLARE @SQL_QUERY VARCHAR(MAX)  
 SET @SQL_QUERY = '  
     UPDATE C  
     SET  ' + @UPDATE_COLS + '         
     FROM (  
        SELECT  EMP_ID, ROW_ID,[STATUS]  
        FROM #ATT_MUSTER_EXCEL_TEMP          
       ) PVT  
       PIVOT (  
        MAX([STATUS]) FOR ROW_ID IN (' + @COLS + ')  
       ) T  
       INNER JOIN #CROSSTAB C ON T.EMP_ID=C.EMP_ID'  
-- PRINT @SQL_QUERY  
 EXEC(@SQL_QUERY)  
 --update #CROSSTAB set LC=cast(P as numeric(18,2))-Cast(LC as numeric(18,2))  
   --select * from #CROSSTAB  
  
 /*Following Code is modified and with Pivot Table Feature to Optimze The Performance*/  
 /*  
 --ADDED BY GADRIWALA MUSLIM 27032015 - START  
 --UPDATE #CROSSTAB  SET EARLY_DEDUCT_DAYS = EARLY_DEDUCT_DAYS + ISNULL(@EARLY_DEDUCT_DAYS,0) WHERE CODE =@CODE         
 IF (@P_DAYS = 1)  -- FOR PRESENT DAY IN WEEK OFF OR HOLIDAY DAY  
  BEGIN  
   UPDATE #CROSSTAB    
   SET  EARLY_DEDUCT_DAYS = EARLY_DEDUCT_DAYS + @EARLY_DEDUCT_DAYS  
     --,WO_HO_DAY =  ISNULL(WO_HO_DAY,0) + @WO_HO_DAYS   
     /* Comment by Ankit/Hardikbhai 01012016   
      --Total Days set wrong --It Calculate Both Present & weekly off already then not need to Deduct days   
      (Client Wonder :Mail - 01012016) */  
   WHERE Emp_ID =@Emp_ID  
   print 'STAGE 05.03 : ' + CONVERT(VARCHAR(20), GETDATE(), 114)  
  END   
 ELSE IF (@P_DAYS < @WO_HO_DAYS AND @P_DAYS > 0)  -- WORK HALF DAY ON WEEK OFF OR HOLIDAY  
  BEGIN  
   UPDATE #CROSSTAB    
   SET  EARLY_DEDUCT_DAYS = EARLY_DEDUCT_DAYS + @EARLY_DEDUCT_DAYS  
     --,WO_HO_DAY =  ISNULL(WO_HO_DAY,0) + (@WO_HO_DAYS - @P_DAYS)   
     /* Comment by Ankit/Hardikbhai 01012016   
      --Total Days set wrong --It Calculate Both Present & weekly off already then not need to Deduct days   
      (Client Wonder :Mail - 01012016) */  
   WHERE Emp_ID =@Emp_ID  
   print 'STAGE 05.04 : ' + CONVERT(VARCHAR(20), GETDATE(), 114)  
  END   
 ELSE  
  BEGIN  
   UPDATE #CROSSTAB    
   SET  EARLY_DEDUCT_DAYS = EARLY_DEDUCT_DAYS + @EARLY_DEDUCT_DAYS  
   WHERE Emp_ID =@Emp_ID  
   print 'STAGE 05.05 : ' + CONVERT(VARCHAR(20), GETDATE(), 114)  
  END  
 */  
 UPDATE C  
 SET  EARLY_DEDUCT_DAYS = IsNull(T.EARLY_DEDUCT_DAYS,0)  
 FROM #CROSSTAB C   
   INNER JOIN (SELECT EMP_ID, SUM(EARLY_DEDUCT_DAYS) AS EARLY_DEDUCT_DAYS  
      FROM #ATT_MUSTER_EXCEL_TEMP T  
      GROUP BY EMP_ID) T ON C.EMP_ID=T.EMP_ID  
        
   
 /*  
 IF (@A_DAYS = 1 OR @A_DAYS = 0.5) AND NOT @STATUS_2 IS NULL AND ISNUMERIC(@STATUS_2) = 1 --@STATUS_2 <> ''  commented and change jimit 20052016  
    AND @STATUS_2 <> 'LC' AND @STATUS_2 <> 'EC' and @Status_2 <> 'EG' and @Status_2 <> 'P'  --AND @LEAVE_COUNT IS NULL  --COMMENTED BY HARDIK 02/12/2015 AS UNPAID LEAVE AND PAID LEAVE ON SAME DATE, ABSENT DAY COUNT SHOWING WRONG         
    SET @UNPAID_LEAVE_DAYS = @UNPAID_LEAVE_DAYS + (@STATUS_2 - ISNULL(@LEAVE_COUNT,0))  
 IF @UNPAID_LEAVE_DAYS > 0  
      INSERT INTO #UNPAID_LEAVE  
      SELECT @EMP_ID,@CODE,@UNPAID_LEAVE_DAYS  
        
 */  
 INSERT INTO #UNPAID_LEAVE  
 SELECT EMP_ID,EMP_CODE,SUM(CAST(STATUS_2 AS NUMERIC(18,2))) - SUM(ISNULL(LEAVE_COUNT,0))  
 FROM #ATT_MUSTER_EXCEL_TEMP T  
 WHERE A_DAYS IN (1,0.5) AND IsNumeric(IsNull(STATUS_2,'NULL')) = 1  
   AND STATUS_2 NOT IN ('LC', 'EC', 'EG', 'P')   
 GROUP BY EMP_ID,EMP_CODE  
     
 /*For EXTRA_AB_DEDUCTION*/  
   
 CREATE TABLE #EMP_ATTENDANCE  
 (  
  EMP_ID   NUMERIC,  
  Present_Days NUMERIC(9,2),  
  Absent_Days  NUMERIC(9,2),  
  Leave_Days  NUMERIC(9,2),  
  ULeave_Days  NUMERIC(9,2),  
  Extra_AB_Deduction NUMERIC(9,2)  
 )  
   
 INSERT INTO #EMP_ATTENDANCE(EMP_ID,ULeave_Days)  
 SELECT C.EMP_ID , IsNull(UNPAID_LEAVE,0)  
 FROM #CROSSTAB C  
   LEFT OUTER JOIN #UNPAID_LEAVE U ON C.EMP_ID=U.EMP_ID  
   
   
 UPDATE EA  
 SET  Present_Days = IsNull(P,0)  
 FROM #EMP_ATTENDANCE EA  
   LEFT OUTER JOIN #CROSSTAB C ON EA.EMP_ID=C.EMP_ID AND IsNumeric(IsNull(P, '')) =1      
   
 /*  
 IF @DESCRIPTION = 'A'  
  BEGIN  
   IF @UNPAID_LEAVE_DAYS > 0 AND @STATUS >= @UNPAID_LEAVE_DAYS AND @LEAVE_COUNT IS NULL  
    SET @STATUS = @STATUS - @UNPAID_LEAVE_DAYS  
         
   --SET @ABSENT_DAYS = ISNULL(@STATUS,0)  + (ISNULL(@STATUS,0)  * @EXTRA_AB_DEDUCTION)  
   SET @ABSENT_DAYS = CASE WHEN (ISNULL(@STATUS,0)  * @EXTRA_AB_DEDUCTION) % 0.50 = 0 THEN (ISNULL(@STATUS,0)  * @EXTRA_AB_DEDUCTION) ELSE (ISNULL(@STATUS,0)  * @EXTRA_AB_DEDUCTION)+0.25 END  
     
   SELECT @PRESENT_DAYS = P FROM #CROSSTAB WHERE Emp_ID =@Emp_ID AND ISNUMERIC(ISNULL(P, '')) =1 AND ISNULL(P, '') <> ''  
     
   IF @EXTRA_AB_DEDUCTION > 0  
    BEGIN   
     IF @PRESENT_DAYS >= @ABSENT_DAYS  
      BEGIN  
       SET @TEST1 ='UPDATE #CROSSTAB SET PAYABLE_PRESENT_DAYS =  ' +  CAST(@PRESENT_DAYS - ISNULL(@ABSENT_DAYS,0) AS VARCHAR(50))   + ' WHERE  EMP_ID = '''+ CAST(@EMP_ID AS VARCHAR(10)) + ''''          
       EXEC(@TEST1)          
       SET @ALTER_COLS=''              
       print 'STAGE 05.06 : ' + CONVERT(VARCHAR(20), GETDATE(), 114)  
      END  
     ELSE  
      UPDATE #CROSSTAB SET PAYABLE_PRESENT_DAYS = 0 WHERE Emp_ID =@Emp_ID  
    END  
   ELSE  
    UPDATE #CROSSTAB SET PAYABLE_PRESENT_DAYS=@PRESENT_DAYS WHERE Emp_ID =@Emp_ID     
      
   print 'STAGE 05.07 : ' + CONVERT(VARCHAR(20), GETDATE(), 114)  
  END  
 */   
   
   
   
 UPDATE EA  
 SET  Absent_Days = CASE WHEN ULeave_Days < Absent_Days THEN Absent_Days - ULeave_Days ELSE Absent_Days END  
 FROM #EMP_ATTENDANCE EA  
   
 UPDATE EA  
 SET  Absent_Days = Isnull(EA.Absent_Days,0) + Isnull((Isnull(EA.Absent_Days,0) * Isnull(Ex.EXTRA_AB_DEDUCTION,0)),0)  
       /* Commented by Hardik 01/07/2019 for Azure as Calculation is wrong for Extra Absent */  
       /*  
       (Present_Days * Ex.EXTRA_AB_DEDUCTION) +   
       CASE WHEN (Present_Days * Ex.EXTRA_AB_DEDUCTION) % 0.5 > 0 THEN  
        (0.5  - ((Present_Days * Ex.EXTRA_AB_DEDUCTION) % 0.5))  
       ELSE  
        0  
       END  
       */  
 FROM #EMP_ATTENDANCE EA  
   INNER JOIN (SELECT EMP_ID, Max(EXTRA_AB_DEDUCTION) AS EXTRA_AB_DEDUCTION  
      FROM #ATT_MUSTER_EXCEL_TEMP EX   
      GROUP BY EMP_ID) EX ON EA.EMP_ID=EX.EMP_ID  
   
   
 UPDATE C   
 SET  PAYABLE_PRESENT_DAYS = Case When Isnull(EA.Present_Days,0) > Isnull(EA.Absent_Days,0) THEN Isnull(EA.Present_Days,0) - Isnull(EA.Absent_Days,0) ELSE 0 END  
 FROM #CROSSTAB C     
   INNER JOIN #EMP_ATTENDANCE EA ON C.EMP_ID=EA.EMP_ID  
    
     
   
   
 /*  
 IF @DESCRIPTION = 'GP' AND @IS_WHOSOFF = 1 -- ADDED BY GADRIWALA MUSLIM 17062015 - START  
  BEGIN  
   IF ISNULL(@EXTRA_AB_DEDUCTION,0) = 0  
    BEGIN  
     IF @PREV_BRANCH_ID <> @CUR_BRANCH_ID   
      BEGIN  
       SELECT @HO_INC =  INC_HOLIDAY,@WO_INC = INC_WEEKOFF FROM T0040_GENERAL_SETTING GS INNER JOIN  
        (  
         SELECT MAX(FOR_DATE) AS FOR_DATE,GEN_ID FROM DBO.T0040_GENERAL_SETTING   
         WHERE FOR_DATE < = @TO_DATE AND BRANCH_ID = @CUR_BRANCH_ID   
         AND CMP_ID = @CMP_ID GROUP BY GEN_ID   
        ) QRY ON QRY.GEN_ID = GS.GEN_ID  
       WHERE BRANCH_ID = @CUR_BRANCH_ID   
         
       print 'STAGE 05.08 : ' + CONVERT(VARCHAR(20), GETDATE(), 114)  
       SET @PREV_BRANCH_ID = @CUR_BRANCH_ID --Ankit 01062016  
      END  
      
     SET @WEEKOFF_DAYS = 0  
     SET @HOLIDAY_DAYS = 0  
     SET @LC_DAYS = 0  
     SET @GP_DAYS = 0  
     SET @PAID_LEAVE = 0  
     SET @EARLY_COUNT_DAYS = 0 --Added by nilesh patel on 09062016  
      
     SELECT @WEEKOFF_DAYS = CASE WHEN W = '' THEN 0 ELSE CAST(W AS NUMERIC(18,2)) END,  
         @HOLIDAY_DAYS = CASE WHEN H = '' THEN 0 ELSE CAST(H AS NUMERIC(18,2)) END,   
         @LC_DAYS = CASE WHEN LC = '' THEN 0 ELSE CAST(LC AS NUMERIC(18,2)) END,  
         @GP_DAYS = CASE WHEN GP = '' THEN 0 ELSE CAST(GP AS NUMERIC(18,2)) END,  
         @PAID_LEAVE = CASE WHEN L = '' THEN 0 ELSE CAST(L AS NUMERIC(18,2))END,  
         @EARLY_COUNT_DAYS = Case When EARLY_DEDUCT_DAYS > 0 Then Isnull(EARLY_DEDUCT_DAYS,0) Else 0 END -- Added by Nilesh   
     FROM #CROSSTAB WHERE Emp_ID =@Emp_ID  
            
      
     print 'STAGE 05.09 : ' + CONVERT(VARCHAR(20), GETDATE(), 114)  
     SET @PAYABLE_PRESENT_DAYS = ISNULL(@PRESENT_DAYS,0)   
          
     IF ISNULL(@HO_INC,0) = 1  
      SET @PAYABLE_PRESENT_DAYS = @PAYABLE_PRESENT_DAYS +  ISNULL(@HOLIDAY_DAYS,0)  
       
     IF ISNULL(@WO_INC,0) = 1  
      SET @PAYABLE_PRESENT_DAYS = @PAYABLE_PRESENT_DAYS +  ISNULL(@WEEKOFF_DAYS,0)   
       
     SET @PAYABLE_PRESENT_DAYS = (@PAYABLE_PRESENT_DAYS + ISNULL(@PAID_LEAVE,0)) - ( ISNULL(@LC_DAYS,0) + ISNULL(@GP_DAYS,0) + ISNULL(@EARLY_COUNT_DAYS,0))  
      
     IF @PAYABLE_PRESENT_DAYS < 0   
      SET @PAYABLE_PRESENT_DAYS = 0  
       
     UPDATE #CROSSTAB SET PAYABLE_PRESENT_DAYS= @PAYABLE_PRESENT_DAYS WHERE Emp_ID =@Emp_ID  
     print 'STAGE 05.10 : ' + CONVERT(VARCHAR(20), GETDATE(), 114)  
    END  
  END  
 */  
   
 ---ADDED BY NIMESH 15-JUL-2015 (TO GET SETTING FROM GENERAL SETTINGS FOR ADJUST LATE COMMING IN LEAVE)  
   
 UPDATE #CROSSTAB SET LATE_WITH_LEAVE=T.LATE_WITH_LEAVE  
 FROM #CROSSTAB C INNER JOIN  
   (SELECT T.CMP_ID, T.EMP_ID, T.BRANCH_ID, T.FOR_DATE,G.LATE_WITH_LEAVE  
   FROM (  
     SELECT G.CMP_ID, INC.EMP_ID, INC.BRANCH_ID, MAX(FOR_DATE) AS FOR_DATE  
     FROM T0040_GENERAL_SETTING G WITH (NOLOCK) INNER JOIN   
      (SELECT CMP_ID,INC1.EMP_ID,BRANCH_ID   
      FROM T0095_INCREMENT INC1 WITH (NOLOCK) INNER JOIN #CROSSTAB T ON INC1.Emp_ID=T.EMP_ID  
        INNER JOIN (  
         SELECT MAX(INCREMENT_ID) AS INCREMENT_ID  
         FROM T0095_INCREMENT INC2 WITH (NOLOCK)  
           INNER JOIN (  
            SELECT MAX(INCREMENT_EFFECTIVE_DATE) AS INCREMENT_EFFECTIVE_DATE, INC3.EMP_ID  
            FROM T0095_INCREMENT INC3 WITH (NOLOCK) INNER JOIN #CROSSTAB T ON INC3.Emp_ID=T.EMP_ID  
            WHERE INC3.CMP_ID=@CMP_ID   
              AND INC3.INCREMENT_EFFECTIVE_DATE <=@TO_DATE  
            GROUP BY INC3.EMP_ID  
            ) INC3 ON INC2.Emp_ID=INC3.Emp_ID AND INC2.Increment_Effective_Date=INC3.Increment_Effective_Date  
         WHERE INC2.CMP_ID=@CMP_ID   
        ) INC2 ON INC1.INCREMENT_ID=INC2.INCREMENT_ID  
      ) INC ON G.CMP_ID=INC.CMP_ID AND G.BRANCH_ID=INC.BRANCH_ID      
     GROUP BY G.CMP_ID, INC.EMP_ID, INC.BRANCH_ID    
     ) T INNER JOIN T0040_GENERAL_SETTING G WITH (NOLOCK) ON T.BRANCH_ID=G.BRANCH_ID AND T.CMP_ID=G.CMP_ID AND T.FOR_DATE=G.FOR_DATE        
   ) T ON C.EMP_ID=T.EMP_ID   
 WHERE T.CMP_ID=@CMP_ID  
    
    
  
 SELECT GS.Branch_ID,INC_HOLIDAY,INC_WEEKOFF  
 INTO #GENERAL_SETTING  
 FROM T0040_GENERAL_SETTING GS WITH (NOLOCK)  
   INNER JOIN(  
       SELECT MAX(FOR_DATE) AS FOR_DATE,GS1.Branch_ID  
       FROM DBO.T0040_GENERAL_SETTING GS1 WITH (NOLOCK)  
         INNER JOIN #Emp_Cons EC ON GS1.Branch_ID=EC.Branch_ID  
       WHERE FOR_DATE < = @TO_DATE AND CMP_ID = @CMP_ID   
       GROUP BY GS1.Branch_ID   
      ) GS1 ON GS1.Branch_ID = GS.Branch_ID AND GS.FOR_DATE = GS1.FOR_DATE  
  
 IF @IS_WHOSOFF = 1  
  BEGIN  
     
   UPDATE C  
   SET  PAYABLE_PRESENT_DAYS= (EA.Present_Days   
           + Case When INC_HOLIDAY = 1 Then HOLIDAY_DAYS Else 0 End  
           + Case When INC_WEEKOFF = 1 Then WEEKOFF_DAYS Else 0 End  
           + PAID_LEAVE)  
           - (LC_DAYS + GP_DAYS + EARLY_COUNT_DAYS)  
   FROM #CROSSTAB C  
     INNER JOIN (SELECT Emp_ID,  
          WEEKOFF_DAYS = IsNull(CASE WHEN W = '' THEN 0 ELSE CAST(W AS NUMERIC(18,2)) END,0),  
          HOLIDAY_DAYS = IsNull(CASE WHEN H = '' THEN 0 ELSE CAST(H AS NUMERIC(18,2)) END, 0),  
          LC_DAYS = IsNull(CASE WHEN LC = '' OR LATE_WITH_LEAVE=1 THEN 0 ELSE CAST(LC AS NUMERIC(18,2)) END,0),  
          GP_DAYS = IsNull(CASE WHEN GP = '' THEN 0 ELSE CAST(GP AS NUMERIC(18,2)) END,0),  
          PAID_LEAVE = IsNull(CASE WHEN L = '' THEN 0 ELSE CAST(L AS NUMERIC(18,2))END,0),  
          EARLY_COUNT_DAYS = IsNull(Case When EARLY_DEDUCT_DAYS = 0 OR LATE_WITH_LEAVE = 1 Then  0 Else Isnull(EARLY_DEDUCT_DAYS,0) END,0)  
        FROM #CROSSTAB ) C1 ON C.EMP_ID=C1.EMP_ID  
     /* ---Modify By Jignesh 22-Jan-2020---  
     INNER JOIN #EMP_CONS EC ON C.EMP_ID=EC.EMP_ID  
     INNER JOIN #GENERAL_SETTING GS ON GS.Branch_ID=EC.Branch_ID  
     INNER JOIN #EMP_ATTENDANCE EA ON C.EMP_ID=EA.EMP_ID  
     */  
     LEFT OUTER JOIN #EMP_CONS EC ON C.EMP_ID=EC.EMP_ID  
     LEFT OUTER JOIN #GENERAL_SETTING GS ON GS.Branch_ID=EC.Branch_ID  
     LEFT OUTER JOIN #EMP_ATTENDANCE EA ON C.EMP_ID=EA.EMP_ID  
       
   UPDATE C  
   SET  PAYABLE_PRESENT_DAYS= 0.00  
   FROM #CROSSTAB C  
   WHERE PAYABLE_PRESENT_DAYS < 0.00  
  END  
   
   
 /*  
   
 DECLARE ATT_MUSTERVALUE CURSOR FOR    
 SELECT *  
 FROM #ATT_MUSTER_EXCEL_TEMP        
 ORDER BY EMP_ID,FOR_DATE   
   
  
   
 OPEN ATT_MUSTERVALUE          
 FETCH NEXT FROM ATT_MUSTERVALUE INTO @CODE,@EMPNAME,@STATUS,@STATUS_2,@P_DAYS,@A_DAYS,@WO_HO_DAYS,@DESCRIPTION,@EXTRA_AB_DEDUCTION,@LEAVE_COUNT,@EARLY_DEDUCT_DAYS,@CUR_BRANCH_ID,@EMP_ID  
 WHILE @@FETCH_STATUS = 0          
  BEGIN        
          
   IF @PRE_EMP_CODE <> @CODE  
    SET @UNPAID_LEAVE_DAYS = 0  
  
   SET @DESCRIPTION_ORG=@DESCRIPTION          
   SET @DESCRIPTION=REPLACE(REPLACE(@DESCRIPTION,' ','_'),'.','_')     
  
       
     
   SET @TEST1 ='UPDATE #CROSSTAB SET [' + cast(@DESCRIPTION AS varchar(5)) + '] = ''' +  cast(@STATUS as varchar(50))  + '''  WHERE  Emp_ID = '''+ CAST(@EMP_ID as VARCHAR(10)) + ''''          
     
   EXEC(@TEST1)            
   SET @ALTER_COLS=''  
   
  
   IF ISNULL(@EARLY_DEDUCT_DAYS,0) = 0  
    SET @EARLY_DEDUCT_DAYS = 0  
   IF ISNULL(@WO_HO_DAYS,0) = 0  
    SET @WO_HO_DAYS = 0    
   IF ISNULL(@P_DAYS,0) = 0  
    SET @P_DAYS = 0  
    
   --ADDED BY GADRIWALA MUSLIM 27032015 - START  
   --UPDATE #CROSSTAB  SET EARLY_DEDUCT_DAYS = EARLY_DEDUCT_DAYS + ISNULL(@EARLY_DEDUCT_DAYS,0) WHERE CODE =@CODE         
   IF (@P_DAYS = 1)  -- FOR PRESENT DAY IN WEEK OFF OR HOLIDAY DAY  
    BEGIN  
     UPDATE #CROSSTAB    
     SET  EARLY_DEDUCT_DAYS = EARLY_DEDUCT_DAYS + @EARLY_DEDUCT_DAYS  
       --,WO_HO_DAY =  ISNULL(WO_HO_DAY,0) + @WO_HO_DAYS   
       /* Comment by Ankit/Hardikbhai 01012016   
        --Total Days set wrong --It Calculate Both Present & weekly off already then not need to Deduct days   
        (Client Wonder :Mail - 01012016) */  
     WHERE Emp_ID =@Emp_ID  
    END   
   ELSE IF (@P_DAYS < @WO_HO_DAYS AND @P_DAYS > 0)  -- WORK HALF DAY ON WEEK OFF OR HOLIDAY  
    BEGIN  
     UPDATE #CROSSTAB    
     SET  EARLY_DEDUCT_DAYS = EARLY_DEDUCT_DAYS + @EARLY_DEDUCT_DAYS  
       --,WO_HO_DAY =  ISNULL(WO_HO_DAY,0) + (@WO_HO_DAYS - @P_DAYS)   
       /* Comment by Ankit/Hardikbhai 01012016   
        --Total Days set wrong --It Calculate Both Present & weekly off already then not need to Deduct days   
        (Client Wonder :Mail - 01012016) */  
     WHERE Emp_ID =@Emp_ID  
    END   
   ELSE  
    BEGIN  
     UPDATE #CROSSTAB    
     SET  EARLY_DEDUCT_DAYS = EARLY_DEDUCT_DAYS + @EARLY_DEDUCT_DAYS  
     WHERE Emp_ID =@Emp_ID  
    END  
    
   --ADDED BY GADRIWALA MUSLIM 27032015 - END  
   IF (@A_DAYS = 1 OR @A_DAYS = 0.5) AND NOT @STATUS_2 IS NULL AND ISNUMERIC(@STATUS_2) = 1 --@STATUS_2 <> ''  commented and change jimit 20052016  
    AND @STATUS_2 <> 'LC' AND @STATUS_2 <> 'EC' and @Status_2 <> 'EG' and @Status_2 <> 'P'  --AND @LEAVE_COUNT IS NULL  --COMMENTED BY HARDIK 02/12/2015 AS UNPAID LEAVE AND PAID LEAVE ON SAME DATE, ABSENT DAY COUNT SHOWING WRONG         
    SET @UNPAID_LEAVE_DAYS = @UNPAID_LEAVE_DAYS + (@STATUS_2 - ISNULL(@LEAVE_COUNT,0))  
      
   --PRINT '@DESCRIPTION = ''A'' START' + convert(varchar(20),getdate(),114)   
   IF @DESCRIPTION = 'A'  
    BEGIN  
     IF @UNPAID_LEAVE_DAYS > 0  
      INSERT INTO #UNPAID_LEAVE  
      SELECT @EMP_ID,@CODE,@UNPAID_LEAVE_DAYS  
       
     IF @UNPAID_LEAVE_DAYS > 0 AND @STATUS >= @UNPAID_LEAVE_DAYS AND @LEAVE_COUNT IS NULL  
      SET @STATUS = @STATUS - @UNPAID_LEAVE_DAYS  
           
     --SET @ABSENT_DAYS = ISNULL(@STATUS,0)  + (ISNULL(@STATUS,0)  * @EXTRA_AB_DEDUCTION)  
     SET @ABSENT_DAYS = CASE WHEN (ISNULL(@STATUS,0)  * @EXTRA_AB_DEDUCTION) % 0.50 = 0 THEN (ISNULL(@STATUS,0)  * @EXTRA_AB_DEDUCTION) ELSE (ISNULL(@STATUS,0)  * @EXTRA_AB_DEDUCTION)+0.25 END  
       
     SELECT @PRESENT_DAYS = P FROM #CROSSTAB WHERE Emp_ID =@Emp_ID AND ISNUMERIC(ISNULL(P, '')) =1 AND ISNULL(P, '') <> ''  
       
     IF @EXTRA_AB_DEDUCTION > 0  
      BEGIN   
       IF @PRESENT_DAYS >= @ABSENT_DAYS  
        BEGIN  
         SET @TEST1 ='UPDATE #CROSSTAB SET PAYABLE_PRESENT_DAYS =  ' +  CAST(@PRESENT_DAYS - ISNULL(@ABSENT_DAYS,0) AS VARCHAR(50))   + ' WHERE  EMP_ID = '''+ CAST(@EMP_ID AS VARCHAR(10)) + ''''          
         EXEC(@TEST1)          
         SET @ALTER_COLS=''              
        END  
       ELSE  
        UPDATE #CROSSTAB SET PAYABLE_PRESENT_DAYS = 0 WHERE Emp_ID =@Emp_ID  
      END  
     ELSE  
      UPDATE #CROSSTAB SET PAYABLE_PRESENT_DAYS=@PRESENT_DAYS WHERE Emp_ID =@Emp_ID     
     print 'STAGE 05.07 : ' + CONVERT(VARCHAR(20), GETDATE(), 114)  
    END  
      
  
   IF @DESCRIPTION = 'GP' AND @IS_WHOSOFF = 1 -- ADDED BY GADRIWALA MUSLIM 17062015 - START  
    BEGIN  
     IF ISNULL(@EXTRA_AB_DEDUCTION,0) = 0  
      BEGIN  
       IF @PREV_BRANCH_ID <> @CUR_BRANCH_ID   
        BEGIN  
         SELECT @HO_INC =  INC_HOLIDAY,@WO_INC = INC_WEEKOFF FROM T0040_GENERAL_SETTING GS INNER JOIN  
          (  
           SELECT MAX(FOR_DATE) AS FOR_DATE,GEN_ID FROM DBO.T0040_GENERAL_SETTING   
           WHERE FOR_DATE < = @TO_DATE AND BRANCH_ID = @CUR_BRANCH_ID   
           AND CMP_ID = @CMP_ID GROUP BY GEN_ID   
          ) QRY ON QRY.GEN_ID = GS.GEN_ID  
         WHERE BRANCH_ID = @CUR_BRANCH_ID   
           
         SET @PREV_BRANCH_ID = @CUR_BRANCH_ID --Ankit 01062016  
        END  
        
       SET @WEEKOFF_DAYS = 0  
       SET @HOLIDAY_DAYS = 0  
       SET @LC_DAYS = 0  
       SET @GP_DAYS = 0  
       SET @PAID_LEAVE = 0  
       SET @EARLY_COUNT_DAYS = 0 --Added by nilesh patel on 09062016  
        
       SELECT @WEEKOFF_DAYS = CASE WHEN W = '' THEN 0 ELSE CAST(W AS NUMERIC(18,2)) END,  
           @HOLIDAY_DAYS = CASE WHEN H = '' THEN 0 ELSE CAST(H AS NUMERIC(18,2)) END,   
           @LC_DAYS = CASE WHEN LC = '' THEN 0 ELSE CAST(LC AS NUMERIC(18,2)) END,  
           @GP_DAYS = CASE WHEN GP = '' THEN 0 ELSE CAST(GP AS NUMERIC(18,2)) END,  
           @PAID_LEAVE = CASE WHEN L = '' THEN 0 ELSE CAST(L AS NUMERIC(18,2))END,  
           @EARLY_COUNT_DAYS = Case When EARLY_DEDUCT_DAYS > 0 Then Isnull(EARLY_DEDUCT_DAYS,0) Else 0 END -- Added by Nilesh   
       FROM #CROSSTAB WHERE Emp_ID =@Emp_ID  
              
        
       SET @PAYABLE_PRESENT_DAYS = ISNULL(@PRESENT_DAYS,0)   
            
       IF ISNULL(@HO_INC,0) = 1  
        SET @PAYABLE_PRESENT_DAYS = @PAYABLE_PRESENT_DAYS +  ISNULL(@HOLIDAY_DAYS,0)  
         
       IF ISNULL(@WO_INC,0) = 1  
        SET @PAYABLE_PRESENT_DAYS = @PAYABLE_PRESENT_DAYS +  ISNULL(@WEEKOFF_DAYS,0)   
         
       -- Commented by Hardik 27/08/2018 as added LC case when condition in Update.. and also commented Nilesh code below side for Payable Present Days Update  
       --SET @PAYABLE_PRESENT_DAYS = (@PAYABLE_PRESENT_DAYS + ISNULL(@PAID_LEAVE,0)) - ( ISNULL(@LC_DAYS,0) + ISNULL(@GP_DAYS,0) + ISNULL(@EARLY_COUNT_DAYS,0))  
       SET @PAYABLE_PRESENT_DAYS = (@PAYABLE_PRESENT_DAYS + ISNULL(@PAID_LEAVE,0)) - (ISNULL(@GP_DAYS,0))  
        
       IF @PAYABLE_PRESENT_DAYS < 0   
        SET @PAYABLE_PRESENT_DAYS = 0  
         
       UPDATE T SET PAYABLE_PRESENT_DAYS=   
               Case When LATE_WITH_LEAVE = 0 THEN   
                 (ISNULL(Cast(@PAYABLE_PRESENT_DAYS AS NUMERIC(18,2)),0) - ISNULL(@LC_DAYS,0) - ISNULL(@EARLY_COUNT_DAYS,0))  
                ELSE  
                 ISNULL(Cast(@PAYABLE_PRESENT_DAYS AS NUMERIC(18,2)),0)  
               End   
       FROM #CROSSTAB T  
       WHERE Emp_ID =@Emp_ID  
  
      END  
    END  
     
   -- ADDED BY GADRIWALA MUSLIM 17062015 - END   
   SET @PRE_EMP_CODE = @CODE  
              
   FETCH NEXT FROM ATT_MUSTERVALUE INTO @CODE,@EMPNAME,@STATUS,@STATUS_2,@P_DAYS,@A_DAYS,@WO_HO_DAYS,@DESCRIPTION,@EXTRA_AB_DEDUCTION,@LEAVE_COUNT,@EARLY_DEDUCT_DAYS,@CUR_BRANCH_ID, @EMP_ID  
  END          
 CLOSE ATT_MUSTERVALUE           
 DEALLOCATE ATT_MUSTERVALUE                    
  
 */  
 --SELECT 1321  
  
 ---- ADD BY JIGNESH 05-08-2014---------------  
   
 IF @IS_WHOSOFF = 0 --- Added by Hardik 18/01/2021 for Bugs assinged by Sandip Redmine Number 16426  
  UPDATE #CROSSTAB   
  SET  A = ISNULL(A,0)-ISNULL(UL.UNPAID_LEAVE,0)  
  FROM #CROSSTAB T INNER JOIN T0080_EMP_MASTER EM ON T.EMP_ID= EM.Emp_ID -- COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS AND CMP_ID = @CMP_ID  
    LEFT OUTER JOIN (SELECT EMP_ID,CODE,ISNULL(SUM(UNPAID_LEAVE),0) AS UNPAID_LEAVE FROM #UNPAID_LEAVE GROUP BY EMP_ID,CODE ) AS UL ON T.EMP_ID=UL.EMP_ID  
 ------------------ END ---------------------------  
  
  
   
  ---- ADDED BY ROHIT ON 24092013  
 UPDATE  T   
 SET  PAYABLE_DAYS = (  
       --ISNULL(CAST((CASE WHEN PAYABLE_PRESENT_DAYS = '0' THEN '0.0' ELSE ISNULL(PAYABLE_PRESENT_DAYS,0) END) AS NUMERIC(18,2)),0) +  --- Commented by Hardik 04/07/2019 for Teksun as Total days goes above the Month days, added below line for Present add 
 
       ISNULL(CAST((CASE WHEN P = '' THEN '0.0' ELSE ISNULL(P,0) END) AS NUMERIC(18,2)),0) +   
       CASE WHEN Inc_Holiday=0 THEN '0.0' ELSE ISNULL(CAST((CASE WHEN H = '' THEN '0.0' ELSE ISNULL(H,0) END) AS NUMERIC(18,2)),0) END +   
       CASE WHEN Inc_Weekoff=0 THEN '0.0' ELSE ISNULL(CAST((CASE WHEN W = '' THEN '0.0' ELSE ISNULL(W,0) END) AS NUMERIC(18,2)),0) END +    
       ISNULL(CAST((CASE WHEN L = '' THEN '0.0' ELSE ISNULL(L,0) END) AS NUMERIC(18,2)),0) -  
       ISNULL(CAST((CASE WHEN GP = '' THEN '0.0' ELSE ISNULL(GP,0) END) AS NUMERIC(18,2)),0) -  
       (CASE WHEN isnull(LATE_WITH_LEAVE,0) = 0 THEN ISNULL(CAST((CASE WHEN LC = '' THEN '0.0' ELSE ISNULL(LC,0) END) AS NUMERIC(18,2)),0) ELSE 0 END) -  
       ISNULL(EARLY_DEDUCT_DAYS,0)   
      )     
 FROM #CROSSTAB T   
   INNER JOIN T0080_EMP_MASTER EM ON T.EMP_ID=EM.EMP_ID  --COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS AND CMP_ID = @CMP_ID  
   LEFT OUTER JOIN #UNPAID_LEAVE UL ON T.EMP_ID = UL.EMP_ID  
   INNER JOIN #EMP_CONS EC ON T.EMP_ID=EC.EMP_ID  
   INNER JOIN #GENERAL_SETTING GS ON GS.Branch_ID=EC.Branch_ID  
     
 UPDATE  #CROSSTAB   
 SET  PAYABLE_DAYS = 0    
 WHERE PAYABLE_DAYS < 0  
  
 -- ENDED BY ROHIT ON 24092013  
   
  
 -------------- MODIFY JIGNESH 31-07-2014--------------------  
  
 --SELECT ROW_NUMBER() OVER(ORDER BY CODE ASC) AS ROW,* FROM #CROSSTAB C ORDER BY CODE  
 --DROP TABLE #CROSSTAB  
 --DROP TABLE #ATT_MUSTER_EXCEL  
  
 ----------- ADD BY JIGNESH 31-07-2014 LEAVE NAME ---------------  
 DECLARE @QRY AS NVARCHAR(MAX)  
  
 CREATE table #EMPLAVEDETAIL  
 (  
  ID_NUM INT IDENTITY(1,1),  
  IEMP_ID INT  
 )  
  
 CREATE table #EMPDATA  
 (  
  EMP_ID  NUMERIC,  
  ICODE  VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  PAYABLE_PRESENT_DAYS  VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  PAYABLE_DAYS VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,  
  EARLY_DEDUCT_DAYS NUMERIC(18,2) DEFAULT 0  -- ADDED BY GADRIWALA 27032015   
 )  
  
  
 -------------------END -------------------------------  
  
  
 ----------------- GET EMP WISE LEAVE DETAIL ---------------------------  
 DECLARE @OD_COMOFF_SETTING INT  
 --OD--COMP  
 SELECT @OD_COMOFF_SETTING =ISNULL(SETTING_VALUE,0)  
 FROM DBO.T0040_SETTING WITH (NOLOCK) WHERE CMP_ID=@CMP_ID AND SETTING_NAME  = 'OD AND COMPOFF LEAVE CONSIDER AS PRESENT'  
  
   
 IF ISNULL(@OD_COMOFF_SETTING,0) = 0  
  BEGIN       
   SELECT     EMP_ID, CAST(LEAVE_CODE AS VARCHAR(50)) AS LEAVE_CODE, ISNULL(SUM(CASE WHEN LM.LEAVE_CODE = 'COMP' THEN LT.COMPOFF_USED ELSE LT.LEAVE_USED END),0) AS LEAVEDAYS  
   INTO #EMP_LEAVE1  
   FROM       T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK)  
      ON LT.LEAVE_ID = LM.LEAVE_ID  
  
   WHERE     (FOR_DATE BETWEEN @FROM_DATE AND @TO_DATE) AND LT.CMP_ID = @CMP_ID   
      AND (LT.LEAVE_USED <> 0 OR LT.COMPOFF_USED <> 0)  
      --AND LM.LEAVE_PAID_UNPAID = 'P'  
      AND EMP_ID IN (SELECT DISTINCT EMP_ID FROM #ATT_MUSTER_EXCEL)  
   GROUP BY EMP_ID, LEAVE_CODE  
   ORDER BY EMP_ID, LEAVE_CODE            
     
   INSERT INTO #EMP_LEAVE1         
   SELECT     LT.EMP_ID, LM.LEAVE_CODE + '_OPENING' AS LEAVE_CODE, ISNULL(SUM(CASE WHEN LM.LEAVE_CODE = 'COMP' THEN LT.CompOff_Credit ELSE LT.LEAVE_CLOSING END),0) AS LEAVEDAYS  
   FROM       T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN   
      T0040_LEAVE_MASTER LM WITH (NOLOCK) ON LT.LEAVE_ID = LM.LEAVE_ID INNER JOIN  
      (SELECT L.EMP_ID,MAX(L.FOR_DATE) AS FOR_DATE1, L.Leave_ID   
       FROM T0140_LEAVE_TRANSACTION L WITH (NOLOCK) INNER JOIN #ATT_MUSTER_EXCEL A ON L.Emp_ID = A.EMP_ID   
       WHERE L.FOR_DATE <= @FROM_DATE  
       GROUP BY  L.EMP_ID,L.Leave_ID) QRY ON LT.Emp_ID=QRY.Emp_ID AND LT.For_Date=QRY.FOR_DATE1 AND LT.Leave_ID=QRY.Leave_ID  
   WHERE    LT.CMP_ID = @CMP_ID   
      AND LT.EMP_ID IN (SELECT DISTINCT EMP_ID FROM #ATT_MUSTER_EXCEL)  
      AND LM.LEAVE_CODE IN (SELECT DISTINCT LEAVE_CODE FROM #EMP_LEAVE1)  
   GROUP BY LT.EMP_ID, LM.LEAVE_CODE  
   ORDER BY LT.EMP_ID, LEAVE_CODE  
  
   INSERT INTO #EMP_LEAVE1         
   SELECT     LT.EMP_ID, LM.LEAVE_CODE + '_CLOSING' AS LEAVE_CODE, ISNULL(SUM(CASE WHEN LM.LEAVE_CODE = 'COMP' THEN LT.CompOff_Balance ELSE LT.LEAVE_CLOSING END),0) AS LEAVEDAYS  
   FROM       T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN   
      T0040_LEAVE_MASTER LM WITH (NOLOCK) ON LT.LEAVE_ID = LM.LEAVE_ID INNER JOIN  
      (SELECT L.EMP_ID,MAX(L.FOR_DATE) AS FOR_DATE1, L.Leave_ID   
       FROM T0140_LEAVE_TRANSACTION L WITH (NOLOCK) INNER JOIN #ATT_MUSTER_EXCEL A ON L.Emp_ID = A.EMP_ID   
       WHERE L.FOR_DATE <= @TO_DATE  
       GROUP BY  L.EMP_ID,L.Leave_ID) QRY ON LT.Emp_ID=QRY.Emp_ID AND LT.For_Date=QRY.FOR_DATE1 AND LT.Leave_ID=QRY.Leave_ID  
   WHERE    LT.CMP_ID = @CMP_ID   
      AND LT.EMP_ID IN (SELECT DISTINCT EMP_ID FROM #ATT_MUSTER_EXCEL)  
      AND LM.LEAVE_CODE IN (SELECT DISTINCT LEAVE_CODE FROM #EMP_LEAVE1)  
   GROUP BY LT.EMP_ID, LM.LEAVE_CODE  
   ORDER BY LT.EMP_ID, LEAVE_CODE  
     
   --ADDED BY NIMESH 10-JUL-2015 (OD LEAVE SHOULD NOT BE DISPLAYED IN NORMAL LEAVE COLUMN)  
   IF @IS_WHOSOFF = 0 --OD LEAVE DISPLAY IN NORMAL LEAVE COLUMN FOR HOME PAGE WHOSEOFF --ANKIT 22082015  
    BEGIN  
     
     UPDATE  C   
     SET  L = CAST(CAST(L AS NUMERIC(18,2))- CAST(LU.LEAVE_USED AS NUMERIC(18,2)) AS VARCHAR)  
     FROM #CROSSTAB C   
       INNER JOIN (  
           SELECT ISNULL(SUM(CASE WHEN LM.LEAVE_CODE = 'COMP' THEN LT.COMPOFF_USED ELSE LT.LEAVE_USED END),0) AS LEAVE_USED, EMP_ID  
           FROM T0140_LEAVE_TRANSACTION LT WITH (NOLOCK) INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK)  
             ON LT.LEAVE_ID=LM.LEAVE_ID AND LT.CMP_ID=LM.CMP_ID  
           WHERE (LT.FOR_DATE BETWEEN @FROM_DATE AND @TO_DATE) AND LT.CMP_ID=@CMP_ID  
             AND (LT.LEAVE_USED <> 0 OR LT.COMPOFF_USED <> 0) AND (LM.LEAVE_TYPE = 'COMPANY PURPOSE') -- OR LM.DEFAULT_SHORT_NAME='COMP')  
           GROUP BY EMP_ID  
          ) LU ON C.EMP_ID=LU.EMP_ID And C.CODE > '0' --Condition added by hardik for Code > 0 as it is giving error 04/01/2016   
     WHERE L <> ''  
    END  
  END  
 ELSE  
  BEGIN  
     
   SELECT EMP_ID, LEAVE_CODE,isnull(SUM(Leave_Used),0) AS LeaveDays --case when LM.Apply_Hourly =1 then COUNT(LT.Leave_ID) --Added Condition by Sumit on 15092016  
            -- Else isnull(SUM(Leave_Used),0) End AS LeaveDays --ISNULL(SUM(LEAVE_USED),0) AS LEAVEDAYS  
   INTO #EMP_LEAVE2     
   FROM    T0140_LEAVE_TRANSACTION LT WITH (NOLOCK)  
     INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK) ON LT.LEAVE_ID = LM.LEAVE_ID  
   WHERE   (FOR_DATE BETWEEN @FROM_DATE AND @TO_DATE) AND LT.CMP_ID = @CMP_ID   
     AND LT.LEAVE_USED <> 0  
     AND EXISTS (SELECT DISTINCT EMP_ID FROM #ATT_MUSTER_EXCEL EXL WHERE EXL.EMP_ID=LT.Emp_ID)  
     AND LM.LEAVE_CODE NOT IN ('OD','COMP')   
   GROUP BY EMP_ID, LEAVE_CODE--,Apply_Hourly  
   ORDER BY EMP_ID, LEAVE_CODE  
  END  
   
     
      
  --------------------------- END -------------------------------  
   
  DECLARE @STRUPDATE VARCHAR(8000)  
  DECLARE @LEVNAME VARCHAR(8000)  
  DECLARE @LEVNAME_OP VARCHAR(8000)  
  DECLARE @LEVNAME_CL VARCHAR(8000)  
  DECLARE @FIELDNAM VARCHAR(MAX)  
  DECLARE @FIELDNAM_OP VARCHAR(MAX)  
  DECLARE @FIELDNAM_CL VARCHAR(MAX)  
  DECLARE @FIELDNAM_COM VARCHAR(MAX)  
    
  
  DECLARE @LEAVENAME VARCHAR(100)  
  DECLARE @STRVAL NVARCHAR(500)  
    
  --DECLARE ALTER_TABLE_CURSOR CURSOR FOR   
  DECLARE @Leave_Type as VARCHAR(30)  
  IF ISNULL(@OD_COMOFF_SETTING,0) = 0  
   BEGIN  
    DECLARE ALTER_TABLE_CURSOR CURSOR FOR   
    SELECT  LV.LEAVE_CODE,LV.Leave_Type FROM DBO.T0040_LEAVE_MASTER  AS LV WITH (NOLOCK)  
    INNER JOIN ( SELECT LEAVE_CODE  FROM #EMP_LEAVE1 GROUP BY LEAVE_CODE   
      HAVING SUM (LEAVEDAYS) >0  
    ) AS TL  
    ON LV.LEAVE_CODE = TL.LEAVE_CODE  
    WHERE CMP_ID = @CMP_ID  
    ORDER BY LV.LEAVE_SORTING_NO --LV.LEAVE_CODE  
   END  
  ELSE  
   BEGIN  
    DECLARE ALTER_TABLE_CURSOR CURSOR FOR   
    SELECT  LV.LEAVE_CODE,LV.Leave_Type FROM DBO.T0040_LEAVE_MASTER  AS LV WITH (NOLOCK)  
    INNER JOIN ( SELECT LEAVE_CODE  FROM #EMP_LEAVE2 GROUP BY LEAVE_CODE   
      HAVING SUM (LEAVEDAYS) >0  
    ) AS TL  
    ON LV.LEAVE_CODE = TL.LEAVE_CODE  
    WHERE CMP_ID = @CMP_ID  
    AND LV.LEAVE_CODE NOT IN ('OD','COMP')   
    ORDER BY LV.LEAVE_SORTING_NO --LV.LEAVE_CODE  
   END  
       
  
  OPEN ALTER_TABLE_CURSOR  
  
  FETCH NEXT FROM ALTER_TABLE_CURSOR INTO @LEAVENAME,@Leave_Type  
  
  WHILE @@FETCH_STATUS = 0  
   BEGIN  
    IF NOT(ISNULL(@OD_COMOFF_SETTING,0) = 1 and @Leave_Type='Company Purpose') --Mukti(27032017)  
     BEGIN  
      SET @STRVAL = 'ALTER TABLE  #EMPLAVEDETAIL ADD ['+ @LEAVENAME +'_OPENING] NUMERIC(22,2) DEFAULT 0 NOT NULL'  
      EXEC (@STRVAL)  
      SET @STRVAL = 'ALTER TABLE  #EMPLAVEDETAIL ADD ['+ @LEAVENAME +'] NUMERIC(22,2) DEFAULT 0 NOT NULL'  
      EXEC (@STRVAL)   
      SET @STRVAL = 'ALTER TABLE  #EMPLAVEDETAIL ADD ['+ @LEAVENAME +'_CLOSING] NUMERIC(22,2) DEFAULT 0 NOT NULL'  
      EXEC (@STRVAL)  
          
      SET @LEVNAME = ISNULL(@LEVNAME,'') + '['+ @LEAVENAME +']' +','  
      SET @LEVNAME_OP = ISNULL(@LEVNAME_OP,'') + '['+ @LEAVENAME +'_OPENING]' +','  
      SET @LEVNAME_CL = ISNULL(@LEVNAME_CL,'') + '['+ @LEAVENAME +'_CLOSING]' +','  
      SET @FIELDNAM = ISNULL(@FIELDNAM,'') + 'ISNULL(['+ @LEAVENAME +'],0) AS '+ @LEAVENAME + ','  
      SET @FIELDNAM_OP = ISNULL(@FIELDNAM_OP,'') + 'ISNULL(['+ @LEAVENAME +'_OPENING],0) AS '+ @LEAVENAME + '_OPENING,'  
      SET @FIELDNAM_CL = ISNULL(@FIELDNAM_CL,'') + 'ISNULL(['+ @LEAVENAME +'_CLOSING],0) AS '+ @LEAVENAME + '_CLOSING,'  
      SET @FIELDNAM_COM = ISNULL(@FIELDNAM_COM,'') + 'ISNULL(['+ @LEAVENAME +'_OPENING],0) AS '+ @LEAVENAME + '_OPENING,'  
           + 'ISNULL(['+ @LEAVENAME +'],0) AS '+ @LEAVENAME + ','  
           + 'ISNULL(['+ @LEAVENAME +'_CLOSING],0) AS '+ @LEAVENAME + '_CLOSING,'  
  
     END     
    FETCH NEXT FROM ALTER_TABLE_CURSOR INTO  @LEAVENAME,@Leave_Type  
   END   
  CLOSE ALTER_TABLE_CURSOR;  
  DEALLOCATE ALTER_TABLE_CURSOR;  
    
  SET @LEVNAME = LEFT(@LEVNAME,LEN(@LEVNAME)-1)  
  SET @LEVNAME_OP = LEFT(@LEVNAME_OP,LEN(@LEVNAME_OP)-1)  
  SET @LEVNAME_CL = LEFT(@LEVNAME_CL,LEN(@LEVNAME_CL)-1)  
  SET @FIELDNAM = LEFT(@FIELDNAM,LEN(@FIELDNAM)-1)  
  SET @FIELDNAM_OP = LEFT(@FIELDNAM_OP,LEN(@FIELDNAM_OP)-1)  
  SET @FIELDNAM_CL = LEFT(@FIELDNAM_CL,LEN(@FIELDNAM_CL)-1)  
  SET @FIELDNAM_COM = LEFT(@FIELDNAM_COM,LEN(@FIELDNAM_COM)-1)  
    
    
  IF ISNULL(@OD_COMOFF_SETTING,0) = 0  
   BEGIN     
    SET @QRY = ' INSERT INTO #EMPLAVEDETAIL  
       (IEmp_ID, ' +@LEVNAME_OP  + ','  +@LEVNAME + ',' +@LEVNAME_CL  + ')  
       SELECT EMP_ID '  
       + CASE WHEN ISNULL(@FIELDNAM_OP,'') <> '' THEN ',' ELSE '' END   
       + ''+ISNULL(@FIELDNAM_OP,'') +  
       + CASE WHEN ISNULL(@FIELDNAM,'') <> '' THEN ',' ELSE '' END   
       + ISNULL(@FIELDNAM,'') +  
       + CASE WHEN ISNULL(@FIELDNAM_CL,'') <> '' THEN ',' ELSE '' END   
       + ''+ISNULL(@FIELDNAM_CL,'') +  
       ' FROM #EMP_LEAVE1  
       PIVOT (SUM (LEAVEDAYS) FOR LEAVE_CODE IN ('+@LEVNAME+ ',' +@LEVNAME_OP  + ',' +@LEVNAME_CL  + ')) AS EMPDATA  
       ORDER BY EMP_ID '  
   END  
  ELSE  
   BEGIN  
    SET @QRY = ' INSERT INTO #EMPLAVEDETAIL SELECT EMP_ID,0 '  
       + CASE WHEN ISNULL(@FIELDNAM,'') <> '' THEN ',' ELSE '' END   
       + ISNULL(@FIELDNAM,'') +  
       ',0 FROM #EMP_LEAVE2  
       PIVOT (SUM (LEAVEDAYS) FOR LEAVE_CODE IN ('+@LEVNAME+')) AS EMPDATA   
       ORDER BY EMP_ID '  
   END  
   
  EXEC (@QRY)    
   
  --IF OBJECT_ID('tempdb..#EMPLAVEDETAIL') IS NOT NULL  
  -- BEGIN  
  --  DECLARE @COUNT1 INT  
  --  DECLARE @COUNT2 INT  
  --  SET @COUNT2 = 1  
  --  SELECT @COUNT1 = COUNT(1) FROM #EMP_LEAVE1 WHERE LEAVE_CODE LIKE '%_OPENING%' GROUP BY LEAVE_CODE  
      
  --  SELECT  LEAVE_CODE FROM #EMP_LEAVE1 WHERE LEAVE_CODE LIKE '%_OPENING%' GROUP BY LEAVE_CODE  
      
  --  WHILE @COUNT2 <= @COUNT1   
  --   BEGIN  
  --    SELECT 111  
  --    SET @COUNT2 = @COUNT2 + 1  
  --   END  
  -- END 
  
     ---added by mansi start 16-11-21       
   UPDATE C   
   SET  PAYABLE_PRESENT_DAYS = cast(P as numeric(18,2))-cast(LC as numeric(18,2))  
   FROM #CROSSTAB C      
   INNER JOIN #EMP_ATTENDANCE EA ON C.EMP_ID=EA.EMP_ID  
 ---added by mansi end 16-11-21     
              
  INSERT INTO #EMPDATA (EMP_ID,ICODE,PAYABLE_PRESENT_DAYS ,PAYABLE_DAYS,EARLY_DEDUCT_DAYS)  
  SELECT EMP_ID,CODE,PAYABLE_PRESENT_DAYS,PAYABLE_DAYS,EARLY_DEDUCT_DAYS  FROM #CROSSTAB  
    
  ALTER TABLE  #CROSSTAB DROP COLUMN LATE_WITH_LEAVE  
    
  /* START */  
    
  ALTER TABLE  #EMPLAVEDETAIL ADD DESIGNAME VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS;  
  ALTER TABLE  #EMPDATA ADD DESIGNAME VARCHAR(50) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS;  
  ALTER TABLE  #EMPLAVEDETAIL ADD EMPNAME VARCHAR(100) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS;  
  ALTER TABLE  #EMPDATA ADD EMPNAME VARCHAR(100) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS;  
  ----added jimit 18072016  for whose off---------------  
  ALTER TABLE  #EMPDATA ADD Branch_Id NUMERIC(18,0)   
  ALTER TABLE  #EMPDATA ADD Dept_Id NUMERIC(18,0)   
  
  ALTER TABLE  #EMPDATA ADD CTC NUMERIC(18,2)   
  ALTER TABLE  #EMPDATA ADD GROSS_SALARY NUMERIC(18,2)   
  ALTER TABLE  #EMPDATA ADD DATE_OF_BIRTH DATETIME  
  ALTER TABLE  #EMPDATA ADD REPORTING_MANAGER VARCHAR(500)  
  
  
  UPDATE #EMPLAVEDETAIL   
  SET DESIGNAME =  (  
       CASE WHEN D.DESIG_DIS_NO = 0   
        THEN DESIG_NAME   
       ELSE  
        RIGHT(REPLICATE('0',21) + CAST(D.DESIG_DIS_NO AS VARCHAR), 21)   
       END  
       ),EMPNAME = EM.EMP_FIRST_NAME  
  FROM #EMPLAVEDETAIL T   
  INNER JOIN T0080_EMP_MASTER EM ON T.IEMP_ID = EM.EMP_ID   
  INNER JOIN (SELECT EMP_ID, INCREMENT_ID, I1.DESIG_ID  
       FROM T0095_INCREMENT I1 WITH (NOLOCK)  
       WHERE I1.INCREMENT_ID=(SELECT TOP 1 I2.INCREMENT_ID  
              FROM T0095_INCREMENT I2 WITH (NOLOCK)  
              WHERE I1.EMP_ID=I2.EMP_ID AND I1.CMP_ID=I2.CMP_ID  
                AND I2.INCREMENT_EFFECTIVE_DATE <= @TO_DATE  
              ORDER BY I2.INCREMENT_EFFECTIVE_DATE DESC, I2.INCREMENT_ID DESC  
             )  
         AND I1.CMP_ID=@CMP_ID  
       ) I  ON T.IEMP_ID=I.EMP_ID  
    INNER JOIN T0040_DESIGNATION_MASTER D WITH (NOLOCK) ON D.DESIG_ID=I.DESIG_ID  
      
  UPDATE #EMPDATA   
  SET DESIGNAME =  (  
       CASE WHEN D.DESIG_DIS_NO = 0   
        THEN DESIG_NAME   
       ELSE  
        RIGHT(REPLICATE('0',21) + CAST(D.DESIG_DIS_NO AS VARCHAR), 21)   
       END  
       ),EMPNAME = EM.EMP_FIRST_NAME,Branch_ID = I.Branch_ID,Dept_ID = I.Dept_ID,  
       CTC = I.CTC, GROSS_SALARY = I.Gross_Salary, DATE_OF_BIRTH = EM.Date_Of_Birth,  
       REPORTING_MANAGER=ERM.Alpha_Emp_Code +'-'+ ERM.Emp_Full_Name  
  FROM #EMPDATA T   
    INNER JOIN T0080_EMP_MASTER EM ON T.EMP_ID=EM.EMP_ID -- T.ICODE = EM.ALPHA_EMP_CODE COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS                  
    INNER JOIN (SELECT I1.EMP_ID,I1.INCREMENT_ID, I1.DESIG_ID,I1.Branch_ID,I1.Dept_ID, I1.CTC,I1.Gross_Salary  
       FROM T0095_INCREMENT I1  WITH (NOLOCK)   
       WHERE I1.INCREMENT_ID=(SELECT TOP 1 I2.INCREMENT_ID  
              FROM T0095_INCREMENT I2 WITH (NOLOCK)  
              WHERE I1.EMP_ID=I2.EMP_ID AND I1.CMP_ID=I2.CMP_ID  
                AND I2.INCREMENT_EFFECTIVE_DATE <= @TO_DATE  
              ORDER BY I2.INCREMENT_EFFECTIVE_DATE DESC, I2.INCREMENT_ID DESC  
             )  
         AND I1.CMP_ID=@CMP_ID  
       ) I  ON EM.EMP_ID=I.EMP_ID  
    INNER JOIN T0040_DESIGNATION_MASTER D WITH (NOLOCK) ON D.DESIG_ID=I.DESIG_ID    
    INNER JOIN DBO.fn_getReportingManager(@CMP_ID,@EMP_ID,@TO_DATE) RM ON RM.Emp_ID=EM.Emp_ID --Mukti(30122020)  
    INNER JOIN T0080_EMP_MASTER ERM WITH (NOLOCK) ON RM.R_Emp_ID=ERM.Emp_ID   
    
  /* END   */  
    
     
  --ADDED BY NIMESH 10-JUL-2015 (TO SORT BY CODE/NAME/ENROLL NO)  
  IF @ORDER_BY = ''  OR @ORDER_BY = 'CODE'  
   SET @ORDER_BY = '(CASE WHEN ISNUMERIC(CODE) = 1   
          THEN RIGHT(REPLICATE(''0'',21) + CODE, 20)            
         ELSE   
          CODE  
        END) '  
  ELSE IF @ORDER_BY = 'EMPLOYEENAME'  
   SET @ORDER_BY = 'EMPNAME ' + ', (CASE WHEN ISNUMERIC(CODE) = 1   
          THEN RIGHT(REPLICATE(''0'',21) + CODE, 20)            
         ELSE   
          CODE  
        END)'  
  ELSE  
   SET @ORDER_BY = @ORDER_BY + ', (CASE WHEN ISNUMERIC(CODE) = 1   
          THEN RIGHT(REPLICATE(''0'',21) + CODE, 20)            
         ELSE   
          CODE  
        END) '  
    
  --IF @COUNT = 0   
  -- SELECT @COUNT = COUNT(1) FROM #CROSSTAB  
     
  DECLARE @ABSENT_LWP_QUERY AS VARCHAR(MAX);  
  IF CHARINDEX('LWP', @FIELDNAM) > 0  
   SET @ABSENT_LWP_QUERY = 'UPDATE #CROSSTABDATA SET A=ISNULL(A,0) + ISNULL(LWP,0)'  
  ELSE  
   SET @ABSENT_LWP_QUERY = '';  
  
       
   SET @QRY = 'SELECT  ROW_NUMBER() OVER(ORDER BY ' + @ORDER_BY + ' ASC) AS SR_NO1,C.*'+  
        + CASE WHEN ISNULL(@FIELDNAM_COM,'') <> '' THEN ',' ELSE '' END   
        + ISNULL(@FIELDNAM_COM,'') +  
        ' INTO #CROSSTABDATA   
      FROM  #CROSSTAB AS C   
        LEFT OUTER JOIN #EMPLAVEDETAIL AS EL ON C.EMP_ID = EL.IEMP_ID  
     ORDER BY ' + @ORDER_BY + '  
     --ORDER BY CASE WHEN ISNUMERIC(REPLACE(REPLACE(CODE,''="'',''''),''"'','''')) = 1 THEN RIGHT(REPLICATE(''0'',21) + REPLACE(REPLACE(CODE,''="'',''''),''"'',''''), 20)  
     --      WHEN ISNUMERIC(REPLACE(REPLACE(CODE,''="'',''''),''"'','''')) = 0 THEN LEFT(REPLACE(REPLACE(CODE,''="'',''''),''"'','''') + REPLICATE('''',21), 20)  
     --      ELSE REPLACE(REPLACE(CODE,''="'',''''),''"'','''') END   
      
     --ALTER TABLE   #CROSSTABDATA DROP COLUMN EMP_ID  
     --ALTER TABLE   #CROSSTABDATA DROP COLUMN IEMP_ID  
     --ALTER TABLE   #CROSSTABDATA DROP COLUMN ID_NUM  
     --ALTER TABLE   #CROSSTABDATA DROP COLUMN L  
     --ALTER TABLE   #CROSSTABDATA DROP COLUMN LC  
  
     ALTER TABLE   #CROSSTABDATA DROP COLUMN PAYABLE_PRESENT_DAYS  
     ALTER TABLE   #CROSSTABDATA DROP COLUMN PAYABLE_DAYS  
     ALTER TABLE   #CROSSTABDATA DROP COLUMN EARLY_DEDUCT_DAYS  
     ALTER TABLE   #CROSSTABDATA DROP COLUMN WO_HO_DAY  
       
     --SELECT  STATUS_2  AS DAY(FOR_DATE)  FROM #CROSSTABDATA CT INNER JOIN   
     --#DAY_STATUS DS ON DS.EMP_CODE = CT.CODE  
     --WHERE STATUS_2 = ''LC''  
       
       
     SELECT ROW_NUMBER() OVER(ORDER BY ' + @ORDER_BY + ' ASC) AS SR_NO,C.* ,ED.PAYABLE_PRESENT_DAYS,ED.EARLY_DEDUCT_DAYS,ED.PAYABLE_DAYS,  
      CASE WHEN SR_NO1 = 1 THEN NULL ELSE (' + CAST((DATEDIFF(DD, @FROM_DATE, @TO_DATE) + 1) AS VARCHAR) + ') END AS MONTH_DAYS  
     ,Ed.Branch_Id,Ed.dept_Id,ED.CTC, ED.GROSS_SALARY, CAST(ED.DATE_OF_BIRTH AS VARCHAR(11)) AS DATE_OF_BIRTH,REPORTING_MANAGER  
     INTO #TEMP  
     FROM #CROSSTABDATA AS C LEFT OUTER JOIN #EMPDATA AS ED ON C.CODE = ED.ICODE  
     ORDER BY SR_NO  
  
     ALTER TABLE  #TEMP DROP COLUMN SR_NO1   
       
     IF @IS_WHOSOFF <> 1  
      Begin   
       ALTER TABLE  #TEMP DROP COLUMN Branch_Id  
       ALTER TABLE  #TEMP DROP COLUMN dept_Id  
       ALTER TABLE  #TEMP DROP COLUMN Emp_ID  
      End  
       
     SELECT * FROM #TEMP  
       
     DROP TABLE #TEMP  
     DROP TABLE #CROSSTAB  
     '  
  
  
  --' + @ORDER_BY + '  
  --EXEC (@QRY)   
  EXEC sp_executesql @QRY, N'@IS_WHOSOFF TINYINT', @IS_WHOSOFF  
    
  IF @IS_WHOSOFF = 1   
   BEGIN  
     
    DECLARE @LEAVE_FOOTER VARCHAR(5000)  
    SET @LEAVE_FOOTER = ''  
       
    SELECT  @LEAVE_FOOTER = STUFF((SELECT ' ' + S.LEAVE_NAME COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS + CASE WHEN APPLY_HOURLY=1 THEN ' (HOURLY) ' ELSE '' END  FROM  ---APPLY HOURLY ADDED BY SID 18/06/2014  
    ( SELECT ('  ' + '<B>' + UPPER(LM.LEAVE_CODE COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS) +  '</B>' + ' : '  + LOWER(LM.LEAVE_NAME COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS) + ' ' ) AS LEAVE_NAME,CMP_ID,APPLY_HOURLY FROM T0040_LEAVE_MASTER LM WITH (NOLOCK) INNER
 JOIN  
     #LEAVE_CODE LC ON UPPER(LM.LEAVE_CODE COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS) =   UPPER(LC.LEAVE_CODE)  
    )  
    S WHERE S.CMP_ID = T.CMP_ID FOR XML PATH('')),1,1,'')  FROM T0040_LEAVE_MASTER AS T WITH (NOLOCK)  
     WHERE T.CMP_ID=@CMP_ID GROUP BY T.CMP_ID  
      
    SELECT  @LEAVE_FOOTER AS LEAVE_FOOTER   
     
    
    IF (@PAGE_SIZE > 0)  
     SELECT CAST(@COUNT AS INT) AS RECORD_COUNT, CEILING(@COUNT / @PAGE_SIZE) As Page_Count  
    ELSE   
     SELECT CAST(@COUNT AS INT) AS RECORD_COUNT, 1 As Page_Count  
  
    --select * from #ATT_MUSTER_EXCEL  
  
    select  LP.Emp_ID,LP.FOR_DATE, Leave_Code,Leave_Status,Case When Leave_Status = 'Pending' Then '#e69494' Else 'Transperent' End BgColor,  
      '<li>  
       '+ Leave_Name + ' Applied for ' +  
        Case When Isnull(leave_out_Time , '1900-01-01') <> '1900-01-01' AND Leave_Assign_As = 'Part Day' Then  
         IsNull(Leave_Assign_As,'') + ' From ' + convert(varchar(5), Leave_Out_Time, 108) + ' To ' + convert(varchar(5), leave_In_time, 108)   
         When Isnull(Half_Leave_Date, '1900-01-01') = LP.For_Date  Then  
          IsNull(Leave_Assign_As,'') + ' '   
         When Isnull(Half_Leave_Date, '1900-01-01') <> LP.For_Date and Isnull(Half_Leave_Date, '1900-01-01') <> '1900-01-01' Then  
          ' Full Day '   
         Else   
          ' From ' + convert(varchar(10), From_Date, 103) + ' To ' + convert(varchar(10), To_Date, 103)   
        End + ' Reason: ' + IsNull(Leave_Reason,'') + ' - ' + Leave_Status + '  
      </li>' As Html  
    from #ATT_MUSTER_EXCEL EX  
      INNER JOIN (SELECT EX1.Emp_ID, Ex1.For_Date,LAD.From_Date, LAD.To_Date, LM.Leave_Code,LM.Leave_Name, LM.Leave_Type, LAD.Leave_Reason,   
           LAD.Leave_Assign_As, LAD.Leave_Out_Time, LAD.leave_In_time,LAD.Half_Leave_Date As Half_Leave_Date, 'Pending' As Leave_Status  
         FROM T0100_LEAVE_APPLICATION LA WITH (NOLOCK)  
           INNER JOIN T0110_LEAVE_APPLICATION_DETAIL LAD WITH (NOLOCK) ON LA.Leave_Application_ID=LAD.Leave_Application_ID  
           INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK) ON LAD.Leave_ID=LM.Leave_ID  
           INNER JOIN #ATT_MUSTER_EXCEL EX1 ON EX1.EMP_ID=LA.Emp_ID AND EX1.FOR_DATE BETWEEN LAD.From_Date AND LAD.To_Date             
         WHERE LA.Application_Status = 'P' AND Case WHEN LA.M_Cancel_WO_HO = 1 AND EX1.WO_HO<>'' Then 0 Else 1 End = 1  
         UNION ALL  
         SELECT EX1.Emp_ID, Ex1.For_Date,LAD.From_Date, LAD.To_Date, LM.Leave_Code,LM.Leave_Name, LM.Leave_Type, LAD.Leave_Reason,   
           LAD.Leave_Assign_As, LAD.Leave_Out_Time, LAD.leave_In_time,LAD.Half_Leave_Date As Half_Leave_Date, 'Approved' As Leave_Status  
         FROM T0120_LEAVE_APPROVAL LA WITH (NOLOCK)  
           INNER JOIN T0130_LEAVE_APPROVAL_DETAIL LAD WITH (NOLOCK) ON LA.Leave_Approval_ID=LAD.Leave_Approval_ID  
           INNER JOIN T0040_LEAVE_MASTER LM WITH (NOLOCK) ON LAD.Leave_ID=LM.Leave_ID  
           INNER JOIN #ATT_MUSTER_EXCEL EX1 ON EX1.EMP_ID=LA.Emp_ID AND EX1.FOR_DATE BETWEEN LAD.From_Date AND LAD.To_Date             
         WHERE LA.Approval_Status <> 'R' AND Case WHEN LA.M_Cancel_WO_HO = 1 AND EX1.WO_HO<>'' Then 0 Else 1 End = 1  
           AND NOT EXISTS(SELECT 1 FROM T0150_LEAVE_CANCELLATION LC WITH (NOLOCK) WHERE LA.Leave_Approval_ID=LC.Leave_Approval_id AND EX1.FOR_DATE=LC.For_date)  
         ) LP ON Ex.EMP_ID=LP.EMP_ID AND Ex.FOR_DATE=LP.FOR_DATE  
    Where Ex.For_date Between @FROM_DATE and @TO_DATE  
  
     END   
        
  -------------------------------- END ----------------------------------  
    