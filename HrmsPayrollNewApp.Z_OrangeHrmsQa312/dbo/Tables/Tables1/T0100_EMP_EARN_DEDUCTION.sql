CREATE TABLE [dbo].[T0100_EMP_EARN_DEDUCTION] (
    [AD_TRAN_ID]          NUMERIC (18)    NOT NULL,
    [CMP_ID]              NUMERIC (18)    NOT NULL,
    [EMP_ID]              NUMERIC (18)    NOT NULL,
    [AD_ID]               NUMERIC (18)    NOT NULL,
    [INCREMENT_ID]        NUMERIC (18)    NOT NULL,
    [FOR_DATE]            DATETIME        NOT NULL,
    [E_AD_FLAG]           CHAR (1)        NOT NULL,
    [E_AD_MODE]           VARCHAR (10)    NOT NULL,
    [E_AD_PERCENTAGE]     NUMERIC (18, 5) NOT NULL,
    [E_AD_AMOUNT]         NUMERIC (18, 4) NOT NULL,
    [E_AD_MAX_LIMIT]      NUMERIC (18)    NOT NULL,
    [E_AD_YEARLY_AMOUNT]  NUMERIC (18, 2) CONSTRAINT [DF_T0100_EMP_EARN_DEDUCTION_E_AD_YEARLY_AMOUNT] DEFAULT ((0)) NOT NULL,
    [It_Estimated_Amount] NUMERIC (18, 2) CONSTRAINT [DF_T0100_EMP_EARN_DEDUCTION_It_Estimated_Amount] DEFAULT ((0)) NOT NULL,
    [Is_Calculate_Zero]   TINYINT         CONSTRAINT [DF_T0100_EMP_EARN_DEDUCTION_Is_Calculate_Zero] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [PK_T0100_EMP_EARN_DEDUCTION] PRIMARY KEY CLUSTERED ([AD_TRAN_ID] ASC),
    CONSTRAINT [FK_T0100_EMP_EARN_DEDUCTION_T0010_COMPANY_MASTER] FOREIGN KEY ([CMP_ID]) REFERENCES [dbo].[T0010_COMPANY_MASTER] ([Cmp_Id]),
    CONSTRAINT [FK_T0100_EMP_EARN_DEDUCTION_T0050_AD_MASTER] FOREIGN KEY ([AD_ID]) REFERENCES [dbo].[T0050_AD_MASTER] ([AD_ID]),
    CONSTRAINT [FK_T0100_EMP_EARN_DEDUCTION_T0080_EMP_MASTER] FOREIGN KEY ([EMP_ID]) REFERENCES [dbo].[T0080_EMP_MASTER] ([Emp_ID]),
    CONSTRAINT [FK_T0100_EMP_EARN_DEDUCTION_T0095_INCREMENT] FOREIGN KEY ([INCREMENT_ID]) REFERENCES [dbo].[T0095_INCREMENT] ([Increment_ID])
);


GO
CREATE NONCLUSTERED INDEX [ix_T0100_EMP_EARN_DEDUCTION_INCREMENT_ID]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([INCREMENT_ID] ASC)
    INCLUDE([EMP_ID], [AD_ID], [FOR_DATE], [E_AD_FLAG], [E_AD_PERCENTAGE], [E_AD_AMOUNT]);


GO
CREATE NONCLUSTERED INDEX [IX_T0100_EMP_EARN_DEDUCTION_SP_IT_TAX_PREPARATION1]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([EMP_ID] ASC, [FOR_DATE] ASC)
    INCLUDE([AD_ID], [INCREMENT_ID]) WITH (FILLFACTOR = 90);


GO
CREATE NONCLUSTERED INDEX [IX_T0100_EMP_EARN_DEDUCTION_SP_IT_TAX_PREPARATION2]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([CMP_ID] ASC)
    INCLUDE([EMP_ID], [AD_ID], [INCREMENT_ID], [FOR_DATE], [E_AD_PERCENTAGE], [E_AD_AMOUNT], [Is_Calculate_Zero]) WITH (FILLFACTOR = 90);


GO
CREATE STATISTICS [_dta_stat_482100758_1_3_5_4]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([AD_TRAN_ID], [EMP_ID], [INCREMENT_ID], [AD_ID]);


GO
CREATE STATISTICS [_dta_stat_139147541_7_5_1_3]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([E_AD_FLAG], [INCREMENT_ID], [AD_TRAN_ID], [EMP_ID]);


GO
CREATE STATISTICS [_dta_stat_139147541_6_1_3_4]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([FOR_DATE], [AD_TRAN_ID], [EMP_ID], [AD_ID]);


GO
CREATE STATISTICS [_dta_stat_139147541_4_1_6]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([AD_ID], [AD_TRAN_ID], [FOR_DATE]);


GO
CREATE STATISTICS [_dta_stat_2139154666_2_4_5]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([CMP_ID], [AD_ID], [INCREMENT_ID]);


GO
CREATE STATISTICS [_dta_stat_2139154666_5_2]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([INCREMENT_ID], [CMP_ID]);


GO
CREATE STATISTICS [_dta_stat_2139154666_5_1_2]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([INCREMENT_ID], [AD_TRAN_ID], [CMP_ID]);


GO
CREATE STATISTICS [_dta_stat_2139154666_6_3_4_7]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([FOR_DATE], [EMP_ID], [AD_ID], [E_AD_FLAG]);


GO
CREATE STATISTICS [_dta_stat_2139154666_2_4_5_1]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([CMP_ID], [AD_ID], [INCREMENT_ID], [AD_TRAN_ID]);


GO
CREATE STATISTICS [_dta_stat_2139154666_3_4_7_1_6]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([EMP_ID], [AD_ID], [E_AD_FLAG], [AD_TRAN_ID], [FOR_DATE]);


GO
CREATE STATISTICS [IS_T0100_EMP_EARN_DEDUCTION_E_E]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([E_AD_FLAG], [EMP_ID]);


GO
CREATE STATISTICS [IS_T0100_EMP_EARN_DEDUCTION_I_E]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([AD_ID], [INCREMENT_ID], [EMP_ID]);


GO
CREATE STATISTICS [IS_T0100_EMP_EARN_DEDUCTION_I_E_A_A_E]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([INCREMENT_ID], [EMP_ID], [AD_TRAN_ID], [AD_ID], [E_AD_FLAG]);


GO
CREATE STATISTICS [IS_T0100_EMP_EARN_DEDUCTION_A_E]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([AD_TRAN_ID], [EMP_ID]);


GO
CREATE STATISTICS [IS_T0100_EMP_EARN_DEDUCTION_A_A_E]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([AD_TRAN_ID], [AD_ID], [EMP_ID]);


GO
CREATE STATISTICS [IS_T0100_EMP_EARN_DEDUCTION_A_I_E_C_E]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([AD_ID], [INCREMENT_ID], [EMP_ID], [CMP_ID], [E_AD_FLAG]);


GO
CREATE STATISTICS [IS_T0100_EMP_EARN_DEDUCTION_E_C_E]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([E_AD_FLAG], [CMP_ID], [EMP_ID]);


GO
CREATE STATISTICS [IS_T0100_EMP_EARN_DEDUCTION_A_C_E_E_E_A]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([AD_TRAN_ID], [CMP_ID], [EMP_ID], [INCREMENT_ID], [E_AD_FLAG], [AD_ID]);


GO
CREATE STATISTICS [IS_T0100_EMP_EARN_DEDUCTION_A_A_C_E_I]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([AD_TRAN_ID], [AD_ID], [CMP_ID], [EMP_ID], [INCREMENT_ID]);


GO
CREATE STATISTICS [IS_T0100_EMP_EARN_DEDUCTION_A_C_E_I_E_A]
    ON [dbo].[T0100_EMP_EARN_DEDUCTION]([AD_TRAN_ID], [CMP_ID], [EMP_ID], [INCREMENT_ID], [E_AD_FLAG], [AD_ID]);


GO



-- =============================================
-- Author:		Nimesh Parmar
-- Create date: 22-Jun-2018
-- Description:	To calculate the Special & ESIC amount (For Circular Reference)
-- =============================================
CREATE TRIGGER [dbo].[Trg_T0100_EMP_EARN_DEDUCTION]
   ON  [dbo].[T0100_EMP_EARN_DEDUCTION]
   AFTER INSERT,DELETE,UPDATE
AS 
BEGIN
	SET NOCOUNT ON;

	/*
		IF YOU NEED TO CREATE TABLE USE BELOW SCRIPT... HARDIK 16/03/2019
		
		CREATE TABLE CIRCULAR_REFERENCE (SETTING_ENABLE TINYINT)
	*/


	

	IF NOT EXISTS(SELECT 1 FROM SYS.SYSOBJECTS WHERE NAME ='CIRCULAR_REFERENCE' AND TYPE = 'U') --Hardik 16/03/2019 as Other client don't want to use Circular Reference, So When need this Trigger, so Create Circular_Reference Table
		RETURN;



    DECLARE @Cmp_ID			Numeric
    DECLARE @Emp_ID			Numeric
    DECLARE @For_Date		DateTime
    DECLARE @AD_ID			Numeric
    DECLARE @Increment_ID	Numeric
    
    IF EXISTS(SELECT 1 FROM DELETED)
		BEGIN
			SELECT	@AD_ID = AD_ID,@Increment_ID = Increment_ID, @Cmp_ID=Cmp_ID, @Emp_ID=Emp_ID, @For_Date=For_Date FROM INSERTED
		END
	ELSE
		BEGIN
			SELECT	@AD_ID = AD_ID,@Increment_ID = Increment_ID, @Cmp_ID=Cmp_ID, @Emp_ID=Emp_ID, @For_Date=For_Date FROM INSERTED
		END
		
	DECLARE @Is_CircularRef BIT
	SET @Is_CircularRef = 0
	
	IF EXISTS(SELECT 1 FROM T0050_AD_MASTER WHERE AD_ID=@AD_ID AND AD_DEF_ID IN (6 ,3,38)) -- IS ESIC
		AND EXISTS(SELECT 1 FROM dbo.fn_getEmpIncrementDetail(@Cmp_ID,@Emp_ID,@For_Date) EED 
						INNER JOIN T0050_AD_MASTER AD ON EED.AD_ID=AD.AD_ID
					WHERE AD_CALCULATE_ON='Arrears CTC') -- HAS Special Allowance Which Calculates On Arrear CTC
		SET @Is_CircularRef = 1
	ELSE IF EXISTS(SELECT 1 FROM T0050_AD_MASTER WHERE AD_ID=@AD_ID AND AD_CALCULATE_ON='Arrears CTC') -- Is Special Allowance Which Calculates On Arrear CTC
		AND EXISTS(SELECT 1 FROM dbo.fn_getEmpIncrementDetail(@Cmp_ID,@Emp_ID,@For_Date) EED 
						INNER JOIN T0050_AD_MASTER AD ON EED.AD_ID=AD.AD_ID
					WHERE AD_DEF_ID IN (6 ,3,38)) -- HAS ESIC
		SET @Is_CircularRef = 1
	
	IF @Is_CircularRef  = 0
		BEGIN
			IF EXISTS(SELECT	1 
					  FROM		T0060_EFFECT_AD_MASTER EAM
								INNER JOIN T0050_AD_MASTER AD ON EAM.AD_ID=AD.AD_ID
					  WHERE		EAM.EFFECT_AD_ID = @AD_ID
								AND AD.AD_CALCULATE_ON = 'Basic Salary'
					  )
				SET @Is_CircularRef  = 1
		END 
	
	IF @Is_CircularRef  = 0
		BEGIN
		
			IF EXISTS(SELECT	1 
					  FROM		T0060_EFFECT_AD_MASTER EAM
								INNER JOIN T0050_AD_MASTER AD ON EAM.EFFECT_AD_ID=AD.AD_ID
								INNER JOIN T0050_AD_MASTER AD2 ON EAM.AD_ID=AD2.AD_ID
					  WHERE		EAM.AD_ID = @AD_ID --If Inserted Allowance is Special Allowance (AND AD2.AD_CALCULATE_ON = 'Arrears CTC' )
								AND AD.AD_CALCULATE_ON = 'Basic Salary' --And Affected Allowance also affect each other indirectly (PF = Basic + Special, Special = Basic + Other Allowance)
								AND AD2.AD_CALCULATE_ON = 'Arrears CTC' 
					  )
				SET @Is_CircularRef  = 1
		END 
	
	IF @Is_CircularRef  = 0
		BEGIN
			IF EXISTS(SELECT	1 
					  FROM		T0050_AD_MASTER AD 
					  WHERE		AD_ID = @AD_ID AND AD.AD_CALCULATE_ON = 'Gross Salary'
					  )
				SET @Is_CircularRef  = 1
		END 
		
	IF @Is_CircularRef = 1
		BEGIN			
		
			EXEC P_UPDATE_CTC @Cmp_ID=@Cmp_ID, @Emp_ID=@Emp_ID, @For_Date=@For_Date, @AD_ID=@AD_ID
		END

END



